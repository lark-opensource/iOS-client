load('@build_bazel_rules_apple//apple:resources.bzl', 'apple_resource_group')
load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "IESPrefetch_pod_hdrs",
  srcs = [
    ":IESPrefetch_root_pod_hdrs",
    ":Tests_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "IESPrefetch_private_includes",
  include = [
    "external/IESPrefetch/pod_support/Headers/Private/IESPrefetch/"
  ],
  deps = [],
  external_name = "IESPrefetch"
)
gen_includes(
  name = "IESPrefetch_public_includes",
  include = [
    "external/IESPrefetch/pod_support/Headers/Public/IESPrefetch/"
  ],
  deps = [],
  external_name = "IESPrefetch"
)
filegroup(
  name = "_IESPrefetch_hdrs",
  srcs = [
    ":IESPrefetch_root_hdrs",
    ":Tests_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "IESPrefetch_xcode_hmapsource",
  hdrs = [
    ":_IESPrefetch_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "IESPrefetch_xcode_hmap",
  dep = ":IESPrefetch_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/IESPrefetch/*-bitsky-generated.modulemap", "pod_support/Headers/Public/IESPrefetch/*-bitsky-generated-umbrella.h"]))
gen_includes(
  name = "IESPrefetch_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "IESPrefetch",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "IESPrefetch_xcode_hmap_includes",
  include = [],
  include_files = [
    ":IESPrefetch_xcode_hmap"
  ],
  external_name = "IESPrefetch",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IESPrefetch_root_hdrs",
  srcs = [
    "IESPrefetch/Classes/Cache/IESPrefetchCacheProvider.h",
    "IESPrefetch/Classes/Cache/IESPrefetchCacheStorageProtocol.h",
    "IESPrefetch/Classes/Cache/IESPrefetchDefaultCacheStorage.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchAPIConfigResolver.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchAPITemplate.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchConfigResolver.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchConfigTemplate.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchOccasionConfigResolver.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchOccasionTemplate.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchProjectConfigResolver.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchProjectTemplate.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchRuleConfigResolver.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchRuleTemplate.h",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchTemplateOutput.h",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugBizViewController.h",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugTemplateViewController.h",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugTool.h",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugViewController.h",
    "IESPrefetch/Classes/IESPrefetch.h",
    "IESPrefetch/Classes/IESPrefetchDefines.h",
    "IESPrefetch/Classes/IESPrefetchLoaderProtocol.h",
    "IESPrefetch/Classes/IESPrefetchManager.h",
    "IESPrefetch/Classes/IESPrefetchMonitorService.h",
    "IESPrefetch/Classes/Loader/IESPrefetchLoader.h",
    "IESPrefetch/Classes/Loader/IESPrefetchLoaderEvent.h",
    "IESPrefetch/Classes/Loader/IESPrefetchLoaderPrivateProtocol.h",
    "IESPrefetch/Classes/Logger/IESPrefetchLogger.h",
    "IESPrefetch/Classes/Model/IESPrefetchAPIModel.h",
    "IESPrefetch/Classes/Model/IESPrefetchCacheModel.h",
    "IESPrefetch/Classes/Model/IESPrefetchJSNetworkRequestModel.h",
    "IESPrefetch/Classes/Model/IESPrefetchParamModel.h",
    "IESPrefetch/Classes/Model/IESPrefetchRequestModel.h",
    "IESPrefetch/Classes/Schema/IESFallbackSchemaResolver.h",
    "IESPrefetch/Classes/Schema/IESPrefetchFlatSchema+Private.h",
    "IESPrefetch/Classes/Schema/IESPrefetchFlatSchema.h",
    "IESPrefetch/Classes/Schema/IESPrefetchSchemaResolver.h",
    "IESPrefetch/Classes/Schema/IESSimpleSchemaResolver.h",
    "IESPrefetch/Classes/Schema/IESWebViewSchemaResolver.h",
    "IESPrefetch/Classes/Utils/IESPrefetchCacheModel+RequestModel.h",
    "IESPrefetch/Classes/Utils/IESPrefetchThreadSafeArray.h",
    "IESPrefetch/Classes/Utils/IESPrefetchThreadSafeDictionary.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IESPrefetch_root_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESPrefetch/IESFallbackSchemaResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetch.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchAPIConfigResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchAPIModel.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchAPITemplate.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchCacheModel+RequestModel.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchCacheModel.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchCacheProvider.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchCacheStorageProtocol.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchConfigResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchConfigTemplate.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchDebugBizViewController.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchDebugTemplateViewController.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchDebugTool.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchDebugViewController.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchDefaultCacheStorage.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchDefines.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchFlatSchema+Private.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchFlatSchema.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchJSNetworkRequestModel.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchLoader.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchLoaderEvent.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchLoaderPrivateProtocol.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchLoaderProtocol.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchLogger.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchManager.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchMonitorService.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchOccasionConfigResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchOccasionTemplate.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchParamModel.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchProjectConfigResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchProjectTemplate.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchRequestModel.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchRuleConfigResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchRuleTemplate.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchSchemaResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchTemplateOutput.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchThreadSafeArray.h",
    "pod_support/Headers/Private/IESPrefetch/IESPrefetchThreadSafeDictionary.h",
    "pod_support/Headers/Private/IESPrefetch/IESSimpleSchemaResolver.h",
    "pod_support/Headers/Private/IESPrefetch/IESWebViewSchemaResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESFallbackSchemaResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetch.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchAPIConfigResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchAPIModel.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchAPITemplate.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchCacheModel+RequestModel.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchCacheModel.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchCacheProvider.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchCacheStorageProtocol.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchConfigResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchConfigTemplate.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchDebugBizViewController.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchDebugTemplateViewController.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchDebugTool.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchDebugViewController.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchDefaultCacheStorage.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchDefines.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchFlatSchema+Private.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchFlatSchema.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchJSNetworkRequestModel.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchLoader.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchLoaderEvent.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchLoaderPrivateProtocol.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchLoaderProtocol.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchLogger.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchManager.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchMonitorService.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchOccasionConfigResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchOccasionTemplate.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchParamModel.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchProjectConfigResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchProjectTemplate.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchRequestModel.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchRuleConfigResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchRuleTemplate.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchSchemaResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchTemplateOutput.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchThreadSafeArray.h",
    "pod_support/Headers/Public/IESPrefetch/IESPrefetchThreadSafeDictionary.h",
    "pod_support/Headers/Public/IESPrefetch/IESSimpleSchemaResolver.h",
    "pod_support/Headers/Public/IESPrefetch/IESWebViewSchemaResolver.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "IESPrefetch_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "IESPrefetch_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "IESPrefetch_module_map",
  module_map = "pod_support/Headers/Public/IESPrefetch/IESPrefetch-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESPrefetch/IESPrefetch-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IESPrefetch_root_srcs",
  srcs = [
    "IESPrefetch/Classes/Schema/IESFallbackSchemaResolver.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchAPIConfigResolver.m",
    "IESPrefetch/Classes/Model/IESPrefetchAPIModel.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchAPITemplate.m",
    "IESPrefetch/Classes/Utils/IESPrefetchCacheModel+RequestModel.m",
    "IESPrefetch/Classes/Model/IESPrefetchCacheModel.m",
    "IESPrefetch/Classes/Cache/IESPrefetchCacheProvider.m",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugBizViewController.m",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugTemplateViewController.m",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugTool.m",
    "IESPrefetch/Classes/Debug/IESPrefetchDebugViewController.m",
    "IESPrefetch/Classes/Cache/IESPrefetchDefaultCacheStorage.m",
    "IESPrefetch/Classes/IESPrefetchDefines.m",
    "IESPrefetch/Classes/Schema/IESPrefetchFlatSchema.m",
    "IESPrefetch/Classes/Model/IESPrefetchJSNetworkRequestModel.m",
    "IESPrefetch/Classes/Loader/IESPrefetchLoader.m",
    "IESPrefetch/Classes/Loader/IESPrefetchLoaderEvent.m",
    "IESPrefetch/Classes/Logger/IESPrefetchLogger.m",
    "IESPrefetch/Classes/IESPrefetchManager.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchOccasionConfigResolver.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchOccasionTemplate.m",
    "IESPrefetch/Classes/Model/IESPrefetchParamModel.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchProjectConfigResolver.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchProjectTemplate.m",
    "IESPrefetch/Classes/Model/IESPrefetchRequestModel.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchRuleConfigResolver.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchRuleTemplate.m",
    "IESPrefetch/Classes/ConfigResolver/IESPrefetchTemplateOutput.m",
    "IESPrefetch/Classes/Utils/IESPrefetchThreadSafeArray.m",
    "IESPrefetch/Classes/Utils/IESPrefetchThreadSafeDictionary.m",
    "IESPrefetch/Classes/Schema/IESSimpleSchemaResolver.m",
    "IESPrefetch/Classes/Schema/IESWebViewSchemaResolver.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "IESPrefetch_oc",
  enable_modules = 1,
  srcs = [
    "IESPrefetch_root_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "IESPrefetch_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESPrefetch_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESPrefetch_private_includes",
    ":IESPrefetch_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@ByteDanceKit//:Foundation_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    "@ByteDanceKit//:Foundation_swift_interface",
    ":IESPrefetch_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map",
    "@ByteDanceKit//:Foundation_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESPrefetch_POD_VERSION=@\\\"9999_1.1.11\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "IESPrefetch",
  deps = [
    ":IESPrefetch_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "IESPrefetch_lib",
  deps = [
    ":IESPrefetch"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
apple_resource_group(
  name = "Tests_resource_group",
  resources = [
    "IESPrefetch/Tests/correct_project_config.json",
    "IESPrefetch/Tests/correct_rule_config.json",
    "IESPrefetch/Tests/correct_api_config.json",
    "IESPrefetch/Tests/legacy_config.json",
    "IESPrefetch/Tests/correct_occasion_config.json"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_hdrs",
  srcs = [
    "IESPrefetch/Tests/MemoryTestCacheStorage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESPrefetch/MemoryTestCacheStorage.h",
    "pod_support/Headers/Public/IESPrefetch/MemoryTestCacheStorage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Tests_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Tests_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Tests_module_map",
  module_map = "pod_support/Headers/Public/IESPrefetch/IESPrefetch_Tests-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESPrefetch/IESPrefetch_Tests-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_srcs",
  srcs = [
    "IESPrefetch/Tests/CacheTests.m",
    "IESPrefetch/Tests/ConfigResolveTests.m",
    "IESPrefetch/Tests/LoaderTests.m",
    "IESPrefetch/Tests/MemoryTestCacheStorage.m",
    "IESPrefetch/Tests/RequestModelTests.m",
    "IESPrefetch/Tests/SchemaResolverTests.m",
    "IESPrefetch/Tests/TestBundleHelper.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Tests_oc",
  enable_modules = 1,
  srcs = [
    "Tests_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Tests_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESPrefetch_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESPrefetch_private_includes",
    ":IESPrefetch_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDALog//:BDALog_objc_interface",
    "@Expecta//:Expecta_objc_interface",
    "@OCMock//:OCMock_objc_interface",
    "@Specta//:Specta_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@ByteDanceKit//:Foundation_objc_interface",
    "@BDALog//:BDALog_swift_interface",
    "@Expecta//:Expecta_swift_interface",
    "@OCMock//:OCMock_swift_interface",
    "@Specta//:Specta_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    "@ByteDanceKit//:Foundation_swift_interface",
    ":Tests_objc_interface",
    "@BDALog//:BDALog_module_map",
    "@Expecta//:Expecta_module_map",
    "@OCMock//:OCMock_module_map",
    "@Specta//:Specta_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map",
    "@ByteDanceKit//:Foundation_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESPrefetch_POD_VERSION=@\\\"9999_1.1.11\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  data = [
    ":Tests_resource_group"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Tests",
  deps = [
    ":Tests_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Tests_lib",
  deps = [
    ":Tests"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_IESPrefetch_module_map",
  module_map = "@IESPrefetch//:pod_support/Headers/Public/IESPrefetch/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@IESPrefetch//:pod_support/Headers/Public/IESPrefetch/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_IESPrefetch_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@IESPrefetch//:IESPrefetch_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_IESPrefetch",
  target_name = "Lark",
  module_name = "IESPrefetch",
  hdrs = ["@IESPrefetch//:IESPrefetch_root_pod_hdrs"],
  srcs = ["@IESPrefetch//:IESPrefetch_root_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = ["BDAlogProtocol", "ByteDanceKit"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESPrefetch_POD_VERSION=@\\\"9999_1.1.11\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "IESPrefetch_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "IESPrefetch_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = [],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = [],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "IESPrefetch_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "IESPrefetch_features", []),
  link_dynamic = getattr(defs_external_objc_library, "IESPrefetch_dynamic", False),
  tags = getattr(defs_external_objc_library, "IESPrefetch_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("IESPrefetch", {}),
  visibility = ["//visibility:public"],
)