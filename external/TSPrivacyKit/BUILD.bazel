load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "TSPrivacyKit_pod_hdrs",
  srcs = [
    ":TSPrivacyKit_root_pod_hdrs",
    ":NetworkCore_pod_hdrs",
    ":NetworkCustom_pod_hdrs",
    ":NetworkModuleInterface_pod_hdrs",
    ":NetworkPipeline_pod_hdrs",
    ":NetworkPipeline_TTNet_pod_hdrs",
    ":NetworkPipeline_TTNetRedirect_pod_hdrs",
    ":NetworkPipeline_URLProtocol_pod_hdrs",
    ":NetworkBacktrace_pod_hdrs",
    ":NetworkBacktrace_TTNetBacktrace_pod_hdrs",
    ":NetworkBacktrace_BDWebImageBacktrace_pod_hdrs",
    ":NetworkBacktrace_URLProtocolBacktrace_pod_hdrs",
    ":APICustom_pod_hdrs",
    ":Core_pod_hdrs",
    ":Cache_pod_hdrs",
    ":Cache_CacheCore_pod_hdrs",
    ":Cache_CacheDefault_pod_hdrs",
    ":Aspect_pod_hdrs",
    ":Impls_pod_hdrs",
    ":Impls_Consumer_pod_hdrs",
    ":Impls_HostEnv_pod_hdrs",
    ":ModuleInterface_pod_hdrs",
    ":Debug_pod_hdrs",
    ":TSPKUtil_pod_hdrs",
    ":Pipelines_pod_hdrs",
    ":Pipelines_Album_pod_hdrs",
    ":Pipelines_Album_ALAssetsLibrary_pod_hdrs",
    ":Pipelines_Album_PHAsset_pod_hdrs",
    ":Pipelines_Album_PHAssetChangeRequest_pod_hdrs",
    ":Pipelines_Album_PHAssetCollection_pod_hdrs",
    ":Pipelines_Album_PHCollectionList_pod_hdrs",
    ":Pipelines_Album_PHImageManager_pod_hdrs",
    ":Pipelines_Album_PHPhotoLibrary_pod_hdrs",
    ":Pipelines_Album_PHPickerViewController_pod_hdrs",
    ":Pipelines_Album_UIImagePickerController_pod_hdrs",
    ":Pipelines_Audio_pod_hdrs",
    ":Pipelines_Audio_AudioOutput_pod_hdrs",
    ":Pipelines_Audio_AUGraph_pod_hdrs",
    ":Pipelines_Audio_AudioQueue_pod_hdrs",
    ":Pipelines_Audio_AVAudioRecorder_pod_hdrs",
    ":Pipelines_Audio_AVAudioSession_pod_hdrs",
    ":Pipelines_Audio_AVCaptureDeviceAudio_pod_hdrs",
    ":Pipelines_Calendar_pod_hdrs",
    ":Pipelines_Calendar_EKEventStore_pod_hdrs",
    ":Pipelines_Calendar_EKEvent_pod_hdrs",
    ":Pipelines_CallCenter_pod_hdrs",
    ":Pipelines_CallCenter_CTCallCenter_pod_hdrs",
    ":Pipelines_Clipboard_pod_hdrs",
    ":Pipelines_Clipboard_UIPasteboard_pod_hdrs",
    ":Pipelines_Contact_pod_hdrs",
    ":Pipelines_Contact_ABPerson_pod_hdrs",
    ":Pipelines_Contact_CNContactStore_pod_hdrs",
    ":Pipelines_Contact_CNContact_pod_hdrs",
    ":Pipelines_LocalNetwork_pod_hdrs",
    ":Pipelines_LocalNetwork_CFHost_pod_hdrs",
    ":Pipelines_LocalNetwork_dns_sd_pod_hdrs",
    ":Pipelines_LocalNetwork_netdb_pod_hdrs",
    ":Pipelines_Health_pod_hdrs",
    ":Pipelines_Health_HKHealthStore_pod_hdrs",
    ":Pipelines_IDFA_pod_hdrs",
    ":Pipelines_IDFA_ASIdentifierManager_pod_hdrs",
    ":Pipelines_IDFA_ATTrackingManager_pod_hdrs",
    ":Pipelines_IDFV_pod_hdrs",
    ":Pipelines_IDFV_UIDeviceIDFV_pod_hdrs",
    ":Pipelines_Location_pod_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_pod_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_Normal_pod_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_pod_hdrs",
    ":Pipelines_LockID_pod_hdrs",
    ":Pipelines_LockID_LAContext_pod_hdrs",
    ":Pipelines_Media_pod_hdrs",
    ":Pipelines_Media_MPMediaLibrary_pod_hdrs",
    ":Pipelines_Media_MPMediaQuery_pod_hdrs",
    ":Pipelines_Message_pod_hdrs",
    ":Pipelines_Message_MFMessageComposeViewController_pod_hdrs",
    ":Pipelines_Motion_pod_hdrs",
    ":Pipelines_Motion_CLLocationManagerMotion_pod_hdrs",
    ":Pipelines_Motion_CMAltimeter_pod_hdrs",
    ":Pipelines_Motion_CMMotionActivityManager_pod_hdrs",
    ":Pipelines_Motion_CMMotionManager_pod_hdrs",
    ":Pipelines_Motion_CMPedometer_pod_hdrs",
    ":Pipelines_Motion_UIDeviceMotion_pod_hdrs",
    ":Pipelines_Push_pod_hdrs",
    ":Pipelines_Push_UNUserNotificationCenter_pod_hdrs",
    ":Pipelines_ScreenRecorder_pod_hdrs",
    ":Pipelines_ScreenRecorder_RPScreenRecorder_pod_hdrs",
    ":Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_pod_hdrs",
    ":Pipelines_SnapShot_pod_hdrs",
    ":Pipelines_SnapShot_UIGraphics_pod_hdrs",
    ":Pipelines_SnapShot_UIView_pod_hdrs",
    ":Pipelines_Video_pod_hdrs",
    ":Pipelines_Video_AVCaptureDeviceVideo_pod_hdrs",
    ":Pipelines_Video_AVCaptureSession_pod_hdrs",
    ":Pipelines_Video_AVCaptureStillImageOutput_pod_hdrs",
    ":Pipelines_Video_ARSession_pod_hdrs",
    ":Pipelines_Network_pod_hdrs",
    ":Pipelines_Network_CLGeocoder_pod_hdrs",
    ":Pipelines_Network_CTCarrier_pod_hdrs",
    ":Pipelines_Network_CTTelephonyNetworkInfo_pod_hdrs",
    ":Pipelines_Network_NSLocale_pod_hdrs",
    ":Pipelines_IP_pod_hdrs",
    ":Pipelines_IP_ifaddrs_pod_hdrs",
    ":Pipelines_Wifi_pod_hdrs",
    ":Pipelines_Wifi_CaptiveNetwork_pod_hdrs",
    ":Pipelines_Wifi_NEHotspotNetwork_pod_hdrs",
    ":Pipelines_Application_pod_hdrs",
    ":Pipelines_Application_UIApplication_pod_hdrs",
    ":Pipelines_OpenUDID_pod_hdrs",
    ":Pipelines_CIAD_pod_hdrs",
    ":Pipelines_CIAD_CIADOfBDInstall_pod_hdrs",
    ":Pipelines_BaseUserInput_pod_hdrs",
    ":Pipelines_UserInput_pod_hdrs",
    ":Pipelines_UserInput_UserInputOfUITextField_pod_hdrs",
    ":Pipelines_UserInput_UserInputOfUITextView_pod_hdrs",
    ":Pipelines_CustomUserInput_pod_hdrs",
    ":Pipelines_CustomUserInput_UserInputOfYYTextView_pod_hdrs",
    ":Tests_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "TSPrivacyKit_private_includes",
  include = [
    "external/TSPrivacyKit/pod_support/Headers/Private/TSPrivacyKit/"
  ],
  deps = [],
  external_name = "TSPrivacyKit"
)
gen_includes(
  name = "TSPrivacyKit_public_includes",
  include = [
    "external/TSPrivacyKit/pod_support/Headers/Public/TSPrivacyKit/"
  ],
  deps = [],
  external_name = "TSPrivacyKit"
)
filegroup(
  name = "_TSPrivacyKit_hdrs",
  srcs = [
    ":TSPrivacyKit_root_hdrs",
    ":NetworkCore_hdrs",
    ":NetworkCustom_hdrs",
    ":NetworkModuleInterface_hdrs",
    ":NetworkPipeline_hdrs",
    ":NetworkPipeline_TTNet_hdrs",
    ":NetworkPipeline_TTNetRedirect_hdrs",
    ":NetworkPipeline_URLProtocol_hdrs",
    ":NetworkBacktrace_hdrs",
    ":NetworkBacktrace_TTNetBacktrace_hdrs",
    ":NetworkBacktrace_BDWebImageBacktrace_hdrs",
    ":NetworkBacktrace_URLProtocolBacktrace_hdrs",
    ":APICustom_hdrs",
    ":Core_hdrs",
    ":Cache_hdrs",
    ":Cache_CacheCore_hdrs",
    ":Cache_CacheDefault_hdrs",
    ":Aspect_hdrs",
    ":Impls_hdrs",
    ":Impls_Consumer_hdrs",
    ":Impls_HostEnv_hdrs",
    ":ModuleInterface_hdrs",
    ":Debug_hdrs",
    ":TSPKUtil_hdrs",
    ":Pipelines_hdrs",
    ":Pipelines_Album_hdrs",
    ":Pipelines_Album_ALAssetsLibrary_hdrs",
    ":Pipelines_Album_PHAsset_hdrs",
    ":Pipelines_Album_PHAssetChangeRequest_hdrs",
    ":Pipelines_Album_PHAssetCollection_hdrs",
    ":Pipelines_Album_PHCollectionList_hdrs",
    ":Pipelines_Album_PHImageManager_hdrs",
    ":Pipelines_Album_PHPhotoLibrary_hdrs",
    ":Pipelines_Album_PHPickerViewController_hdrs",
    ":Pipelines_Album_UIImagePickerController_hdrs",
    ":Pipelines_Audio_hdrs",
    ":Pipelines_Audio_AudioOutput_hdrs",
    ":Pipelines_Audio_AUGraph_hdrs",
    ":Pipelines_Audio_AudioQueue_hdrs",
    ":Pipelines_Audio_AVAudioRecorder_hdrs",
    ":Pipelines_Audio_AVAudioSession_hdrs",
    ":Pipelines_Audio_AVCaptureDeviceAudio_hdrs",
    ":Pipelines_Calendar_hdrs",
    ":Pipelines_Calendar_EKEventStore_hdrs",
    ":Pipelines_Calendar_EKEvent_hdrs",
    ":Pipelines_CallCenter_hdrs",
    ":Pipelines_CallCenter_CTCallCenter_hdrs",
    ":Pipelines_Clipboard_hdrs",
    ":Pipelines_Clipboard_UIPasteboard_hdrs",
    ":Pipelines_Contact_hdrs",
    ":Pipelines_Contact_ABPerson_hdrs",
    ":Pipelines_Contact_CNContactStore_hdrs",
    ":Pipelines_Contact_CNContact_hdrs",
    ":Pipelines_LocalNetwork_hdrs",
    ":Pipelines_LocalNetwork_CFHost_hdrs",
    ":Pipelines_LocalNetwork_dns_sd_hdrs",
    ":Pipelines_LocalNetwork_netdb_hdrs",
    ":Pipelines_Health_hdrs",
    ":Pipelines_Health_HKHealthStore_hdrs",
    ":Pipelines_IDFA_hdrs",
    ":Pipelines_IDFA_ASIdentifierManager_hdrs",
    ":Pipelines_IDFA_ATTrackingManager_hdrs",
    ":Pipelines_IDFV_hdrs",
    ":Pipelines_IDFV_UIDeviceIDFV_hdrs",
    ":Pipelines_Location_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_Normal_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_hdrs",
    ":Pipelines_LockID_hdrs",
    ":Pipelines_LockID_LAContext_hdrs",
    ":Pipelines_Media_hdrs",
    ":Pipelines_Media_MPMediaLibrary_hdrs",
    ":Pipelines_Media_MPMediaQuery_hdrs",
    ":Pipelines_Message_hdrs",
    ":Pipelines_Message_MFMessageComposeViewController_hdrs",
    ":Pipelines_Motion_hdrs",
    ":Pipelines_Motion_CLLocationManagerMotion_hdrs",
    ":Pipelines_Motion_CMAltimeter_hdrs",
    ":Pipelines_Motion_CMMotionActivityManager_hdrs",
    ":Pipelines_Motion_CMMotionManager_hdrs",
    ":Pipelines_Motion_CMPedometer_hdrs",
    ":Pipelines_Motion_UIDeviceMotion_hdrs",
    ":Pipelines_Push_hdrs",
    ":Pipelines_Push_UNUserNotificationCenter_hdrs",
    ":Pipelines_ScreenRecorder_hdrs",
    ":Pipelines_ScreenRecorder_RPScreenRecorder_hdrs",
    ":Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_hdrs",
    ":Pipelines_SnapShot_hdrs",
    ":Pipelines_SnapShot_UIGraphics_hdrs",
    ":Pipelines_SnapShot_UIView_hdrs",
    ":Pipelines_Video_hdrs",
    ":Pipelines_Video_AVCaptureDeviceVideo_hdrs",
    ":Pipelines_Video_AVCaptureSession_hdrs",
    ":Pipelines_Video_AVCaptureStillImageOutput_hdrs",
    ":Pipelines_Video_ARSession_hdrs",
    ":Pipelines_Network_hdrs",
    ":Pipelines_Network_CLGeocoder_hdrs",
    ":Pipelines_Network_CTCarrier_hdrs",
    ":Pipelines_Network_CTTelephonyNetworkInfo_hdrs",
    ":Pipelines_Network_NSLocale_hdrs",
    ":Pipelines_IP_hdrs",
    ":Pipelines_IP_ifaddrs_hdrs",
    ":Pipelines_Wifi_hdrs",
    ":Pipelines_Wifi_CaptiveNetwork_hdrs",
    ":Pipelines_Wifi_NEHotspotNetwork_hdrs",
    ":Pipelines_Application_hdrs",
    ":Pipelines_Application_UIApplication_hdrs",
    ":Pipelines_OpenUDID_hdrs",
    ":Pipelines_CIAD_hdrs",
    ":Pipelines_CIAD_CIADOfBDInstall_hdrs",
    ":Pipelines_BaseUserInput_hdrs",
    ":Pipelines_UserInput_hdrs",
    ":Pipelines_UserInput_UserInputOfUITextField_hdrs",
    ":Pipelines_UserInput_UserInputOfUITextView_hdrs",
    ":Pipelines_CustomUserInput_hdrs",
    ":Pipelines_CustomUserInput_UserInputOfYYTextView_hdrs",
    ":Tests_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "TSPrivacyKit_xcode_hmapsource",
  hdrs = [
    ":TSPrivacyKit_root_hdrs",
    ":APICustom_hdrs",
    ":Cache_CacheCore_hdrs",
    ":Cache_CacheDefault_hdrs",
    ":Core_hdrs",
    ":Impls_Consumer_hdrs",
    ":ModuleInterface_hdrs",
    ":NetworkCore_hdrs",
    ":NetworkModuleInterface_hdrs",
    ":NetworkPipeline_TTNet_hdrs",
    ":NetworkPipeline_URLProtocol_hdrs",
    ":Pipelines_Album_hdrs",
    ":Pipelines_Album_ALAssetsLibrary_hdrs",
    ":Pipelines_Album_PHAsset_hdrs",
    ":Pipelines_Album_PHAssetChangeRequest_hdrs",
    ":Pipelines_Album_PHAssetCollection_hdrs",
    ":Pipelines_Album_PHCollectionList_hdrs",
    ":Pipelines_Album_PHImageManager_hdrs",
    ":Pipelines_Album_PHPhotoLibrary_hdrs",
    ":Pipelines_Album_PHPickerViewController_hdrs",
    ":Pipelines_Album_UIImagePickerController_hdrs",
    ":Pipelines_Audio_AudioOutput_hdrs",
    ":Pipelines_Audio_AudioQueue_hdrs",
    ":Pipelines_Audio_AVAudioSession_hdrs",
    ":Pipelines_Audio_AVCaptureDeviceAudio_hdrs",
    ":Pipelines_Calendar_hdrs",
    ":Pipelines_Calendar_EKEvent_hdrs",
    ":Pipelines_Calendar_EKEventStore_hdrs",
    ":Pipelines_CallCenter_CTCallCenter_hdrs",
    ":Pipelines_Clipboard_UIPasteboard_hdrs",
    ":Pipelines_Contact_CNContactStore_hdrs",
    ":Pipelines_IDFV_UIDeviceIDFV_hdrs",
    ":Pipelines_IP_ifaddrs_hdrs",
    ":Pipelines_Location_CLLocationManagerLocation_Normal_hdrs",
    ":Pipelines_LockID_LAContext_hdrs",
    ":Pipelines_Motion_CLLocationManagerMotion_hdrs",
    ":Pipelines_Motion_CMMotionManager_hdrs",
    ":Pipelines_Motion_UIDeviceMotion_hdrs",
    ":Pipelines_Network_CLGeocoder_hdrs",
    ":Pipelines_Push_UNUserNotificationCenter_hdrs",
    ":Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_hdrs",
    ":Pipelines_Video_AVCaptureDeviceVideo_hdrs",
    ":Pipelines_Video_AVCaptureSession_hdrs",
    ":Pipelines_Video_AVCaptureStillImageOutput_hdrs",
    ":Pipelines_Wifi_CaptiveNetwork_hdrs",
    ":Pipelines_Wifi_NEHotspotNetwork_hdrs",
    ":TSPKUtil_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "TSPrivacyKit_xcode_hmap",
  dep = ":TSPrivacyKit_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/TSPrivacyKit/*-bitsky-generated.modulemap", "pod_support/Headers/Public/TSPrivacyKit/*-bitsky-generated-umbrella.h"]))
gen_includes(
  name = "TSPrivacyKit_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "TSPrivacyKit",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "TSPrivacyKit_xcode_hmap_includes",
  include = [],
  include_files = [
    ":TSPrivacyKit_xcode_hmap"
  ],
  external_name = "TSPrivacyKit",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPrivacyKit_root_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPrivacyKit_root_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPrivacyKit_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPrivacyKit_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TSPrivacyKit_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TSPrivacyKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "TSPrivacyKit_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TSPrivacyKit_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "TSPrivacyKit_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":TSPrivacyKit_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TSPrivacyKit",
  deps = [
    ":TSPrivacyKit_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "TSPrivacyKit_lib",
  deps = [
    ":TSPrivacyKit"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCore_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCore_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Core/TSPKCommonRequestProtocol.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKCommonResponseProtocol.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkActionUtil.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkConfigs.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkDetectPipeline.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkEvent.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkHostEnvProtocol.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkReporter.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkUtil.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCore_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Core/TSPKCommonRequestProtocol.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKCommonResponseProtocol.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkActionUtil.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkConfigs.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkDetectPipeline.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkEvent.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkHostEnvProtocol.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkReporter.h",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkUtil.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCore_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCommonRequestProtocol.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCommonResponseProtocol.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkActionUtil.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkConfigs.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkDetectPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkEvent.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkHostEnvProtocol.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkReporter.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkUtil.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCommonRequestProtocol.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCommonResponseProtocol.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkActionUtil.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkConfigs.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkDetectPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkEvent.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkHostEnvProtocol.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkReporter.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkUtil.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkCore_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkCore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkCore_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkCore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkCore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCore_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkActionUtil.m",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkConfigs.m",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkDetectPipeline.m",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkEvent.m",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkReporter.m",
    "TSPrivacyKit/Classes/Network/Core/TSPKNetworkUtil.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkCore_oc",
  enable_modules = 1,
  srcs = [
    "NetworkCore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkCore_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkCore_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkActionUtil.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkConfigs.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkDetectPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkReporter.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkUtil.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkCore",
  deps = [
    ":NetworkCore_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkCore_lib",
  deps = [
    ":NetworkCore"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCustom_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCustom_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Custom/TSPKNetworkEngineSubscriber.h",
    "TSPrivacyKit/Classes/Network/Custom/TSPKNetworkFuseEngineSubscriber.h",
    "TSPrivacyKit/Classes/Network/Custom/TSPKRequestAnalyzeSubscriber.h",
    "TSPrivacyKit/Classes/Network/Custom/TSPKRuleParameterBuilderModel.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCustom_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Custom/TSPKNetworkEngineSubscriber.h",
    "TSPrivacyKit/Classes/Network/Custom/TSPKNetworkFuseEngineSubscriber.h",
    "TSPrivacyKit/Classes/Network/Custom/TSPKRequestAnalyzeSubscriber.h",
    "TSPrivacyKit/Classes/Network/Custom/TSPKRuleParameterBuilderModel.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCustom_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkCustom_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkCustom_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkCustom_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkCustom-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkCustom-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkCustom_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Custom/TSPKNetworkEngineSubscriber.m",
    "TSPrivacyKit/Classes/Network/Custom/TSPKNetworkFuseEngineSubscriber.m",
    "TSPrivacyKit/Classes/Network/Custom/TSPKRequestAnalyzeSubscriber.m",
    "TSPrivacyKit/Classes/Network/Custom/TSPKRuleParameterBuilderModel.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkCustom_oc",
  enable_modules = 1,
  srcs = [
    "NetworkCustom_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkCustom_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkCustom_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Custom/TSPKNetworkEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Custom/TSPKNetworkFuseEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Custom/TSPKRequestAnalyzeSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Custom/TSPKRuleParameterBuilderModel.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkCustom",
  deps = [
    ":NetworkCustom_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkCustom_lib",
  deps = [
    ":NetworkCustom"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkModuleInterface_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkModuleInterface_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/ModuleInterface/TSPKNetworkMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkModuleInterface_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/ModuleInterface/TSPKNetworkMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkModuleInterface_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkMonitor.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkModuleInterface_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkModuleInterface_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkModuleInterface_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkModuleInterface-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkModuleInterface-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkModuleInterface_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/ModuleInterface/TSPKNetworkMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkModuleInterface_oc",
  enable_modules = 1,
  srcs = [
    "NetworkModuleInterface_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkModuleInterface_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkModuleInterface_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/ModuleInterface/TSPKNetworkMonitor.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkModuleInterface",
  deps = [
    ":NetworkModuleInterface_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkModuleInterface_lib",
  deps = [
    ":NetworkModuleInterface"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkPipeline_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "NetworkPipeline_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkPipeline_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline",
  deps = [
    ":NetworkPipeline_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkPipeline_lib",
  deps = [
    ":NetworkPipeline"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNet_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNet_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TSPKTTNetInterceptorPipeline.h",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpRequest+TSPKCommonRequest.h",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpResponse+TSPKCommonResponse.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNet_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TSPKTTNetInterceptorPipeline.h",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpRequest+TSPKCommonRequest.h",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpResponse+TSPKCommonResponse.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNet_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKTTNetInterceptorPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TTHttpRequest+TSPKCommonRequest.h",
    "pod_support/Headers/Private/TSPrivacyKit/TTHttpResponse+TSPKCommonResponse.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKTTNetInterceptorPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TTHttpRequest+TSPKCommonRequest.h",
    "pod_support/Headers/Public/TSPrivacyKit/TTHttpResponse+TSPKCommonResponse.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_TTNet_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_TTNet_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkPipeline_TTNet_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline_TTNet-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline_TTNet-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNet_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TSPKTTNetInterceptorPipeline.m",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpRequest+TSPKCommonRequest.m",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpResponse+TSPKCommonResponse.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_TTNet_oc",
  enable_modules = 1,
  srcs = [
    "NetworkPipeline_TTNet_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkPipeline_TTNet_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_swift_interface",
    ":NetworkPipeline_TTNet_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNet/TSPKTTNetInterceptorPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpRequest+TSPKCommonRequest.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpResponse+TSPKCommonResponse.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_TTNet",
  deps = [
    ":NetworkPipeline_TTNet_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkPipeline_TTNet_lib",
  deps = [
    ":NetworkPipeline_TTNet"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNetRedirect_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNetRedirect_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TSPKTTNetRedirectInterceptPipeline.h",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TTRedirectTask+TSPKCommonRequest.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNetRedirect_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TSPKTTNetRedirectInterceptPipeline.h",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TTRedirectTask+TSPKCommonRequest.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNetRedirect_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_TTNetRedirect_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_TTNetRedirect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkPipeline_TTNetRedirect_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline_TTNetRedirect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline_TTNetRedirect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_TTNetRedirect_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TSPKTTNetRedirectInterceptPipeline.m",
    "TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TTRedirectTask+TSPKCommonRequest.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_TTNetRedirect_oc",
  enable_modules = 1,
  srcs = [
    "NetworkPipeline_TTNetRedirect_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkPipeline_TTNetRedirect_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_swift_interface",
    ":NetworkPipeline_TTNetRedirect_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TSPKTTNetRedirectInterceptPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNetRedirect/TTRedirectTask+TSPKCommonRequest.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_TTNetRedirect",
  deps = [
    ":NetworkPipeline_TTNetRedirect_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkPipeline_TTNetRedirect_lib",
  deps = [
    ":NetworkPipeline_TTNetRedirect"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_URLProtocol_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_URLProtocol_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLRequest+TSPKCommonRequest.h",
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLResponse+TSPKCommonResponse.h",
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/TSPKNetworkURLProtocolPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_URLProtocol_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLRequest+TSPKCommonRequest.h",
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLResponse+TSPKCommonResponse.h",
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/TSPKNetworkURLProtocolPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_URLProtocol_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/NSURLRequest+TSPKCommonRequest.h",
    "pod_support/Headers/Private/TSPrivacyKit/NSURLResponse+TSPKCommonResponse.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkURLProtocolPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/NSURLRequest+TSPKCommonRequest.h",
    "pod_support/Headers/Public/TSPrivacyKit/NSURLResponse+TSPKCommonResponse.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkURLProtocolPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_URLProtocol_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_URLProtocol_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkPipeline_URLProtocol_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline_URLProtocol-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkPipeline_URLProtocol-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkPipeline_URLProtocol_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLRequest+TSPKCommonRequest.m",
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLResponse+TSPKCommonResponse.m",
    "TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/TSPKNetworkURLProtocolPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkPipeline_URLProtocol_oc",
  enable_modules = 1,
  srcs = [
    "NetworkPipeline_URLProtocol_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkPipeline_URLProtocol_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkPipeline_URLProtocol_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLRequest+TSPKCommonRequest.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLResponse+TSPKCommonResponse.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/TSPKNetworkURLProtocolPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkPipeline_URLProtocol",
  deps = [
    ":NetworkPipeline_URLProtocol_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkPipeline_URLProtocol_lib",
  deps = [
    ":NetworkPipeline_URLProtocol"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkBacktrace_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "NetworkBacktrace_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkBacktrace_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace",
  deps = [
    ":NetworkBacktrace_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkBacktrace_lib",
  deps = [
    ":NetworkBacktrace"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_TTNetBacktrace_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_TTNetBacktrace_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/TTNet/TSPKNetworkTTNetRequestHooker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_TTNetBacktrace_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/TTNet/TSPKNetworkTTNetRequestHooker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_TTNetBacktrace_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_TTNetBacktrace_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_TTNetBacktrace_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkBacktrace_TTNetBacktrace_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace_TTNetBacktrace-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace_TTNetBacktrace-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_TTNetBacktrace_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/TTNet/TSPKNetworkTTNetRequestHooker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_TTNetBacktrace_oc",
  enable_modules = 1,
  srcs = [
    "NetworkBacktrace_TTNetBacktrace_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkBacktrace_TTNetBacktrace_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_swift_interface",
    ":NetworkBacktrace_TTNetBacktrace_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Backtraces/TTNet/TSPKNetworkTTNetRequestHooker.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_TTNetBacktrace",
  deps = [
    ":NetworkBacktrace_TTNetBacktrace_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkBacktrace_TTNetBacktrace_lib",
  deps = [
    ":NetworkBacktrace_TTNetBacktrace"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_BDWebImageBacktrace_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_BDWebImageBacktrace_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/BDWebImage/TSPKNetworkWebImageRequestHooker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_BDWebImageBacktrace_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/BDWebImage/TSPKNetworkWebImageRequestHooker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_BDWebImageBacktrace_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_BDWebImageBacktrace_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_BDWebImageBacktrace_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkBacktrace_BDWebImageBacktrace_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace_BDWebImageBacktrace-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace_BDWebImageBacktrace-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_BDWebImageBacktrace_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/BDWebImage/TSPKNetworkWebImageRequestHooker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_BDWebImageBacktrace_oc",
  enable_modules = 1,
  srcs = [
    "NetworkBacktrace_BDWebImageBacktrace_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkBacktrace_BDWebImageBacktrace_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDWebImage//:BDWebImage_objc_interface",
    "@BDWebImage//:BDWebImage_swift_interface",
    ":NetworkBacktrace_BDWebImageBacktrace_objc_interface",
    "@BDWebImage//:BDWebImage_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Backtraces/BDWebImage/TSPKNetworkWebImageRequestHooker.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_BDWebImageBacktrace",
  deps = [
    ":NetworkBacktrace_BDWebImageBacktrace_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkBacktrace_BDWebImageBacktrace_lib",
  deps = [
    ":NetworkBacktrace_BDWebImageBacktrace"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_URLProtocolBacktrace_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_URLProtocolBacktrace_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/URLProtocol/TSPKURLProtocolHooker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_URLProtocolBacktrace_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/URLProtocol/TSPKURLProtocolHooker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_URLProtocolBacktrace_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_URLProtocolBacktrace_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_URLProtocolBacktrace_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkBacktrace_URLProtocolBacktrace_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace_URLProtocolBacktrace-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_NetworkBacktrace_URLProtocolBacktrace-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkBacktrace_URLProtocolBacktrace_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Network/Backtraces/URLProtocol/TSPKURLProtocolHooker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkBacktrace_URLProtocolBacktrace_oc",
  enable_modules = 1,
  srcs = [
    "NetworkBacktrace_URLProtocolBacktrace_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkBacktrace_URLProtocolBacktrace_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkBacktrace_URLProtocolBacktrace_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Network/Backtraces/URLProtocol/TSPKURLProtocolHooker.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkBacktrace_URLProtocolBacktrace",
  deps = [
    ":NetworkBacktrace_URLProtocolBacktrace_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkBacktrace_URLProtocolBacktrace_lib",
  deps = [
    ":NetworkBacktrace_URLProtocolBacktrace"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "APICustom_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "APICustom_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheGroup.h",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStoreFactory.h",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStrategyFactory.h",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Context/TSPKContext.h",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorModel.h",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorMonitor.h",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorReleaseDetectManager.h",
    "TSPrivacyKit/Classes/Custom/Detect/DetectPlan/TSPKDetectPlan.h",
    "TSPrivacyKit/Classes/Custom/Detect/Model/TSPKDetectPlanModel.h",
    "TSPrivacyKit/Classes/Custom/Detect/Model/TSPKSceneRuleModel.h",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDelayDetectSchduler.h",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDetectEvent.h",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDetectManager.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseBadCaseTask.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseTask.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTask.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTaskFactory.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectUtils.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKBinaryInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackCacheInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackFilter.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackMacro.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackRuleInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKMachInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/Frequency/TSPKRuleEngineFrequencyManager.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKAppBackgroundFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKCallStackFilterFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKFrequencyFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardEngineSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardFuseEngineSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKInSameSubnetworkFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKPolicyDecisionSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRegexFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineManager.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidateEmailFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidatePhoneNumberFunc.h",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKApiStatisticsSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticConfig.h",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticModel.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKAccessEntrySubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKAPICostTimeManager.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKCrossPlatformSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKIgnoreDetectSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKKeyPathEventSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKReleaseAPIBizInfoSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKAdvanceAppStatusTrigger.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTrigger.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTriggerFactory.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKPageStatusTrigger.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKHostEnvProtocol.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKMediaNotificationObserver.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKNetworkManager.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKWebViewUtils.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "APICustom_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheGroup.h",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStoreFactory.h",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStrategyFactory.h",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Context/TSPKContext.h",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorModel.h",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorMonitor.h",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorReleaseDetectManager.h",
    "TSPrivacyKit/Classes/Custom/Detect/DetectPlan/TSPKDetectPlan.h",
    "TSPrivacyKit/Classes/Custom/Detect/Model/TSPKDetectPlanModel.h",
    "TSPrivacyKit/Classes/Custom/Detect/Model/TSPKSceneRuleModel.h",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDelayDetectSchduler.h",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDetectEvent.h",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDetectManager.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseBadCaseTask.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseTask.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTask.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTaskFactory.h",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectUtils.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKBinaryInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackCacheInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackFilter.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackMacro.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackRuleInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKMachInfo.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/Frequency/TSPKRuleEngineFrequencyManager.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKAppBackgroundFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKCallStackFilterFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKFrequencyFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardEngineSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardFuseEngineSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKInSameSubnetworkFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKPolicyDecisionSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRegexFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineManager.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineSubscriber.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidateEmailFunc.h",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidatePhoneNumberFunc.h",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKApiStatisticsSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticConfig.h",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticModel.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKAPICostTimeManager.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKAccessEntrySubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKCrossPlatformSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKIgnoreDetectSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKKeyPathEventSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKReleaseAPIBizInfoSubscriber.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKAdvanceAppStatusTrigger.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTrigger.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTriggerFactory.h",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKPageStatusTrigger.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKHostEnvProtocol.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKMediaNotificationObserver.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKNetworkManager.h",
    "TSPrivacyKit/Classes/Custom/Util/TSPKWebViewUtils.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "APICustom_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAPICostTimeManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAccessEntrySubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAdvanceAppStatusTrigger.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKApiStatisticsSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAppBackgroundFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKBinaryInfo.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheGroup.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheStoreFactory.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheStrategyFactory.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCallStackCacheInfo.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCallStackFilter.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCallStackFilterFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCallStackMacro.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCallStackRuleInfo.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKContext.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCrossPlatformSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCustomAnchorModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCustomAnchorMonitor.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCustomAnchorReleaseDetectManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDelayDetectSchduler.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectEvent.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectPlan.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectPlanModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectReleaseBadCaseTask.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectReleaseTask.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectTask.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectTaskFactory.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectTrigger.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectTriggerFactory.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectUtils.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKFrequencyFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKGuardEngineSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKGuardFuseEngineSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKHostEnvProtocol.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKIgnoreDetectSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKInSameSubnetworkFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKKeyPathEventSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMachInfo.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMediaNotificationObserver.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKPageStatusTrigger.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKPolicyDecisionSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRegexFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKReleaseAPIBizInfoSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRuleEngineFrequencyManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRuleEngineManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRuleEngineSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSceneRuleModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStatisticConfig.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStatisticModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKValidateEmailFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKValidatePhoneNumberFunc.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKWebViewUtils.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAPICostTimeManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAccessEntrySubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAdvanceAppStatusTrigger.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKApiStatisticsSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAppBackgroundFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKBinaryInfo.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheGroup.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheStoreFactory.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheStrategyFactory.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCallStackCacheInfo.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCallStackFilter.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCallStackFilterFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCallStackMacro.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCallStackRuleInfo.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKContext.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCrossPlatformSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCustomAnchorModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCustomAnchorMonitor.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCustomAnchorReleaseDetectManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDelayDetectSchduler.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectEvent.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectPlan.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectPlanModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectReleaseBadCaseTask.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectReleaseTask.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectTask.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectTaskFactory.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectTrigger.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectTriggerFactory.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectUtils.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKFrequencyFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKGuardEngineSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKGuardFuseEngineSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKHostEnvProtocol.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKIgnoreDetectSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKInSameSubnetworkFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKKeyPathEventSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMachInfo.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMediaNotificationObserver.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKPageStatusTrigger.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKPolicyDecisionSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRegexFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKReleaseAPIBizInfoSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRuleEngineFrequencyManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRuleEngineManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRuleEngineSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSceneRuleModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStatisticConfig.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStatisticModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKValidateEmailFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKValidatePhoneNumberFunc.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKWebViewUtils.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "APICustom_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "APICustom_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "APICustom_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_APICustom-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_APICustom-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "APICustom_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKAccessEntrySubscriber.m",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKAdvanceAppStatusTrigger.m",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKAPICostTimeManager.m",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKApiStatisticsSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKAppBackgroundFunc.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKBinaryInfo.m",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheGroup.m",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStoreFactory.m",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStrategyFactory.m",
    "TSPrivacyKit/Classes/Custom/Cache/TSPKCacheSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackCacheInfo.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackFilter.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKCallStackFilterFunc.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackRuleInfo.m",
    "TSPrivacyKit/Classes/Custom/Context/TSPKContext.m",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKCrossPlatformSubscriber.m",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorModel.m",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorMonitor.m",
    "TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorReleaseDetectManager.m",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDelayDetectSchduler.m",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDetectEvent.m",
    "TSPrivacyKit/Classes/Custom/Detect/TSPKDetectManager.m",
    "TSPrivacyKit/Classes/Custom/Detect/DetectPlan/TSPKDetectPlan.m",
    "TSPrivacyKit/Classes/Custom/Detect/Model/TSPKDetectPlanModel.m",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseBadCaseTask.m",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseTask.m",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTask.m",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTaskFactory.m",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTrigger.m",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTriggerFactory.m",
    "TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectUtils.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKFrequencyFunc.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardEngineSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardFuseEngineSubscriber.m",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKIgnoreDetectSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKInSameSubnetworkFunc.m",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKKeyPathEventSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKMachInfo.m",
    "TSPrivacyKit/Classes/Custom/Util/TSPKMediaNotificationObserver.m",
    "TSPrivacyKit/Classes/Custom/Util/TSPKNetworkManager.m",
    "TSPrivacyKit/Classes/Custom/Trigger/TSPKPageStatusTrigger.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKPolicyDecisionSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRegexFunc.m",
    "TSPrivacyKit/Classes/Custom/Subscriber/TSPKReleaseAPIBizInfoSubscriber.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/Frequency/TSPKRuleEngineFrequencyManager.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineManager.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineSubscriber.m",
    "TSPrivacyKit/Classes/Custom/Detect/Model/TSPKSceneRuleModel.m",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticConfig.m",
    "TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticModel.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidateEmailFunc.m",
    "TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidatePhoneNumberFunc.m",
    "TSPrivacyKit/Classes/Custom/Util/TSPKWebViewUtils.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "APICustom_oc",
  enable_modules = 1,
  srcs = [
    "APICustom_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "APICustom_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@ByteDanceKit//:ByteDanceKit_objc_interface",
    "@ByteDanceKit//:ByteDanceKit_swift_interface",
    ":APICustom_objc_interface",
    "@ByteDanceKit//:ByteDanceKit_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheGroup.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStoreFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStrategyFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Context/TSPKContext.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorMonitor.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorReleaseDetectManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/DetectPlan/TSPKDetectPlan.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/Model/TSPKDetectPlanModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/Model/TSPKSceneRuleModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/TSPKDelayDetectSchduler.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/TSPKDetectEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/TSPKDetectManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseBadCaseTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTaskFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKBinaryInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackCacheInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackFilter.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackRuleInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKMachInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/Frequency/TSPKRuleEngineFrequencyManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKAppBackgroundFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKCallStackFilterFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKFrequencyFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardFuseEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKInSameSubnetworkFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKPolicyDecisionSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRegexFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidateEmailFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidatePhoneNumberFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Statistic/TSPKApiStatisticsSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticConfig.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKAPICostTimeManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKAccessEntrySubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKCrossPlatformSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKIgnoreDetectSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKKeyPathEventSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKReleaseAPIBizInfoSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKAdvanceAppStatusTrigger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTrigger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTriggerFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKPageStatusTrigger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Util/TSPKMediaNotificationObserver.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Util/TSPKNetworkManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Util/TSPKWebViewUtils.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "APICustom",
  deps = [
    ":APICustom_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "APICustom_lib",
  deps = [
    ":APICustom"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Core/Consumer/TSPKConsumer.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKOfflineToolConsumerProxy.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKReporter.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticConsumerProxy.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticEvent.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEvent.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEventConsumerProxy.h",
    "TSPrivacyKit/Classes/Core/Detect/TSPKDetectCondition.h",
    "TSPrivacyKit/Classes/Core/Detect/TSPKDetectConsts.h",
    "TSPrivacyKit/Classes/Core/DetectTask/TSPKDetectReleaseStatusTask.h",
    "TSPrivacyKit/Classes/Core/Entry/TSPKEntryManager.h",
    "TSPrivacyKit/Classes/Core/Entry/TSPKEntryUnit.h",
    "TSPrivacyKit/Classes/Core/Entry/TSPKHandleResult.h",
    "TSPrivacyKit/Classes/Core/Environment/TSPKConfigs.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKAPIModel.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKAspectModel.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKEventData.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKRuleExecuteResultModel.h",
    "TSPrivacyKit/Classes/Core/Events/TSPKBaseEvent.h",
    "TSPrivacyKit/Classes/Core/Events/TSPKEvent.h",
    "TSPrivacyKit/Classes/Core/Events/TSPKEventManager.h",
    "TSPrivacyKit/Classes/Core/Pipeline/TSPKDetectPipeline.h",
    "TSPrivacyKit/Classes/Core/Pipeline/TSPKPipelineSwizzleUtil.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKApiLogSubscriber.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKExternalLogReceiver.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+log.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+pair.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+private.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+public.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager.h",
    "TSPrivacyKit/Classes/Core/Store/CallStackStore/TSPKBacktraceStore.h",
    "TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectCacheStore.h",
    "TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectModel.h",
    "TSPrivacyKit/Classes/Core/Store/TSPKStore.h",
    "TSPrivacyKit/Classes/Core/Store/TSPKStoreFactory.h",
    "TSPrivacyKit/Classes/Core/Store/TSPKStoreManager.h",
    "TSPrivacyKit/Classes/Core/Subscriber/TSPKSubscriber.h",
    "TSPrivacyKit/Classes/Core/Thread/TSPKThreadPool.h",
    "TSPrivacyKit/Classes/Core/Util/NSObject+TSAddition.h",
    "TSPrivacyKit/Classes/Core/Util/NSObject+TSDeallocAssociate.h",
    "TSPrivacyKit/Classes/Core/Util/TSDeallocAssociate.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKAppLifeCycleObserver.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKFishhookUtils.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKLogger.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKPageStatusStore.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKSafeMutableDict.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKUtils.h",
    "TSPrivacyKit/Classes/Core/Util/TSPrivacyKitConstants.h",
    "TSPrivacyKit/Classes/Core/Util/UIViewController+TSAddition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Core/Consumer/TSPKConsumer.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKOfflineToolConsumerProxy.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKReporter.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticConsumerProxy.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticEvent.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEvent.h",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEventConsumerProxy.h",
    "TSPrivacyKit/Classes/Core/Detect/TSPKDetectCondition.h",
    "TSPrivacyKit/Classes/Core/Detect/TSPKDetectConsts.h",
    "TSPrivacyKit/Classes/Core/DetectTask/TSPKDetectReleaseStatusTask.h",
    "TSPrivacyKit/Classes/Core/Entry/TSPKEntryManager.h",
    "TSPrivacyKit/Classes/Core/Entry/TSPKEntryUnit.h",
    "TSPrivacyKit/Classes/Core/Entry/TSPKHandleResult.h",
    "TSPrivacyKit/Classes/Core/Environment/TSPKConfigs.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKAPIModel.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKAspectModel.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKEventData.h",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKRuleExecuteResultModel.h",
    "TSPrivacyKit/Classes/Core/Events/TSPKBaseEvent.h",
    "TSPrivacyKit/Classes/Core/Events/TSPKEvent.h",
    "TSPrivacyKit/Classes/Core/Events/TSPKEventManager.h",
    "TSPrivacyKit/Classes/Core/Pipeline/TSPKDetectPipeline.h",
    "TSPrivacyKit/Classes/Core/Pipeline/TSPKPipelineSwizzleUtil.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKApiLogSubscriber.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKExternalLogReceiver.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+log.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+pair.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+private.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+public.h",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager.h",
    "TSPrivacyKit/Classes/Core/Store/CallStackStore/TSPKBacktraceStore.h",
    "TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectCacheStore.h",
    "TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectModel.h",
    "TSPrivacyKit/Classes/Core/Store/TSPKStore.h",
    "TSPrivacyKit/Classes/Core/Store/TSPKStoreFactory.h",
    "TSPrivacyKit/Classes/Core/Store/TSPKStoreManager.h",
    "TSPrivacyKit/Classes/Core/Subscriber/TSPKSubscriber.h",
    "TSPrivacyKit/Classes/Core/Thread/TSPKThreadPool.h",
    "TSPrivacyKit/Classes/Core/Util/NSObject+TSAddition.h",
    "TSPrivacyKit/Classes/Core/Util/NSObject+TSDeallocAssociate.h",
    "TSPrivacyKit/Classes/Core/Util/TSDeallocAssociate.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKAppLifeCycleObserver.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKFishhookUtils.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKLogger.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKPageStatusStore.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKSafeMutableDict.h",
    "TSPrivacyKit/Classes/Core/Util/TSPKUtils.h",
    "TSPrivacyKit/Classes/Core/Util/TSPrivacyKitConstants.h",
    "TSPrivacyKit/Classes/Core/Util/UIViewController+TSAddition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/NSObject+TSAddition.h",
    "pod_support/Headers/Private/TSPrivacyKit/NSObject+TSDeallocAssociate.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSDeallocAssociate.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAPIModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKApiLogSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAppLifeCycleObserver.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAspectModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKBacktraceStore.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKBaseEvent.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKConfigs.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKConsumer.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectCondition.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectConsts.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKDetectReleaseStatusTask.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKEntryManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKEntryUnit.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKEvent.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKEventData.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKEventManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKExternalLogReceiver.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKFishhookUtils.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKHandleResult.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKLogger.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKOfflineToolConsumerProxy.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKPageStatusStore.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKPipelineSwizzleUtil.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRelationObjectCacheStore.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRelationObjectModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKReporter.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRuleExecuteResultModel.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSafeMutableDict.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSignalManager+log.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSignalManager+pair.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSignalManager+private.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSignalManager+public.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSignalManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStatisticConsumerProxy.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStatisticEvent.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStore.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStoreFactory.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStoreManager.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKSubscriber.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKThreadPool.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKUploadEvent.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKUploadEventConsumerProxy.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKUtils.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPrivacyKitConstants.h",
    "pod_support/Headers/Private/TSPrivacyKit/UIViewController+TSAddition.h",
    "pod_support/Headers/Public/TSPrivacyKit/NSObject+TSAddition.h",
    "pod_support/Headers/Public/TSPrivacyKit/NSObject+TSDeallocAssociate.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSDeallocAssociate.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAPIModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKApiLogSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAppLifeCycleObserver.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAspectModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKBacktraceStore.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKBaseEvent.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKConfigs.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKConsumer.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectCondition.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectConsts.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKDetectReleaseStatusTask.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKEntryManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKEntryUnit.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKEvent.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKEventData.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKEventManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKExternalLogReceiver.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKFishhookUtils.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKHandleResult.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKLogger.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKOfflineToolConsumerProxy.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKPageStatusStore.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKPipelineSwizzleUtil.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRelationObjectCacheStore.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRelationObjectModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKReporter.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRuleExecuteResultModel.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSafeMutableDict.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSignalManager+log.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSignalManager+pair.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSignalManager+private.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSignalManager+public.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSignalManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStatisticConsumerProxy.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStatisticEvent.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStore.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStoreFactory.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStoreManager.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKSubscriber.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKThreadPool.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKUploadEvent.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKUploadEventConsumerProxy.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKUtils.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKitConstants.h",
    "pod_support/Headers/Public/TSPrivacyKit/UIViewController+TSAddition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Core/Util/NSObject+TSAddition.m",
    "TSPrivacyKit/Classes/Core/Util/NSObject+TSDeallocAssociate.m",
    "TSPrivacyKit/Classes/Core/Util/TSDeallocAssociate.m",
    "TSPrivacyKit/Classes/Core/Signal/TSPKApiLogSubscriber.m",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKAPIModel.m",
    "TSPrivacyKit/Classes/Core/Util/TSPKAppLifeCycleObserver.m",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKAspectModel.m",
    "TSPrivacyKit/Classes/Core/Store/CallStackStore/TSPKBacktraceStore.m",
    "TSPrivacyKit/Classes/Core/Events/TSPKBaseEvent.m",
    "TSPrivacyKit/Classes/Core/Environment/TSPKConfigs.m",
    "TSPrivacyKit/Classes/Core/Detect/TSPKDetectCondition.m",
    "TSPrivacyKit/Classes/Core/Pipeline/TSPKDetectPipeline.m",
    "TSPrivacyKit/Classes/Core/DetectTask/TSPKDetectReleaseStatusTask.m",
    "TSPrivacyKit/Classes/Core/Entry/TSPKEntryManager.m",
    "TSPrivacyKit/Classes/Core/Entry/TSPKEntryUnit.m",
    "TSPrivacyKit/Classes/Core/Events/TSPKEvent.m",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKEventData.m",
    "TSPrivacyKit/Classes/Core/Events/TSPKEventManager.m",
    "TSPrivacyKit/Classes/Core/Signal/TSPKExternalLogReceiver.m",
    "TSPrivacyKit/Classes/Core/Util/TSPKFishhookUtils.m",
    "TSPrivacyKit/Classes/Core/Entry/TSPKHandleResult.m",
    "TSPrivacyKit/Classes/Core/Util/TSPKLogger.m",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKOfflineToolConsumerProxy.m",
    "TSPrivacyKit/Classes/Core/Util/TSPKPageStatusStore.m",
    "TSPrivacyKit/Classes/Core/Pipeline/TSPKPipelineSwizzleUtil.m",
    "TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectCacheStore.m",
    "TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectModel.m",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKReporter.m",
    "TSPrivacyKit/Classes/Core/Events/Model/TSPKRuleExecuteResultModel.m",
    "TSPrivacyKit/Classes/Core/Util/TSPKSafeMutableDict.m",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+log.m",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+pair.m",
    "TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager.m",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticConsumerProxy.m",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticEvent.m",
    "TSPrivacyKit/Classes/Core/Store/TSPKStoreFactory.m",
    "TSPrivacyKit/Classes/Core/Store/TSPKStoreManager.m",
    "TSPrivacyKit/Classes/Core/Thread/TSPKThreadPool.m",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEvent.m",
    "TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEventConsumerProxy.m",
    "TSPrivacyKit/Classes/Core/Util/TSPKUtils.m",
    "TSPrivacyKit/Classes/Core/Util/TSPrivacyKitConstants.m",
    "TSPrivacyKit/Classes/Core/Util/UIViewController+TSAddition.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [
    "Core_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@BDModel//:BDModel_objc_interface",
    "@ByteDanceKit//:Foundation_objc_interface",
    "@ByteDanceKit//:UIKit_objc_interface",
    "@PNSServiceKit//:Protocol_objc_interface",
    "@PNSServiceKit//:Service_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    "@BDModel//:BDModel_swift_interface",
    "@ByteDanceKit//:Foundation_swift_interface",
    "@ByteDanceKit//:UIKit_swift_interface",
    "@PNSServiceKit//:Protocol_swift_interface",
    "@PNSServiceKit//:Service_swift_interface",
    ":Core_objc_interface",
    "@BDFishhook//:BDFishhook_module_map",
    "@BDModel//:BDModel_module_map",
    "@ByteDanceKit//:Foundation_module_map",
    "@ByteDanceKit//:UIKit_module_map",
    "@PNSServiceKit//:Protocol_module_map",
    "@PNSServiceKit//:Service_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKOfflineToolConsumerProxy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKReporter.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticConsumerProxy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEventConsumerProxy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Detect/TSPKDetectCondition.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/DetectTask/TSPKDetectReleaseStatusTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Entry/TSPKEntryManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Entry/TSPKEntryUnit.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Entry/TSPKHandleResult.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Environment/TSPKConfigs.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKAPIModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKAspectModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKEventData.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKRuleExecuteResultModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/TSPKBaseEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/TSPKEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/TSPKEventManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Pipeline/TSPKDetectPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Pipeline/TSPKPipelineSwizzleUtil.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKApiLogSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKExternalLogReceiver.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+log.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+pair.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/CallStackStore/TSPKBacktraceStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectCacheStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/TSPKStoreFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/TSPKStoreManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Thread/TSPKThreadPool.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/NSObject+TSAddition.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/NSObject+TSDeallocAssociate.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSDeallocAssociate.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKAppLifeCycleObserver.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKFishhookUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKLogger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKPageStatusStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKSafeMutableDict.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPrivacyKitConstants.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/UIViewController+TSAddition.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Cache_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Cache_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Cache_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Cache-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Cache-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Cache_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Cache_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Cache_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Cache",
  deps = [
    ":Cache_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Cache_lib",
  deps = [
    ":Cache"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheCore_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheCore_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheEnv.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheProcessor.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheStore.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheStrategyGenerator.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheUpdateStrategy.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheCore_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheEnv.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheProcessor.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheStore.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheStrategyGenerator.h",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheUpdateStrategy.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheCore_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheEnv.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheProcessor.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheStore.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheStrategyGenerator.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCacheUpdateStrategy.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheEnv.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheProcessor.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheStore.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheStrategyGenerator.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCacheUpdateStrategy.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Cache_CacheCore_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Cache_CacheCore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Cache_CacheCore_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Cache_CacheCore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Cache_CacheCore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheCore_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheEnv.m",
    "TSPrivacyKit/Classes/Cache/Core/TSPKCacheProcessor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Cache_CacheCore_oc",
  enable_modules = 1,
  srcs = [
    "Cache_CacheCore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Cache_CacheCore_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Cache_CacheCore_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Cache/Core/TSPKCacheEnv.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Core/TSPKCacheProcessor.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Cache_CacheCore",
  deps = [
    ":Cache_CacheCore_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Cache_CacheCore_lib",
  deps = [
    ":Cache_CacheCore"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheDefault_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheDefault_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Cache/Default/TSPKMemoryStore.h",
    "TSPrivacyKit/Classes/Cache/Default/TSPKRuleCacheStrategy.h",
    "TSPrivacyKit/Classes/Cache/Default/TSPKTimeCacheStrategy.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheDefault_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Cache/Default/TSPKMemoryStore.h",
    "TSPrivacyKit/Classes/Cache/Default/TSPKRuleCacheStrategy.h",
    "TSPrivacyKit/Classes/Cache/Default/TSPKTimeCacheStrategy.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheDefault_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMemoryStore.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKRuleCacheStrategy.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKTimeCacheStrategy.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMemoryStore.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKRuleCacheStrategy.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKTimeCacheStrategy.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Cache_CacheDefault_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Cache_CacheDefault_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Cache_CacheDefault_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Cache_CacheDefault-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Cache_CacheDefault-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Cache_CacheDefault_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Cache/Default/TSPKMemoryStore.m",
    "TSPrivacyKit/Classes/Cache/Default/TSPKRuleCacheStrategy.m",
    "TSPrivacyKit/Classes/Cache/Default/TSPKTimeCacheStrategy.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Cache_CacheDefault_oc",
  enable_modules = 1,
  srcs = [
    "Cache_CacheDefault_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Cache_CacheDefault_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@PNSServiceKit//:Protocol_objc_interface",
    "@PNSServiceKit//:Service_objc_interface",
    "@PNSServiceKit//:Protocol_swift_interface",
    "@PNSServiceKit//:Service_swift_interface",
    ":Cache_CacheDefault_objc_interface",
    "@PNSServiceKit//:Protocol_module_map",
    "@PNSServiceKit//:Service_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Cache/Default/TSPKMemoryStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Default/TSPKRuleCacheStrategy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Default/TSPKTimeCacheStrategy.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Cache_CacheDefault",
  deps = [
    ":Cache_CacheDefault_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Cache_CacheDefault_lib",
  deps = [
    ":Cache_CacheDefault"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Aspect_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Aspect_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Aspect/TSPKAspectDefines.h",
    "TSPrivacyKit/Classes/Aspect/TSPKAspectManager.h",
    "TSPrivacyKit/Classes/Aspect/TSPKAspector.h",
    "TSPrivacyKit/Classes/Aspect/TSPKAspectTrampolinePage.h",
    "TSPrivacyKit/Classes/Aspect/TSPKMacros.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Aspect_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Aspect/TSPKAspectDefines.h",
    "TSPrivacyKit/Classes/Aspect/TSPKAspectManager.h",
    "TSPrivacyKit/Classes/Aspect/TSPKAspectTrampolinePage.h",
    "TSPrivacyKit/Classes/Aspect/TSPKAspector.h",
    "TSPrivacyKit/Classes/Aspect/TSPKMacros.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Aspect_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Aspect_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Aspect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Aspect_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Aspect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Aspect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Aspect_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Aspect/tspk_trampoline_arm64.s",
    "TSPrivacyKit/Classes/Aspect/tspk_trampoline_armv7.s",
    "TSPrivacyKit/Classes/Aspect/tspk_trampoline_stret_armv7.s",
    "TSPrivacyKit/Classes/Aspect/tspk_trampoline_x86_64.s",
    "TSPrivacyKit/Classes/Aspect/tspk_trampoline_x86_64_stret.s",
    "TSPrivacyKit/Classes/Aspect/TSPKAspectManager.m",
    "TSPrivacyKit/Classes/Aspect/TSPKAspector.mm",
    "TSPrivacyKit/Classes/Aspect/TSPKAspectTrampolinePage.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Aspect_oc",
  enable_modules = 1,
  srcs = [
    "Aspect_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Aspect_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Aspect_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Aspect/TSPKAspectManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/TSPKAspectTrampolinePage.mm@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/TSPKAspector.mm@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/tspk_trampoline_arm64.s@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/tspk_trampoline_armv7.s@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/tspk_trampoline_stret_armv7.s@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/tspk_trampoline_x86_64.s@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Aspect/tspk_trampoline_x86_64_stret.s@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Aspect",
  deps = [
    ":Aspect_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Aspect_lib",
  deps = [
    ":Aspect"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.h",
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.h",
    "TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.h",
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.h",
    "TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Impls_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Impls_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Impls_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Impls-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Impls-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Impls_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Impls_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Impls_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Impls",
  deps = [
    ":Impls_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Impls_lib",
  deps = [
    ":Impls"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_Consumer_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_Consumer_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.h",
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_Consumer_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.h",
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_Consumer_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKStatisticConsumer.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKUploadEventConsumer.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKStatisticConsumer.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKUploadEventConsumer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Impls_Consumer_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Impls_Consumer_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Impls_Consumer_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Impls_Consumer-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Impls_Consumer-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_Consumer_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.m",
    "TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Impls_Consumer_oc",
  enable_modules = 1,
  srcs = [
    "Impls_Consumer_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Impls_Consumer_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Impls_Consumer_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Impls_Consumer",
  deps = [
    ":Impls_Consumer_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Impls_Consumer_lib",
  deps = [
    ":Impls_Consumer"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_HostEnv_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_HostEnv_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_HostEnv_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_HostEnv_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Impls_HostEnv_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Impls_HostEnv_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Impls_HostEnv_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Impls_HostEnv-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Impls_HostEnv-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Impls_HostEnv_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Impls_HostEnv_oc",
  enable_modules = 1,
  srcs = [
    "Impls_HostEnv_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Impls_HostEnv_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Heimdallr//:UserException_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_objc_interface",
    "@TTReachability//:TTReachability_objc_interface",
    "@Heimdallr//:UserException_swift_interface",
    "@TTNetworkManager//:TTNetworkManager_swift_interface",
    "@TTReachability//:TTReachability_swift_interface",
    ":Impls_HostEnv_objc_interface",
    "@Heimdallr//:UserException_module_map",
    "@TTNetworkManager//:TTNetworkManager_module_map",
    "@TTReachability//:TTReachability_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Impls/HostEnv/TSPKDefaultHostEnvImpl.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Impls_HostEnv",
  deps = [
    ":Impls_HostEnv_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Impls_HostEnv_lib",
  deps = [
    ":Impls_HostEnv"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ModuleInterface_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ModuleInterface_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/ModuleInterface/TSPKMonitor.h",
    "TSPrivacyKit/Classes/ModuleInterface/TSPKMonitorBuilder.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ModuleInterface_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/ModuleInterface/TSPKMonitor.h",
    "TSPrivacyKit/Classes/ModuleInterface/TSPKMonitorBuilder.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ModuleInterface_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMonitor.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMonitorBuilder.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMonitor.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMonitorBuilder.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ModuleInterface_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ModuleInterface_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "ModuleInterface_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_ModuleInterface-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_ModuleInterface-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ModuleInterface_srcs",
  srcs = [
    "TSPrivacyKit/Classes/ModuleInterface/TSPKMonitor.m",
    "TSPrivacyKit/Classes/ModuleInterface/TSPKMonitorBuilder.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ModuleInterface_oc",
  enable_modules = 1,
  srcs = [
    "ModuleInterface_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "ModuleInterface_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":ModuleInterface_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/ModuleInterface/TSPKMonitor.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/ModuleInterface/TSPKMonitorBuilder.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ModuleInterface",
  deps = [
    ":ModuleInterface_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "ModuleInterface_lib",
  deps = [
    ":ModuleInterface"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionChecker.h",
    "TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionCheckerAlert.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionChecker.h",
    "TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionCheckerAlert.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Debug_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Debug_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Debug_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Debug-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Debug-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionChecker.m",
    "TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionCheckerAlert.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Debug_oc",
  enable_modules = 1,
  srcs = [
    "Debug_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Debug_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Debug_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionChecker.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Debug/PermissionChecker/TSPKPermissionCheckerAlert.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Debug",
  deps = [
    ":Debug_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Debug_lib",
  deps = [
    ":Debug"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPKUtil_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPKUtil_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Util/TSPKLock.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPKUtil_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Util/TSPKLock.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPKUtil_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKLock.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKLock.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TSPKUtil_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TSPKUtil_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "TSPKUtil_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_TSPKUtil-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_TSPKUtil-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TSPKUtil_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Util/TSPKLock.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TSPKUtil_oc",
  enable_modules = 1,
  srcs = [
    "TSPKUtil_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "TSPKUtil_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":TSPKUtil_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Util/TSPKLock.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TSPKUtil",
  deps = [
    ":TSPKUtil_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "TSPKUtil_lib",
  deps = [
    ":TSPKUtil"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines",
  deps = [
    ":Pipelines_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_lib",
  deps = [
    ":Pipelines"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfALAssetsLibraryPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHAssetChangeRequestPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHAssetCollectionPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHAssetPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHCollectionListPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHImageManagerPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHPhotoLibraryPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHPickerViewControllerPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfUIImagePickerControllerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfALAssetsLibraryPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHAssetChangeRequestPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHAssetCollectionPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHAssetPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHCollectionListPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHImageManagerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHPhotoLibraryPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHPickerViewControllerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfUIImagePickerControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album",
  deps = [
    ":Pipelines_Album_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_lib",
  deps = [
    ":Pipelines_Album"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_ALAssetsLibrary_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_ALAssetsLibrary_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_ALAssetsLibrary_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_ALAssetsLibrary_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfALAssetsLibraryPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfALAssetsLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_ALAssetsLibrary_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_ALAssetsLibrary_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_ALAssetsLibrary_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_ALAssetsLibrary-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_ALAssetsLibrary-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_ALAssetsLibrary_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_ALAssetsLibrary_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_ALAssetsLibrary_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_ALAssetsLibrary_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_ALAssetsLibrary_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_ALAssetsLibrary",
  deps = [
    ":Pipelines_Album_ALAssetsLibrary_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_ALAssetsLibrary_lib",
  deps = [
    ":Pipelines_Album_ALAssetsLibrary"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAsset_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAsset_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAsset_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAsset_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHAssetPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHAssetPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHAsset_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHAsset_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHAsset_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHAsset-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHAsset-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAsset_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHAsset_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHAsset_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHAsset_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHAsset_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHAsset",
  deps = [
    ":Pipelines_Album_PHAsset_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHAsset_lib",
  deps = [
    ":Pipelines_Album_PHAsset"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetChangeRequest_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetChangeRequest_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetChangeRequest_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetChangeRequest_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHAssetChangeRequestPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHAssetChangeRequestPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHAssetChangeRequest_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHAssetChangeRequest_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHAssetChangeRequest_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHAssetChangeRequest-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHAssetChangeRequest-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetChangeRequest_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHAssetChangeRequest_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHAssetChangeRequest_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHAssetChangeRequest_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHAssetChangeRequest_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHAssetChangeRequest",
  deps = [
    ":Pipelines_Album_PHAssetChangeRequest_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHAssetChangeRequest_lib",
  deps = [
    ":Pipelines_Album_PHAssetChangeRequest"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetCollection_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetCollection_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetCollection_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetCollection_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHAssetCollectionPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHAssetCollectionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHAssetCollection_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHAssetCollection_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHAssetCollection_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHAssetCollection-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHAssetCollection-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHAssetCollection_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHAssetCollection_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHAssetCollection_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHAssetCollection_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHAssetCollection_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHAssetCollection",
  deps = [
    ":Pipelines_Album_PHAssetCollection_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHAssetCollection_lib",
  deps = [
    ":Pipelines_Album_PHAssetCollection"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHCollectionList_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHCollectionList_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHCollectionList_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHCollectionList_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHCollectionListPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHCollectionListPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHCollectionList_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHCollectionList_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHCollectionList_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHCollectionList-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHCollectionList-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHCollectionList_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHCollectionList_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHCollectionList_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHCollectionList_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHCollectionList_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHCollectionList",
  deps = [
    ":Pipelines_Album_PHCollectionList_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHCollectionList_lib",
  deps = [
    ":Pipelines_Album_PHCollectionList"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHImageManager_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHImageManager_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHImageManager_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHImageManager_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHImageManagerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHImageManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHImageManager_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHImageManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHImageManager_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHImageManager-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHImageManager-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHImageManager_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHImageManager_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHImageManager_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHImageManager_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHImageManager_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHImageManager",
  deps = [
    ":Pipelines_Album_PHImageManager_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHImageManager_lib",
  deps = [
    ":Pipelines_Album_PHImageManager"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPhotoLibrary_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPhotoLibrary_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPhotoLibrary_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPhotoLibrary_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHPhotoLibraryPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHPhotoLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHPhotoLibrary_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHPhotoLibrary_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHPhotoLibrary_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHPhotoLibrary-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHPhotoLibrary-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPhotoLibrary_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHPhotoLibrary_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHPhotoLibrary_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHPhotoLibrary_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHPhotoLibrary_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHPhotoLibrary",
  deps = [
    ":Pipelines_Album_PHPhotoLibrary_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHPhotoLibrary_lib",
  deps = [
    ":Pipelines_Album_PHPhotoLibrary"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPickerViewController_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPickerViewController_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPickerViewController_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPickerViewController_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfPHPickerViewControllerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfPHPickerViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHPickerViewController_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHPickerViewController_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_PHPickerViewController_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHPickerViewController-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_PHPickerViewController-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_PHPickerViewController_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_PHPickerViewController_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_PHPickerViewController_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_PHPickerViewController_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_PHPickerViewController_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_PHPickerViewController",
  deps = [
    ":Pipelines_Album_PHPickerViewController_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_PHPickerViewController_lib",
  deps = [
    ":Pipelines_Album_PHPickerViewController"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_UIImagePickerController_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_UIImagePickerController_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_UIImagePickerController_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_UIImagePickerController_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAlbumOfUIImagePickerControllerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAlbumOfUIImagePickerControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_UIImagePickerController_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_UIImagePickerController_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Album_UIImagePickerController_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_UIImagePickerController-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Album_UIImagePickerController-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Album_UIImagePickerController_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Album_UIImagePickerController_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Album_UIImagePickerController_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Album_UIImagePickerController_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Album_UIImagePickerController_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Album_UIImagePickerController",
  deps = [
    ":Pipelines_Album_UIImagePickerController_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Album_UIImagePickerController_lib",
  deps = [
    ":Pipelines_Album_UIImagePickerController"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio",
  deps = [
    ":Pipelines_Audio_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_lib",
  deps = [
    ":Pipelines_Audio"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioOutput_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioOutput_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioOutput_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioOutput_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAudioOfAudioOutputPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAudioOfAudioOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AudioOutput_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AudioOutput_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_AudioOutput_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AudioOutput-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AudioOutput-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioOutput_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AudioOutput_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Audio_AudioOutput_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_AudioOutput_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_AudioOutput_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AudioOutput",
  deps = [
    ":Pipelines_Audio_AudioOutput_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_AudioOutput_lib",
  deps = [
    ":Pipelines_Audio_AudioOutput"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AUGraph_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AUGraph_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AUGraph_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AUGraph_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AUGraph_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AUGraph_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_AUGraph_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AUGraph-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AUGraph-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AUGraph_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AUGraph_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Audio_AUGraph_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_AUGraph_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_AUGraph_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AUGraph/TSPKAudioOfAUGraphPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AUGraph",
  deps = [
    ":Pipelines_Audio_AUGraph_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_AUGraph_lib",
  deps = [
    ":Pipelines_Audio_AUGraph"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioQueue_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioQueue_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioQueue_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioQueue_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAudioOfAudioQueuePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAudioOfAudioQueuePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AudioQueue_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AudioQueue_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_AudioQueue_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AudioQueue-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AudioQueue-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AudioQueue_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AudioQueue_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Audio_AudioQueue_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_AudioQueue_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_AudioQueue_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AudioQueue",
  deps = [
    ":Pipelines_Audio_AudioQueue_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_AudioQueue_lib",
  deps = [
    ":Pipelines_Audio_AudioQueue"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioRecorder_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioRecorder_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioRecorder_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioRecorder_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AVAudioRecorder_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AVAudioRecorder_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_AVAudioRecorder_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AVAudioRecorder-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AVAudioRecorder-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioRecorder_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AVAudioRecorder_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Audio_AVAudioRecorder_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_AVAudioRecorder_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_AVAudioRecorder_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVAudioRecorder/TSPKAudioOfAVAudioRecorderPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AVAudioRecorder",
  deps = [
    ":Pipelines_Audio_AVAudioRecorder_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_AVAudioRecorder_lib",
  deps = [
    ":Pipelines_Audio_AVAudioRecorder"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioSession_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioSession_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioSession_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioSession_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAudioOfAVAudioSessionPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAudioOfAVAudioSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AVAudioSession_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AVAudioSession_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_AVAudioSession_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AVAudioSession-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AVAudioSession-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVAudioSession_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AVAudioSession_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Audio_AVAudioSession_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_AVAudioSession_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_AVAudioSession_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AVAudioSession",
  deps = [
    ":Pipelines_Audio_AVAudioSession_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_AVAudioSession_lib",
  deps = [
    ":Pipelines_Audio_AVAudioSession"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKAudioOfAVCaptureDevicePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKAudioOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AVCaptureDeviceAudio-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Audio_AVCaptureDeviceAudio-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Audio_AVCaptureDeviceAudio_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Audio_AVCaptureDeviceAudio_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Audio_AVCaptureDeviceAudio_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Audio_AVCaptureDeviceAudio",
  deps = [
    ":Pipelines_Audio_AVCaptureDeviceAudio_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Audio_AVCaptureDeviceAudio_lib",
  deps = [
    ":Pipelines_Audio_AVCaptureDeviceAudio"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCalendarOfEKEventPipeline.h",
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCalendarOfEKEventStorePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCalendarOfEKEventPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCalendarOfEKEventStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Calendar_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Calendar_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Calendar_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Calendar-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Calendar-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Calendar_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Calendar_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Calendar_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Calendar",
  deps = [
    ":Pipelines_Calendar_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Calendar_lib",
  deps = [
    ":Pipelines_Calendar"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEventStore_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEventStore_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEventStore_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEventStore_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCalendarOfEKEventStorePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCalendarOfEKEventStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Calendar_EKEventStore_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Calendar_EKEventStore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Calendar_EKEventStore_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Calendar_EKEventStore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Calendar_EKEventStore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEventStore_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Calendar_EKEventStore_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Calendar_EKEventStore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Calendar_EKEventStore_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Calendar_EKEventStore_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Calendar_EKEventStore",
  deps = [
    ":Pipelines_Calendar_EKEventStore_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Calendar_EKEventStore_lib",
  deps = [
    ":Pipelines_Calendar_EKEventStore"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEvent_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEvent_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEvent_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEvent_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCalendarOfEKEventPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCalendarOfEKEventPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Calendar_EKEvent_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Calendar_EKEvent_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Calendar_EKEvent_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Calendar_EKEvent-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Calendar_EKEvent-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Calendar_EKEvent_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Calendar_EKEvent_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Calendar_EKEvent_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Calendar_EKEvent_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Calendar_EKEvent_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Calendar_EKEvent",
  deps = [
    ":Pipelines_Calendar_EKEvent_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Calendar_EKEvent_lib",
  deps = [
    ":Pipelines_Calendar_EKEvent"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CallCenter_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CallCenter_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_CallCenter_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CallCenter-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CallCenter-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CallCenter_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_CallCenter_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_CallCenter_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CallCenter",
  deps = [
    ":Pipelines_CallCenter_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_CallCenter_lib",
  deps = [
    ":Pipelines_CallCenter"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_CTCallCenter_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_CTCallCenter_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_CTCallCenter_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_CTCallCenter_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKCallCenterOfCTCallCenterPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKCallCenterOfCTCallCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CallCenter_CTCallCenter_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CallCenter_CTCallCenter_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_CallCenter_CTCallCenter_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CallCenter_CTCallCenter-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CallCenter_CTCallCenter-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CallCenter_CTCallCenter_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CallCenter_CTCallCenter_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_CallCenter_CTCallCenter_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_CallCenter_CTCallCenter_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_CallCenter_CTCallCenter_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CallCenter_CTCallCenter",
  deps = [
    ":Pipelines_CallCenter_CTCallCenter_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_CallCenter_CTCallCenter_lib",
  deps = [
    ":Pipelines_CallCenter_CTCallCenter"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Clipboard_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Clipboard_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Clipboard_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Clipboard-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Clipboard-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Clipboard_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Clipboard_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Clipboard_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Clipboard",
  deps = [
    ":Pipelines_Clipboard_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Clipboard_lib",
  deps = [
    ":Pipelines_Clipboard"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_UIPasteboard_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_UIPasteboard_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_UIPasteboard_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_UIPasteboard_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKClipboardOfUIPasteboardPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKClipboardOfUIPasteboardPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Clipboard_UIPasteboard_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Clipboard_UIPasteboard_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Clipboard_UIPasteboard_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Clipboard_UIPasteboard-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Clipboard_UIPasteboard-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Clipboard_UIPasteboard_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Clipboard_UIPasteboard_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Clipboard_UIPasteboard_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Clipboard_UIPasteboard_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Clipboard_UIPasteboard_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Clipboard_UIPasteboard",
  deps = [
    ":Pipelines_Clipboard_UIPasteboard_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Clipboard_UIPasteboard_lib",
  deps = [
    ":Pipelines_Clipboard_UIPasteboard"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Contact_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Contact_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Contact_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact",
  deps = [
    ":Pipelines_Contact_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Contact_lib",
  deps = [
    ":Pipelines_Contact"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_ABPerson_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_ABPerson_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_ABPerson_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_ABPerson_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_ABPerson_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_ABPerson_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Contact_ABPerson_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact_ABPerson-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact_ABPerson-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_ABPerson_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_ABPerson_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Contact_ABPerson_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Contact_ABPerson_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Contact_ABPerson_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Contact/ABPerson/TSPKContactOfABPersonPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_ABPerson",
  deps = [
    ":Pipelines_Contact_ABPerson_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Contact_ABPerson_lib",
  deps = [
    ":Pipelines_Contact_ABPerson"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContactStore_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContactStore_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContactStore_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContactStore_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKContactOfCNContactStorePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKContactOfCNContactStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_CNContactStore_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_CNContactStore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Contact_CNContactStore_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact_CNContactStore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact_CNContactStore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContactStore_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_CNContactStore_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Contact_CNContactStore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Contact_CNContactStore_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Contact_CNContactStore_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_CNContactStore",
  deps = [
    ":Pipelines_Contact_CNContactStore_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Contact_CNContactStore_lib",
  deps = [
    ":Pipelines_Contact_CNContactStore"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContact_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContact_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContact_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContact_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_CNContact_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_CNContact_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Contact_CNContact_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact_CNContact-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Contact_CNContact-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Contact_CNContact_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Contact_CNContact_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Contact_CNContact_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Contact_CNContact_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Contact_CNContact_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Contact/CNContact/TSPKContactOfCNContactPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Contact_CNContact",
  deps = [
    ":Pipelines_Contact_CNContact_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Contact_CNContact_lib",
  deps = [
    ":Pipelines_Contact_CNContact"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_LocalNetwork_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_LocalNetwork_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_LocalNetwork_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork",
  deps = [
    ":Pipelines_LocalNetwork_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_LocalNetwork_lib",
  deps = [
    ":Pipelines_LocalNetwork"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_CFHost_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_CFHost_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_CFHost_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_CFHost_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_CFHost_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_CFHost_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_LocalNetwork_CFHost_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork_CFHost-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork_CFHost-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_CFHost_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_CFHost_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_LocalNetwork_CFHost_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_LocalNetwork_CFHost_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_LocalNetwork_CFHost_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/CFHost/TSPKLocalNetworkOfCFHostPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_CFHost",
  deps = [
    ":Pipelines_LocalNetwork_CFHost_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_LocalNetwork_CFHost_lib",
  deps = [
    ":Pipelines_LocalNetwork_CFHost"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_dns_sd_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_dns_sd_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_dns_sd_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_dns_sd_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_dns_sd_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_dns_sd_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_LocalNetwork_dns_sd_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork_dns_sd-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork_dns_sd-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_dns_sd_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_dns_sd_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_LocalNetwork_dns_sd_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_LocalNetwork_dns_sd_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_LocalNetwork_dns_sd_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/dns_sd/TSPKLocalNetworkOfDnsSdPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_dns_sd",
  deps = [
    ":Pipelines_LocalNetwork_dns_sd_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_LocalNetwork_dns_sd_lib",
  deps = [
    ":Pipelines_LocalNetwork_dns_sd"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_netdb_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_netdb_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_netdb_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_netdb_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_netdb_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_netdb_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_LocalNetwork_netdb_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork_netdb-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LocalNetwork_netdb-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LocalNetwork_netdb_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m",
    "TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LocalNetwork_netdb_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_LocalNetwork_netdb_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_LocalNetwork_netdb_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_LocalNetwork_netdb_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/TSPKLocalNetworkBasePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LocalNetwork/netdb/TSPKLocalNetworkOfNetdbPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LocalNetwork_netdb",
  deps = [
    ":Pipelines_LocalNetwork_netdb_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_LocalNetwork_netdb_lib",
  deps = [
    ":Pipelines_LocalNetwork_netdb"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Health_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Health_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Health_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Health-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Health-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Health_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Health_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Health_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Health",
  deps = [
    ":Pipelines_Health_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Health_lib",
  deps = [
    ":Pipelines_Health"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_HKHealthStore_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_HKHealthStore_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_HKHealthStore_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_HKHealthStore_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Health_HKHealthStore_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Health_HKHealthStore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Health_HKHealthStore_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Health_HKHealthStore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Health_HKHealthStore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Health_HKHealthStore_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Health_HKHealthStore_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Health_HKHealthStore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Health_HKHealthStore_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Health_HKHealthStore_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Health/HKHealthStore/TSPKHealthOfHKHealthStorePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Health_HKHealthStore",
  deps = [
    ":Pipelines_Health_HKHealthStore_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Health_HKHealthStore_lib",
  deps = [
    ":Pipelines_Health_HKHealthStore"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFA_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFA_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IDFA_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFA-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFA-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFA_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IDFA_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IDFA_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFA",
  deps = [
    ":Pipelines_IDFA_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IDFA_lib",
  deps = [
    ":Pipelines_IDFA"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ASIdentifierManager_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ASIdentifierManager_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ASIdentifierManager_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ASIdentifierManager_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFA_ASIdentifierManager_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFA_ASIdentifierManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IDFA_ASIdentifierManager_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFA_ASIdentifierManager-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFA_ASIdentifierManager-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ASIdentifierManager_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFA_ASIdentifierManager_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_IDFA_ASIdentifierManager_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IDFA_ASIdentifierManager_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IDFA_ASIdentifierManager_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IDFA/ASIdentifierManager/TSPKIDFAOfASIdentifierManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFA_ASIdentifierManager",
  deps = [
    ":Pipelines_IDFA_ASIdentifierManager_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IDFA_ASIdentifierManager_lib",
  deps = [
    ":Pipelines_IDFA_ASIdentifierManager"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ATTrackingManager_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ATTrackingManager_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ATTrackingManager_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ATTrackingManager_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFA_ATTrackingManager_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFA_ATTrackingManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IDFA_ATTrackingManager_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFA_ATTrackingManager-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFA_ATTrackingManager-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFA_ATTrackingManager_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFA_ATTrackingManager_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_IDFA_ATTrackingManager_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IDFA_ATTrackingManager_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IDFA_ATTrackingManager_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IDFA/ATTrackingManager/TSPKIDFAOfATTrackingManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFA_ATTrackingManager",
  deps = [
    ":Pipelines_IDFA_ATTrackingManager_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IDFA_ATTrackingManager_lib",
  deps = [
    ":Pipelines_IDFA_ATTrackingManager"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFV_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFV_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IDFV_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFV-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFV-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFV_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IDFV_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IDFV_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFV",
  deps = [
    ":Pipelines_IDFV_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IDFV_lib",
  deps = [
    ":Pipelines_IDFV"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_UIDeviceIDFV_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_UIDeviceIDFV_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_UIDeviceIDFV_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_UIDeviceIDFV_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKIDFVOfUIDevicePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKIDFVOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFV_UIDeviceIDFV_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFV_UIDeviceIDFV_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IDFV_UIDeviceIDFV_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFV_UIDeviceIDFV-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IDFV_UIDeviceIDFV-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IDFV_UIDeviceIDFV_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IDFV_UIDeviceIDFV_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_IDFV_UIDeviceIDFV_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IDFV_UIDeviceIDFV_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IDFV_UIDeviceIDFV_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IDFV_UIDeviceIDFV",
  deps = [
    ":Pipelines_IDFV_UIDeviceIDFV_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IDFV_UIDeviceIDFV_lib",
  deps = [
    ":Pipelines_IDFV_UIDeviceIDFV"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Location_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Location_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Location_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location",
  deps = [
    ":Pipelines_Location_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Location_lib",
  deps = [
    ":Pipelines_Location"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_CLLocationManagerLocation_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_CLLocationManagerLocation_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Location_CLLocationManagerLocation_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location_CLLocationManagerLocation-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location_CLLocationManagerLocation-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_CLLocationManagerLocation_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Location_CLLocationManagerLocation_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Location_CLLocationManagerLocation_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_CLLocationManagerLocation",
  deps = [
    ":Pipelines_Location_CLLocationManagerLocation_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Location_CLLocationManagerLocation_lib",
  deps = [
    ":Pipelines_Location_CLLocationManagerLocation"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKLocationOfCLLocationManagerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKLocationOfCLLocationManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location_CLLocationManagerLocation_Normal-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location_CLLocationManagerLocation_Normal-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Location_CLLocationManagerLocation_Normal_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Location_CLLocationManagerLocation_Normal_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Location_CLLocationManagerLocation_Normal_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal",
  deps = [
    ":Pipelines_Location_CLLocationManagerLocation_Normal_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Location_CLLocationManagerLocation_Normal_lib",
  deps = [
    ":Pipelines_Location_CLLocationManagerLocation_Normal"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerReqAlwaysAuthPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization",
  deps = [
    ":Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization_lib",
  deps = [
    ":Pipelines_Location_CLLocationManagerLocation_RequestAlwaysAuthorization"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LockID_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LockID_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_LockID_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LockID-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LockID-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LockID_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_LockID_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_LockID_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LockID",
  deps = [
    ":Pipelines_LockID_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_LockID_lib",
  deps = [
    ":Pipelines_LockID"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_LAContext_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_LAContext_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_LAContext_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_LAContext_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKLockIDOfLAContextPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKLockIDOfLAContextPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LockID_LAContext_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LockID_LAContext_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_LockID_LAContext_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LockID_LAContext-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_LockID_LAContext-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_LockID_LAContext_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_LockID_LAContext_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_LockID_LAContext_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_LockID_LAContext_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_LockID_LAContext_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_LockID_LAContext",
  deps = [
    ":Pipelines_LockID_LAContext_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_LockID_LAContext_lib",
  deps = [
    ":Pipelines_LockID_LAContext"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Media_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Media_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Media_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Media-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Media-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Media_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Media_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Media_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Media",
  deps = [
    ":Pipelines_Media_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Media_lib",
  deps = [
    ":Pipelines_Media"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaLibrary_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaLibrary_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaLibrary_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaLibrary_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Media_MPMediaLibrary_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Media_MPMediaLibrary_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Media_MPMediaLibrary_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Media_MPMediaLibrary-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Media_MPMediaLibrary-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaLibrary_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Media_MPMediaLibrary_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Media_MPMediaLibrary_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Media_MPMediaLibrary_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Media_MPMediaLibrary_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Media/MPMediaLibrary/TSPKMediaOfMPMediaLibraryPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Media_MPMediaLibrary",
  deps = [
    ":Pipelines_Media_MPMediaLibrary_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Media_MPMediaLibrary_lib",
  deps = [
    ":Pipelines_Media_MPMediaLibrary"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaQuery_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaQuery_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaQuery_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaQuery_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Media_MPMediaQuery_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Media_MPMediaQuery_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Media_MPMediaQuery_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Media_MPMediaQuery-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Media_MPMediaQuery-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Media_MPMediaQuery_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Media_MPMediaQuery_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Media_MPMediaQuery_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Media_MPMediaQuery_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Media_MPMediaQuery_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Media/MPMediaQuery/TSPKMediaOfMPMediaQueryPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Media_MPMediaQuery",
  deps = [
    ":Pipelines_Media_MPMediaQuery_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Media_MPMediaQuery_lib",
  deps = [
    ":Pipelines_Media_MPMediaQuery"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Message_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Message_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Message_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Message-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Message-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Message_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Message_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Message_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Message",
  deps = [
    ":Pipelines_Message_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Message_lib",
  deps = [
    ":Pipelines_Message"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_MFMessageComposeViewController_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_MFMessageComposeViewController_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_MFMessageComposeViewController_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_MFMessageComposeViewController_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Message_MFMessageComposeViewController_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Message_MFMessageComposeViewController_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Message_MFMessageComposeViewController_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Message_MFMessageComposeViewController-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Message_MFMessageComposeViewController-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Message_MFMessageComposeViewController_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Message_MFMessageComposeViewController_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Message_MFMessageComposeViewController_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Message_MFMessageComposeViewController_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Message_MFMessageComposeViewController_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Message/MFMessageComposeViewController/TSPKMessageOfMFMessageComposeViewControllerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Message_MFMessageComposeViewController",
  deps = [
    ":Pipelines_Message_MFMessageComposeViewController_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Message_MFMessageComposeViewController_lib",
  deps = [
    ":Pipelines_Message_MFMessageComposeViewController"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion",
  deps = [
    ":Pipelines_Motion_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_lib",
  deps = [
    ":Pipelines_Motion"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CLLocationManagerMotion_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CLLocationManagerMotion_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CLLocationManagerMotion_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CLLocationManagerMotion_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMotionOfCLLocationManagerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMotionOfCLLocationManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CLLocationManagerMotion_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CLLocationManagerMotion_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_CLLocationManagerMotion_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CLLocationManagerMotion-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CLLocationManagerMotion-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CLLocationManagerMotion_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CLLocationManagerMotion_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Motion_CLLocationManagerMotion_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_CLLocationManagerMotion_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_CLLocationManagerMotion_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CLLocationManagerMotion",
  deps = [
    ":Pipelines_Motion_CLLocationManagerMotion_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_CLLocationManagerMotion_lib",
  deps = [
    ":Pipelines_Motion_CLLocationManagerMotion"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMAltimeter_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMAltimeter_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMAltimeter_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMAltimeter_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMAltimeter_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMAltimeter_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_CMAltimeter_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMAltimeter-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMAltimeter-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMAltimeter_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMAltimeter_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Motion_CMAltimeter_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_CMAltimeter_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_CMAltimeter_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMAltimeter/TSPKMotionOfCMAltimeterPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMAltimeter",
  deps = [
    ":Pipelines_Motion_CMAltimeter_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_CMAltimeter_lib",
  deps = [
    ":Pipelines_Motion_CMAltimeter"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionActivityManager_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionActivityManager_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionActivityManager_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionActivityManager_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMMotionActivityManager_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMMotionActivityManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_CMMotionActivityManager_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMMotionActivityManager-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMMotionActivityManager-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionActivityManager_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMMotionActivityManager_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Motion_CMMotionActivityManager_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_CMMotionActivityManager_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_CMMotionActivityManager_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMMotionActivityManager/TSPKMotionOfCMMotionActivityManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMMotionActivityManager",
  deps = [
    ":Pipelines_Motion_CMMotionActivityManager_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_CMMotionActivityManager_lib",
  deps = [
    ":Pipelines_Motion_CMMotionActivityManager"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionManager_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionManager_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionManager_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionManager_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMotionOfCMMotionManagerPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMotionOfCMMotionManagerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMMotionManager_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMMotionManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_CMMotionManager_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMMotionManager-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMMotionManager-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMMotionManager_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMMotionManager_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Motion_CMMotionManager_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_CMMotionManager_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_CMMotionManager_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMMotionManager",
  deps = [
    ":Pipelines_Motion_CMMotionManager_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_CMMotionManager_lib",
  deps = [
    ":Pipelines_Motion_CMMotionManager"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMPedometer_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMPedometer_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMPedometer_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMPedometer_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMPedometer_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMPedometer_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_CMPedometer_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMPedometer-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_CMPedometer-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_CMPedometer_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_CMPedometer_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Motion_CMPedometer_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_CMPedometer_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_CMPedometer_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMPedometer/TSPKMotionOfCMPedometerPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_CMPedometer",
  deps = [
    ":Pipelines_Motion_CMPedometer_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_CMPedometer_lib",
  deps = [
    ":Pipelines_Motion_CMPedometer"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_UIDeviceMotion_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_UIDeviceMotion_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_UIDeviceMotion_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_UIDeviceMotion_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKMotionOfUIDevicePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKMotionOfUIDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_UIDeviceMotion_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_UIDeviceMotion_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Motion_UIDeviceMotion_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_UIDeviceMotion-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Motion_UIDeviceMotion-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Motion_UIDeviceMotion_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Motion_UIDeviceMotion_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Motion_UIDeviceMotion_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Motion_UIDeviceMotion_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Motion_UIDeviceMotion_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Motion_UIDeviceMotion",
  deps = [
    ":Pipelines_Motion_UIDeviceMotion_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Motion_UIDeviceMotion_lib",
  deps = [
    ":Pipelines_Motion_UIDeviceMotion"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Push_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Push_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Push_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Push-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Push-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Push_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Push_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Push_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Push",
  deps = [
    ":Pipelines_Push_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Push_lib",
  deps = [
    ":Pipelines_Push"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_UNUserNotificationCenter_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_UNUserNotificationCenter_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_UNUserNotificationCenter_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_UNUserNotificationCenter_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKPushOfUNUserNotificationCenterPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKPushOfUNUserNotificationCenterPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Push_UNUserNotificationCenter_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Push_UNUserNotificationCenter_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Push_UNUserNotificationCenter_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Push_UNUserNotificationCenter-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Push_UNUserNotificationCenter-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Push_UNUserNotificationCenter_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Push_UNUserNotificationCenter_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Push_UNUserNotificationCenter_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Push_UNUserNotificationCenter_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Push_UNUserNotificationCenter_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Push_UNUserNotificationCenter",
  deps = [
    ":Pipelines_Push_UNUserNotificationCenter_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Push_UNUserNotificationCenter_lib",
  deps = [
    ":Pipelines_Push_UNUserNotificationCenter"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_ScreenRecorder_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_ScreenRecorder_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_ScreenRecorder_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_ScreenRecorder-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_ScreenRecorder-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_ScreenRecorder_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_ScreenRecorder_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_ScreenRecorder_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_ScreenRecorder",
  deps = [
    ":Pipelines_ScreenRecorder_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_ScreenRecorder_lib",
  deps = [
    ":Pipelines_ScreenRecorder"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_ScreenRecorder_RPScreenRecorder-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_ScreenRecorder_RPScreenRecorder-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_ScreenRecorder_RPScreenRecorder_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_ScreenRecorder_RPScreenRecorder_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_ScreenRecorder_RPScreenRecorder_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPScreenRecorder/TSPKScreenRecordOfRPScreenRecorderPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder",
  deps = [
    ":Pipelines_ScreenRecorder_RPScreenRecorder_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_ScreenRecorder_RPScreenRecorder_lib",
  deps = [
    ":Pipelines_ScreenRecorder_RPScreenRecorder"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_ScreenRecorder_RPSystemBroadcastPickerView-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_ScreenRecorder_RPSystemBroadcastPickerView-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView",
  deps = [
    ":Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_lib",
  deps = [
    ":Pipelines_ScreenRecorder_RPSystemBroadcastPickerView"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_SnapShot_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_SnapShot_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_SnapShot_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_SnapShot-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_SnapShot-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_SnapShot_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_SnapShot_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_SnapShot_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_SnapShot",
  deps = [
    ":Pipelines_SnapShot_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_SnapShot_lib",
  deps = [
    ":Pipelines_SnapShot"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIGraphics_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIGraphics_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIGraphics_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIGraphics_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_SnapShot_UIGraphics_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_SnapShot_UIGraphics_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_SnapShot_UIGraphics_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_SnapShot_UIGraphics-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_SnapShot_UIGraphics-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIGraphics_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_SnapShot_UIGraphics_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_SnapShot_UIGraphics_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_SnapShot_UIGraphics_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_SnapShot_UIGraphics_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/SnapShot/UIGraphics/TSPKSnapShotOfUIGraphicsPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_SnapShot_UIGraphics",
  deps = [
    ":Pipelines_SnapShot_UIGraphics_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_SnapShot_UIGraphics_lib",
  deps = [
    ":Pipelines_SnapShot_UIGraphics"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIView_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIView_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIView_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIView_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_SnapShot_UIView_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_SnapShot_UIView_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_SnapShot_UIView_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_SnapShot_UIView-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_SnapShot_UIView-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_SnapShot_UIView_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_SnapShot_UIView_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_SnapShot_UIView_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_SnapShot_UIView_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_SnapShot_UIView_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/SnapShot/UIView/TSPKSnapShotOfUIViewPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_SnapShot_UIView",
  deps = [
    ":Pipelines_SnapShot_UIView_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_SnapShot_UIView_lib",
  deps = [
    ":Pipelines_SnapShot_UIView"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Video_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Video_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Video_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video",
  deps = [
    ":Pipelines_Video_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Video_lib",
  deps = [
    ":Pipelines_Video"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureDeviceVideo_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureDeviceVideo_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureDeviceVideo_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureDeviceVideo_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKVideoOfAVCaptureDevicePipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKVideoOfAVCaptureDevicePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_AVCaptureDeviceVideo_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_AVCaptureDeviceVideo_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Video_AVCaptureDeviceVideo_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_AVCaptureDeviceVideo-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_AVCaptureDeviceVideo-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureDeviceVideo_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_AVCaptureDeviceVideo_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Video_AVCaptureDeviceVideo_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Video_AVCaptureDeviceVideo_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Video_AVCaptureDeviceVideo_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_AVCaptureDeviceVideo",
  deps = [
    ":Pipelines_Video_AVCaptureDeviceVideo_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Video_AVCaptureDeviceVideo_lib",
  deps = [
    ":Pipelines_Video_AVCaptureDeviceVideo"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureSession_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureSession_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureSession_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureSession_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKVideoOfAVCaptureSessionPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKVideoOfAVCaptureSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_AVCaptureSession_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_AVCaptureSession_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Video_AVCaptureSession_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_AVCaptureSession-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_AVCaptureSession-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureSession_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_AVCaptureSession_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Video_AVCaptureSession_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Video_AVCaptureSession_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Video_AVCaptureSession_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_AVCaptureSession",
  deps = [
    ":Pipelines_Video_AVCaptureSession_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Video_AVCaptureSession_lib",
  deps = [
    ":Pipelines_Video_AVCaptureSession"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureStillImageOutput_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureStillImageOutput_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureStillImageOutput_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureStillImageOutput_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKVideoOfAVCaptureStillImageOutputPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKVideoOfAVCaptureStillImageOutputPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_AVCaptureStillImageOutput_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_AVCaptureStillImageOutput_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Video_AVCaptureStillImageOutput_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_AVCaptureStillImageOutput-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_AVCaptureStillImageOutput-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_AVCaptureStillImageOutput_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_AVCaptureStillImageOutput_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Video_AVCaptureStillImageOutput_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Video_AVCaptureStillImageOutput_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Video_AVCaptureStillImageOutput_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_AVCaptureStillImageOutput",
  deps = [
    ":Pipelines_Video_AVCaptureStillImageOutput_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Video_AVCaptureStillImageOutput_lib",
  deps = [
    ":Pipelines_Video_AVCaptureStillImageOutput"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_ARSession_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_ARSession_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_ARSession_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_ARSession_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_ARSession_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_ARSession_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Video_ARSession_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_ARSession-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Video_ARSession-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Video_ARSession_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Video_ARSession_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Video_ARSession_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Video_ARSession_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Video_ARSession_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Video/ARSession/TSPKVideoOfARSessionPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Video_ARSession",
  deps = [
    ":Pipelines_Video_ARSession_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Video_ARSession_lib",
  deps = [
    ":Pipelines_Video_ARSession"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Network_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Network_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Network_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network",
  deps = [
    ":Pipelines_Network_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Network_lib",
  deps = [
    ":Pipelines_Network"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CLGeocoder_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CLGeocoder_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CLGeocoder_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CLGeocoder_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKNetworkOfCLGeocoderPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKNetworkOfCLGeocoderPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_CLGeocoder_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_CLGeocoder_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Network_CLGeocoder_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_CLGeocoder-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_CLGeocoder-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CLGeocoder_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_CLGeocoder_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Network_CLGeocoder_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Network_CLGeocoder_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Network_CLGeocoder_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_CLGeocoder",
  deps = [
    ":Pipelines_Network_CLGeocoder_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Network_CLGeocoder_lib",
  deps = [
    ":Pipelines_Network_CLGeocoder"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTCarrier_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTCarrier_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTCarrier_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTCarrier_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_CTCarrier_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_CTCarrier_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Network_CTCarrier_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_CTCarrier-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_CTCarrier-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTCarrier_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_CTCarrier_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Network_CTCarrier_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Network_CTCarrier_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Network_CTCarrier_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Network/CTCarrier/TSPKNetworkOfCTCarrierPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_CTCarrier",
  deps = [
    ":Pipelines_Network_CTCarrier_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Network_CTCarrier_lib",
  deps = [
    ":Pipelines_Network_CTCarrier"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_CTTelephonyNetworkInfo-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_CTTelephonyNetworkInfo-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Network_CTTelephonyNetworkInfo_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Network_CTTelephonyNetworkInfo_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Network_CTTelephonyNetworkInfo_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Network/CTTelephonyNetworkInfo/TSPKNetworkOfCTTelephonyNetworkInfoPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_CTTelephonyNetworkInfo",
  deps = [
    ":Pipelines_Network_CTTelephonyNetworkInfo_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Network_CTTelephonyNetworkInfo_lib",
  deps = [
    ":Pipelines_Network_CTTelephonyNetworkInfo"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_NSLocale_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_NSLocale_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_NSLocale_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_NSLocale_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_NSLocale_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_NSLocale_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Network_NSLocale_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_NSLocale-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Network_NSLocale-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Network_NSLocale_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Network_NSLocale_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Network_NSLocale_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Network_NSLocale_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Network_NSLocale_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Network/NSLocale/TSPKNetworkOfNSLocalePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Network_NSLocale",
  deps = [
    ":Pipelines_Network_NSLocale_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Network_NSLocale_lib",
  deps = [
    ":Pipelines_Network_NSLocale"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IP_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IP_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IP_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IP-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IP-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IP_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IP_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IP_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IP",
  deps = [
    ":Pipelines_IP_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IP_lib",
  deps = [
    ":Pipelines_IP"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_ifaddrs_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_ifaddrs_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_ifaddrs_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_ifaddrs_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKIPOfIfAddrsPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKIPOfIfAddrsPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IP_ifaddrs_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IP_ifaddrs_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_IP_ifaddrs_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IP_ifaddrs-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_IP_ifaddrs-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_IP_ifaddrs_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_IP_ifaddrs_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_IP_ifaddrs_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_IP_ifaddrs_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_IP_ifaddrs_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_IP_ifaddrs",
  deps = [
    ":Pipelines_IP_ifaddrs_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_IP_ifaddrs_lib",
  deps = [
    ":Pipelines_IP_ifaddrs"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Wifi_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Wifi_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Wifi_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Wifi-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Wifi-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Wifi_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Wifi_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Wifi_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Wifi",
  deps = [
    ":Pipelines_Wifi_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Wifi_lib",
  deps = [
    ":Pipelines_Wifi"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_CaptiveNetwork_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_CaptiveNetwork_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_CaptiveNetwork_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_CaptiveNetwork_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKWifiOfCaptiveNetworkPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKWifiOfCaptiveNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Wifi_CaptiveNetwork_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Wifi_CaptiveNetwork_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Wifi_CaptiveNetwork_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Wifi_CaptiveNetwork-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Wifi_CaptiveNetwork-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_CaptiveNetwork_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Wifi_CaptiveNetwork_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Wifi_CaptiveNetwork_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Wifi_CaptiveNetwork_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Wifi_CaptiveNetwork_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Wifi_CaptiveNetwork",
  deps = [
    ":Pipelines_Wifi_CaptiveNetwork_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Wifi_CaptiveNetwork_lib",
  deps = [
    ":Pipelines_Wifi_CaptiveNetwork"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_NEHotspotNetwork_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_NEHotspotNetwork_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_NEHotspotNetwork_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_NEHotspotNetwork_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/TSPrivacyKit/TSPKWifiOfNEHotspotNetworkPipeline.h",
    "pod_support/Headers/Public/TSPrivacyKit/TSPKWifiOfNEHotspotNetworkPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Wifi_NEHotspotNetwork_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Wifi_NEHotspotNetwork_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Wifi_NEHotspotNetwork_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Wifi_NEHotspotNetwork-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Wifi_NEHotspotNetwork-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Wifi_NEHotspotNetwork_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Wifi_NEHotspotNetwork_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Wifi_NEHotspotNetwork_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Wifi_NEHotspotNetwork_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Wifi_NEHotspotNetwork_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Wifi_NEHotspotNetwork",
  deps = [
    ":Pipelines_Wifi_NEHotspotNetwork_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Wifi_NEHotspotNetwork_lib",
  deps = [
    ":Pipelines_Wifi_NEHotspotNetwork"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Application_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Application_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Application_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Application-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Application-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Application_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Application_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Application_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Application",
  deps = [
    ":Pipelines_Application_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Application_lib",
  deps = [
    ":Pipelines_Application"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_UIApplication_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_UIApplication_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_UIApplication_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_UIApplication_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Application_UIApplication_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Application_UIApplication_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_Application_UIApplication_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Application_UIApplication-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_Application_UIApplication-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_Application_UIApplication_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_Application_UIApplication_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_Application_UIApplication_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_Application_UIApplication_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_Application_UIApplication_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/Application/UIApplication/TSPKApplicationOfUIApplicationPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_Application_UIApplication",
  deps = [
    ":Pipelines_Application_UIApplication_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_Application_UIApplication_lib",
  deps = [
    ":Pipelines_Application_UIApplication"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_OpenUDID_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_OpenUDID_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/OpenUDID/TSPKOpenUDIDOfOpenUDIDPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_OpenUDID_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/OpenUDID/TSPKOpenUDIDOfOpenUDIDPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_OpenUDID_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_OpenUDID_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_OpenUDID_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_OpenUDID_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_OpenUDID-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_OpenUDID-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_OpenUDID_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/OpenUDID/TSPKOpenUDIDOfOpenUDIDPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_OpenUDID_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_OpenUDID_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_OpenUDID_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@OpenUDID//:OpenUDID_objc_interface",
    "@OpenUDID//:OpenUDID_swift_interface",
    ":Pipelines_OpenUDID_objc_interface",
    "@OpenUDID//:OpenUDID_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/OpenUDID/TSPKOpenUDIDOfOpenUDIDPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_OpenUDID",
  deps = [
    ":Pipelines_OpenUDID_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_OpenUDID_lib",
  deps = [
    ":Pipelines_OpenUDID"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CIAD_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CIAD_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_CIAD_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CIAD-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CIAD-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CIAD_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_CIAD_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDInstall//:BDInstall_objc_interface",
    "@BDInstall//:BDInstall_swift_interface",
    ":Pipelines_CIAD_objc_interface",
    "@BDInstall//:BDInstall_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CIAD",
  deps = [
    ":Pipelines_CIAD_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_CIAD_lib",
  deps = [
    ":Pipelines_CIAD"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_CIADOfBDInstall_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_CIADOfBDInstall_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_CIADOfBDInstall_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_CIADOfBDInstall_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CIAD_CIADOfBDInstall_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CIAD_CIADOfBDInstall_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_CIAD_CIADOfBDInstall_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CIAD_CIADOfBDInstall-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CIAD_CIADOfBDInstall-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CIAD_CIADOfBDInstall_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CIAD_CIADOfBDInstall_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_CIAD_CIADOfBDInstall_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_CIAD_CIADOfBDInstall_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDInstall//:BDInstall_objc_interface",
    "@BDInstall//:BDInstall_swift_interface",
    ":Pipelines_CIAD_CIADOfBDInstall_objc_interface",
    "@BDInstall//:BDInstall_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/CIAD/BDInstall/TSPKCIADOfBDInstallPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CIAD_CIADOfBDInstall",
  deps = [
    ":Pipelines_CIAD_CIADOfBDInstall_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_CIAD_CIADOfBDInstall_lib",
  deps = [
    ":Pipelines_CIAD_CIADOfBDInstall"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_BaseUserInput_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_BaseUserInput_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_BaseUserInput_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_BaseUserInput_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_BaseUserInput_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_BaseUserInput_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_BaseUserInput_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_BaseUserInput-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_BaseUserInput-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_BaseUserInput_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_BaseUserInput_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_BaseUserInput_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_BaseUserInput_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_BaseUserInput_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_BaseUserInput",
  deps = [
    ":Pipelines_BaseUserInput_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_BaseUserInput_lib",
  deps = [
    ":Pipelines_BaseUserInput"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_UserInput_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_UserInput_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_UserInput_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_UserInput-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_UserInput-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_UserInput_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_UserInput_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_UserInput_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_UserInput",
  deps = [
    ":Pipelines_UserInput_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_UserInput_lib",
  deps = [
    ":Pipelines_UserInput"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextField_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextField_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextField_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextField_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_UserInput_UserInputOfUITextField_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_UserInput_UserInputOfUITextField_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_UserInput_UserInputOfUITextField_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_UserInput_UserInputOfUITextField-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_UserInput_UserInputOfUITextField-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextField_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_UserInput_UserInputOfUITextField_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_UserInput_UserInputOfUITextField_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_UserInput_UserInputOfUITextField_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_UserInput_UserInputOfUITextField_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/UITextField/TSPKUserInputOfUITextFieldPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_UserInput_UserInputOfUITextField",
  deps = [
    ":Pipelines_UserInput_UserInputOfUITextField_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_UserInput_UserInputOfUITextField_lib",
  deps = [
    ":Pipelines_UserInput_UserInputOfUITextField"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextView_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextView_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextView_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextView_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_UserInput_UserInputOfUITextView_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_UserInput_UserInputOfUITextView_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_UserInput_UserInputOfUITextView_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_UserInput_UserInputOfUITextView-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_UserInput_UserInputOfUITextView-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_UserInput_UserInputOfUITextView_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m",
    "TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_UserInput_UserInputOfUITextView_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_UserInput_UserInputOfUITextView_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_UserInput_UserInputOfUITextView_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_UserInput_UserInputOfUITextView_objc_interface"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/UITextView/TSPKUserInputOfUITextViewPipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_UserInput_UserInputOfUITextView",
  deps = [
    ":Pipelines_UserInput_UserInputOfUITextView_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_UserInput_UserInputOfUITextView_lib",
  deps = [
    ":Pipelines_UserInput_UserInputOfUITextView"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CustomUserInput_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CustomUserInput_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_CustomUserInput_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CustomUserInput-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CustomUserInput-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CustomUserInput_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_CustomUserInput_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Pipelines_CustomUserInput_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CustomUserInput",
  deps = [
    ":Pipelines_CustomUserInput_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_CustomUserInput_lib",
  deps = [
    ":Pipelines_CustomUserInput"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_public_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CustomUserInput/YYTextView/TSPKUserInputOfYYTextViewPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_hdrs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/CustomUserInput/YYTextView/TSPKUserInputOfYYTextViewPipeline.h",
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CustomUserInput_UserInputOfYYTextView-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Pipelines_CustomUserInput_UserInputOfYYTextView-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_srcs",
  srcs = [
    "TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m",
    "TSPrivacyKit/Classes/Pipelines/CustomUserInput/YYTextView/TSPKUserInputOfYYTextViewPipeline.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_oc",
  enable_modules = 1,
  srcs = [
    "Pipelines_CustomUserInput_UserInputOfYYTextView_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Pipelines_CustomUserInput_UserInputOfYYTextView_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@YYText//:YYText_objc_interface",
    "@YYText//:YYText_swift_interface",
    ":Pipelines_CustomUserInput_UserInputOfYYTextView_objc_interface",
    "@YYText//:YYText_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Classes/Pipelines/CustomUserInput/YYTextView/TSPKUserInputOfYYTextViewPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/UserInput/TSPKUserInputBasePipeline.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView",
  deps = [
    ":Pipelines_CustomUserInput_UserInputOfYYTextView_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Pipelines_CustomUserInput_UserInputOfYYTextView_lib",
  deps = [
    ":Pipelines_CustomUserInput_UserInputOfYYTextView"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Tests_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Tests_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Tests_module_map",
  module_map = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Tests-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/TSPrivacyKit/TSPrivacyKit_Tests-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_srcs",
  srcs = [
    "TSPrivacyKit/Tests/src/TSPKSignalManagerTests.m",
    "TSPrivacyKit/Tests/src/TSPKUtilsTests.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Tests_oc",
  enable_modules = 1,
  srcs = [
    "Tests_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Tests_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "AVFoundation"
  ],
  deps = [
    ":TSPrivacyKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":TSPrivacyKit_private_includes",
    ":TSPrivacyKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@OCMock//:OCMock_objc_interface",
    "@OCMock//:OCMock_swift_interface",
    ":Tests_objc_interface",
    "@OCMock//:OCMock_module_map"
  ],
  per_label_options = [
    ".*TSPrivacyKit/Tests/src/TSPKSignalManagerTests.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Tests/src/TSPKUtilsTests.m@-Wall,-Wno-pragmas"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Tests",
  deps = [
    ":Tests_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Tests_lib",
  deps = [
    ":Tests"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lark_TSPrivacyKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@TSPrivacyKit//:APICustom_objc_interface", "@TSPrivacyKit//:Cache_CacheCore_objc_interface", "@TSPrivacyKit//:Cache_CacheDefault_objc_interface", "@TSPrivacyKit//:Core_objc_interface", "@TSPrivacyKit//:Impls_Consumer_objc_interface", "@TSPrivacyKit//:ModuleInterface_objc_interface", "@TSPrivacyKit//:NetworkCore_objc_interface", "@TSPrivacyKit//:NetworkModuleInterface_objc_interface", "@TSPrivacyKit//:NetworkPipeline_TTNet_objc_interface", "@TSPrivacyKit//:NetworkPipeline_URLProtocol_objc_interface", "@TSPrivacyKit//:Pipelines_Album_objc_interface", "@TSPrivacyKit//:Pipelines_Album_ALAssetsLibrary_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHAsset_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHAssetChangeRequest_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHAssetCollection_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHCollectionList_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHImageManager_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHPhotoLibrary_objc_interface", "@TSPrivacyKit//:Pipelines_Album_PHPickerViewController_objc_interface", "@TSPrivacyKit//:Pipelines_Album_UIImagePickerController_objc_interface", "@TSPrivacyKit//:Pipelines_Audio_AVAudioSession_objc_interface", "@TSPrivacyKit//:Pipelines_Audio_AVCaptureDeviceAudio_objc_interface", "@TSPrivacyKit//:Pipelines_Audio_AudioOutput_objc_interface", "@TSPrivacyKit//:Pipelines_Audio_AudioQueue_objc_interface", "@TSPrivacyKit//:Pipelines_Calendar_objc_interface", "@TSPrivacyKit//:Pipelines_Calendar_EKEvent_objc_interface", "@TSPrivacyKit//:Pipelines_Calendar_EKEventStore_objc_interface", "@TSPrivacyKit//:Pipelines_CallCenter_CTCallCenter_objc_interface", "@TSPrivacyKit//:Pipelines_Clipboard_UIPasteboard_objc_interface", "@TSPrivacyKit//:Pipelines_Contact_CNContactStore_objc_interface", "@TSPrivacyKit//:Pipelines_IDFV_UIDeviceIDFV_objc_interface", "@TSPrivacyKit//:Pipelines_IP_ifaddrs_objc_interface", "@TSPrivacyKit//:Pipelines_Location_CLLocationManagerLocation_Normal_objc_interface", "@TSPrivacyKit//:Pipelines_LockID_LAContext_objc_interface", "@TSPrivacyKit//:Pipelines_Motion_CLLocationManagerMotion_objc_interface", "@TSPrivacyKit//:Pipelines_Motion_CMMotionManager_objc_interface", "@TSPrivacyKit//:Pipelines_Motion_UIDeviceMotion_objc_interface", "@TSPrivacyKit//:Pipelines_Network_CLGeocoder_objc_interface", "@TSPrivacyKit//:Pipelines_Push_UNUserNotificationCenter_objc_interface", "@TSPrivacyKit//:Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_objc_interface", "@TSPrivacyKit//:Pipelines_Video_AVCaptureDeviceVideo_objc_interface", "@TSPrivacyKit//:Pipelines_Video_AVCaptureSession_objc_interface", "@TSPrivacyKit//:Pipelines_Video_AVCaptureStillImageOutput_objc_interface", "@TSPrivacyKit//:Pipelines_Wifi_CaptiveNetwork_objc_interface", "@TSPrivacyKit//:Pipelines_Wifi_NEHotspotNetwork_objc_interface", "@TSPrivacyKit//:TSPKUtil_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_TSPrivacyKit",
  target_name = "Lark",
  module_name = "TSPrivacyKit",
  public_hdrs = ["@TSPrivacyKit//:APICustom_public_hdrs", "@TSPrivacyKit//:Cache_CacheCore_public_hdrs", "@TSPrivacyKit//:Cache_CacheDefault_public_hdrs", "@TSPrivacyKit//:Core_public_hdrs", "@TSPrivacyKit//:Impls_Consumer_public_hdrs", "@TSPrivacyKit//:ModuleInterface_public_hdrs", "@TSPrivacyKit//:NetworkCore_public_hdrs", "@TSPrivacyKit//:NetworkModuleInterface_public_hdrs", "@TSPrivacyKit//:NetworkPipeline_TTNet_public_hdrs", "@TSPrivacyKit//:NetworkPipeline_URLProtocol_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_ALAssetsLibrary_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHAsset_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHAssetChangeRequest_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHAssetCollection_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHCollectionList_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHImageManager_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHPhotoLibrary_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHPickerViewController_public_hdrs", "@TSPrivacyKit//:Pipelines_Album_UIImagePickerController_public_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AVAudioSession_public_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AVCaptureDeviceAudio_public_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AudioOutput_public_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AudioQueue_public_hdrs", "@TSPrivacyKit//:Pipelines_Calendar_public_hdrs", "@TSPrivacyKit//:Pipelines_Calendar_EKEvent_public_hdrs", "@TSPrivacyKit//:Pipelines_Calendar_EKEventStore_public_hdrs", "@TSPrivacyKit//:Pipelines_CallCenter_CTCallCenter_public_hdrs", "@TSPrivacyKit//:Pipelines_Clipboard_UIPasteboard_public_hdrs", "@TSPrivacyKit//:Pipelines_Contact_CNContactStore_public_hdrs", "@TSPrivacyKit//:Pipelines_IDFV_UIDeviceIDFV_public_hdrs", "@TSPrivacyKit//:Pipelines_IP_ifaddrs_public_hdrs", "@TSPrivacyKit//:Pipelines_Location_CLLocationManagerLocation_Normal_public_hdrs", "@TSPrivacyKit//:Pipelines_LockID_LAContext_public_hdrs", "@TSPrivacyKit//:Pipelines_Motion_CLLocationManagerMotion_public_hdrs", "@TSPrivacyKit//:Pipelines_Motion_CMMotionManager_public_hdrs", "@TSPrivacyKit//:Pipelines_Motion_UIDeviceMotion_public_hdrs", "@TSPrivacyKit//:Pipelines_Network_CLGeocoder_public_hdrs", "@TSPrivacyKit//:Pipelines_Push_UNUserNotificationCenter_public_hdrs", "@TSPrivacyKit//:Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_public_hdrs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureDeviceVideo_public_hdrs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureSession_public_hdrs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureStillImageOutput_public_hdrs", "@TSPrivacyKit//:Pipelines_Wifi_CaptiveNetwork_public_hdrs", "@TSPrivacyKit//:Pipelines_Wifi_NEHotspotNetwork_public_hdrs", "@TSPrivacyKit//:TSPKUtil_public_hdrs"],
  private_hdrs = ["@TSPrivacyKit//:APICustom_private_hdrs", "@TSPrivacyKit//:Cache_CacheCore_private_hdrs", "@TSPrivacyKit//:Cache_CacheDefault_private_hdrs", "@TSPrivacyKit//:Core_private_hdrs", "@TSPrivacyKit//:Impls_Consumer_private_hdrs", "@TSPrivacyKit//:ModuleInterface_private_hdrs", "@TSPrivacyKit//:NetworkCore_private_hdrs", "@TSPrivacyKit//:NetworkModuleInterface_private_hdrs", "@TSPrivacyKit//:NetworkPipeline_TTNet_private_hdrs", "@TSPrivacyKit//:NetworkPipeline_URLProtocol_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_ALAssetsLibrary_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHAsset_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHAssetChangeRequest_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHAssetCollection_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHCollectionList_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHImageManager_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHPhotoLibrary_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_PHPickerViewController_private_hdrs", "@TSPrivacyKit//:Pipelines_Album_UIImagePickerController_private_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AVAudioSession_private_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AVCaptureDeviceAudio_private_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AudioOutput_private_hdrs", "@TSPrivacyKit//:Pipelines_Audio_AudioQueue_private_hdrs", "@TSPrivacyKit//:Pipelines_Calendar_private_hdrs", "@TSPrivacyKit//:Pipelines_Calendar_EKEvent_private_hdrs", "@TSPrivacyKit//:Pipelines_Calendar_EKEventStore_private_hdrs", "@TSPrivacyKit//:Pipelines_CallCenter_CTCallCenter_private_hdrs", "@TSPrivacyKit//:Pipelines_Clipboard_UIPasteboard_private_hdrs", "@TSPrivacyKit//:Pipelines_Contact_CNContactStore_private_hdrs", "@TSPrivacyKit//:Pipelines_IDFV_UIDeviceIDFV_private_hdrs", "@TSPrivacyKit//:Pipelines_IP_ifaddrs_private_hdrs", "@TSPrivacyKit//:Pipelines_Location_CLLocationManagerLocation_Normal_private_hdrs", "@TSPrivacyKit//:Pipelines_LockID_LAContext_private_hdrs", "@TSPrivacyKit//:Pipelines_Motion_CLLocationManagerMotion_private_hdrs", "@TSPrivacyKit//:Pipelines_Motion_CMMotionManager_private_hdrs", "@TSPrivacyKit//:Pipelines_Motion_UIDeviceMotion_private_hdrs", "@TSPrivacyKit//:Pipelines_Network_CLGeocoder_private_hdrs", "@TSPrivacyKit//:Pipelines_Push_UNUserNotificationCenter_private_hdrs", "@TSPrivacyKit//:Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_private_hdrs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureDeviceVideo_private_hdrs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureSession_private_hdrs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureStillImageOutput_private_hdrs", "@TSPrivacyKit//:Pipelines_Wifi_CaptiveNetwork_private_hdrs", "@TSPrivacyKit//:Pipelines_Wifi_NEHotspotNetwork_private_hdrs", "@TSPrivacyKit//:TSPKUtil_private_hdrs"],
  srcs = ["@TSPrivacyKit//:APICustom_srcs", "@TSPrivacyKit//:Cache_CacheCore_srcs", "@TSPrivacyKit//:Cache_CacheDefault_srcs", "@TSPrivacyKit//:Core_srcs", "@TSPrivacyKit//:Impls_Consumer_srcs", "@TSPrivacyKit//:ModuleInterface_srcs", "@TSPrivacyKit//:NetworkCore_srcs", "@TSPrivacyKit//:NetworkModuleInterface_srcs", "@TSPrivacyKit//:NetworkPipeline_TTNet_srcs", "@TSPrivacyKit//:NetworkPipeline_URLProtocol_srcs", "@TSPrivacyKit//:Pipelines_Album_ALAssetsLibrary_srcs", "@TSPrivacyKit//:Pipelines_Album_PHAssetChangeRequest_srcs", "@TSPrivacyKit//:Pipelines_Album_PHAssetCollection_srcs", "@TSPrivacyKit//:Pipelines_Album_PHAsset_srcs", "@TSPrivacyKit//:Pipelines_Album_PHCollectionList_srcs", "@TSPrivacyKit//:Pipelines_Album_PHImageManager_srcs", "@TSPrivacyKit//:Pipelines_Album_PHPhotoLibrary_srcs", "@TSPrivacyKit//:Pipelines_Album_PHPickerViewController_srcs", "@TSPrivacyKit//:Pipelines_Album_UIImagePickerController_srcs", "@TSPrivacyKit//:Pipelines_Audio_AVAudioSession_srcs", "@TSPrivacyKit//:Pipelines_Audio_AVCaptureDeviceAudio_srcs", "@TSPrivacyKit//:Pipelines_Audio_AudioOutput_srcs", "@TSPrivacyKit//:Pipelines_Audio_AudioQueue_srcs", "@TSPrivacyKit//:Pipelines_Calendar_EKEventStore_srcs", "@TSPrivacyKit//:Pipelines_Calendar_EKEvent_srcs", "@TSPrivacyKit//:Pipelines_CallCenter_CTCallCenter_srcs", "@TSPrivacyKit//:Pipelines_Clipboard_UIPasteboard_srcs", "@TSPrivacyKit//:Pipelines_Contact_CNContactStore_srcs", "@TSPrivacyKit//:Pipelines_IDFV_UIDeviceIDFV_srcs", "@TSPrivacyKit//:Pipelines_IP_ifaddrs_srcs", "@TSPrivacyKit//:Pipelines_Location_CLLocationManagerLocation_Normal_srcs", "@TSPrivacyKit//:Pipelines_LockID_LAContext_srcs", "@TSPrivacyKit//:Pipelines_Motion_CLLocationManagerMotion_srcs", "@TSPrivacyKit//:Pipelines_Motion_CMMotionManager_srcs", "@TSPrivacyKit//:Pipelines_Motion_UIDeviceMotion_srcs", "@TSPrivacyKit//:Pipelines_Network_CLGeocoder_srcs", "@TSPrivacyKit//:Pipelines_Push_UNUserNotificationCenter_srcs", "@TSPrivacyKit//:Pipelines_ScreenRecorder_RPSystemBroadcastPickerView_srcs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureDeviceVideo_srcs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureSession_srcs", "@TSPrivacyKit//:Pipelines_Video_AVCaptureStillImageOutput_srcs", "@TSPrivacyKit//:Pipelines_Wifi_CaptiveNetwork_srcs", "@TSPrivacyKit//:Pipelines_Wifi_NEHotspotNetwork_srcs", "@TSPrivacyKit//:TSPKUtil_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = ["ByteDanceKit", "PNSServiceKit", "BDFishhook", "BDModel", "TTNetworkManager"],
  per_label_options = [".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheGroup.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStoreFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheStrategyFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Cache/TSPKCacheSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Context/TSPKContext.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorMonitor.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/CustomAnchor/TSPKCustomAnchorReleaseDetectManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/DetectPlan/TSPKDetectPlan.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/Model/TSPKDetectPlanModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/Model/TSPKSceneRuleModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/TSPKDelayDetectSchduler.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/TSPKDetectEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Detect/TSPKDetectManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseBadCaseTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectReleaseTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectTaskFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/DetectTask/TSPKDetectUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKBinaryInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackCacheInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackFilter.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKCallStackRuleInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/CallStackFilter/TSPKMachInfo.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/Frequency/TSPKRuleEngineFrequencyManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKAppBackgroundFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKCallStackFilterFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKFrequencyFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKGuardFuseEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKInSameSubnetworkFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKPolicyDecisionSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRegexFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKRuleEngineSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidateEmailFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/RuleEngine/TSPKValidatePhoneNumberFunc.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Statistic/TSPKApiStatisticsSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticConfig.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Statistic/TSPKStatisticModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKAPICostTimeManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKAccessEntrySubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKCrossPlatformSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKIgnoreDetectSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKKeyPathEventSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Subscriber/TSPKReleaseAPIBizInfoSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKAdvanceAppStatusTrigger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTrigger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKDetectTriggerFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Trigger/TSPKPageStatusTrigger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Util/TSPKMediaNotificationObserver.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Util/TSPKNetworkManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Custom/Util/TSPKWebViewUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Core/TSPKCacheEnv.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Core/TSPKCacheProcessor.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Default/TSPKMemoryStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Default/TSPKRuleCacheStrategy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Cache/Default/TSPKTimeCacheStrategy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKOfflineToolConsumerProxy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKReporter.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticConsumerProxy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKStatisticEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Consumer/TSPKUploadEventConsumerProxy.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Detect/TSPKDetectCondition.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/DetectTask/TSPKDetectReleaseStatusTask.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Entry/TSPKEntryManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Entry/TSPKEntryUnit.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Entry/TSPKHandleResult.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Environment/TSPKConfigs.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKAPIModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKAspectModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKEventData.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/Model/TSPKRuleExecuteResultModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/TSPKBaseEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/TSPKEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Events/TSPKEventManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Pipeline/TSPKDetectPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Pipeline/TSPKPipelineSwizzleUtil.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKApiLogSubscriber.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKExternalLogReceiver.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+log.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager+pair.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Signal/TSPKSignalManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/CallStackStore/TSPKBacktraceStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectCacheStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/InstanceStore/TSPKRelationObjectModel.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/TSPKStoreFactory.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Store/TSPKStoreManager.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Thread/TSPKThreadPool.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/NSObject+TSAddition.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/NSObject+TSDeallocAssociate.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSDeallocAssociate.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKAppLifeCycleObserver.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKFishhookUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKLogger.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKPageStatusStore.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKSafeMutableDict.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPKUtils.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/TSPrivacyKitConstants.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Core/Util/UIViewController+TSAddition.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Impls/Consumer/TSPKStatisticConsumer.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Impls/Consumer/TSPKUploadEventConsumer.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/ModuleInterface/TSPKMonitor.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/ModuleInterface/TSPKMonitorBuilder.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkActionUtil.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkConfigs.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkDetectPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkEvent.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkReporter.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Core/TSPKNetworkUtil.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/ModuleInterface/TSPKNetworkMonitor.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNet/TSPKTTNetInterceptorPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpRequest+TSPKCommonRequest.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/TTNet/TTHttpResponse+TSPKCommonResponse.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLRequest+TSPKCommonRequest.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/NSURLResponse+TSPKCommonResponse.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Network/Pipelines/URLProtocol/TSPKNetworkURLProtocolPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/ALAssetsLibrary/TSPKAlbumOfALAssetsLibraryPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAsset/TSPKAlbumOfPHAssetPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAssetChangeRequest/TSPKAlbumOfPHAssetChangeRequestPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHAssetCollection/TSPKAlbumOfPHAssetCollectionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHCollectionList/TSPKAlbumOfPHCollectionListPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHImageManager/TSPKAlbumOfPHImageManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHPhotoLibrary/TSPKAlbumOfPHPhotoLibraryPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/PHPickerViewController/TSPKAlbumOfPHPickerViewControllerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Album/UIImagePickerController/TSPKAlbumOfUIImagePickerControllerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVAudioSession/TSPKAudioOfAVAudioSessionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AVCaptureDevice/TSPKAudioOfAVCaptureDevicePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AudioOutput/TSPKAudioOfAudioOutputPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Audio/AudioQueue/TSPKAudioOfAudioQueuePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Calendar/EKEvent/TSPKCalendarOfEKEventPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Calendar/EKEventStore/TSPKCalendarOfEKEventStorePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/CallCenter/CTCallCenter/TSPKCallCenterOfCTCallCenterPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Clipboard/UIPasteboard/TSPKClipboardOfUIPasteboardPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Contact/CNContactStore/TSPKContactOfCNContactStorePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/IDFV/UIDevice/TSPKIDFVOfUIDevicePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/IP/ifaddrs/TSPKIPOfIfAddrsPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Location/CLLocationManager/TSPKLocationOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/LockID/LAContext/TSPKLockIDOfLAContextPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CLLocationManager/TSPKMotionOfCLLocationManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/CMMotionManager/TSPKMotionOfCMMotionManagerPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Motion/UIDevice/TSPKMotionOfUIDevicePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Network/CLGeocoder/TSPKNetworkOfCLGeocoderPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Push/UNUserNotificationCenter/TSPKPushOfUNUserNotificationCenterPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/ScreenRecorder/RPSystemBroadcastPickerView/TSPKScreenRecorderOfRPSystemBroadcastPickerViewPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureDevice/TSPKVideoOfAVCaptureDevicePipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureSession/TSPKVideoOfAVCaptureSessionPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Video/AVCaptureStillImageOutput/TSPKVideoOfAVCaptureStillImageOutputPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Wifi/CaptiveNetwork/TSPKWifiOfCaptiveNetworkPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Pipelines/Wifi/NEHotspotNetwork/TSPKWifiOfNEHotspotNetworkPipeline.m@-Wall,-Wno-pragmas",
    ".*TSPrivacyKit/Classes/Util/TSPKLock.m@-Wall,-Wno-pragmas"],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DTSPrivacyKit_POD_VERSION=@\\\"1128_0.4.0.49-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "TSPrivacyKit_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "TSPrivacyKit_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = ["AVFoundation"],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = [],
  features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "TSPrivacyKit_features", []),
  cxx_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "TSPrivacyKit_cpp_features", []),
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "TSPrivacyKit_objc_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "TSPrivacyKit_features", []),
  link_dynamic = getattr(defs_external_objc_library, "TSPrivacyKit_dynamic", False),
  tags = getattr(defs_external_objc_library, "TSPrivacyKit_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("TSPrivacyKit", {}),
  visibility = ["//visibility:public"],
)