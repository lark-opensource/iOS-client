// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: lark_fg.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

#if DEBUG || ALPHA
extension LarkFg_Proto_LarkFgError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN_ERROR"),
    1: .same(proto: "USER_VALID_ERROR"),
  ]
}
#endif

#if DEBUG || ALPHA
extension LarkFg_Proto_FuncParamsXe310569e8131bb62: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "userid"),
    2: .same(proto: "key"),
  ]
}
#endif

#if DEBUG || ALPHA
extension LarkFg_Proto_FuncReturnX3dc8b8542df1cbb1: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "ret"),
  ]
}
#endif

#if DEBUG || ALPHA
extension LarkFg_Proto_FuncErrorXb7613bdc761bb2dc: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension LarkFg_Proto___molten_ffi_placeholder: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()
}
#endif
