#ifdef __OBJC__
#import <UIKit/UIKit.h>
#else
#ifndef FOUNDATION_EXPORT
#if defined(__cplusplus)
#define FOUNDATION_EXPORT extern "C"
#else
#define FOUNDATION_EXPORT extern
#endif
#endif
#endif

#import "calib3d.hpp"
#import "calib3d/calib3d.hpp"
#import "calib3d/calib3d_c.h"
#import "core.hpp"
#import "core/affine.hpp"
#import "core/base.hpp"
#import "core/bufferpool.hpp"
#import "core/core.hpp"
#import "core/core_c.h"
#import "core/cvdef.h"
#import "core/cvstd.hpp"
#import "core/cvstd.inl.hpp"
#import "core/directx.hpp"
#import "core/eigen.hpp"
#import "core/fast_math.hpp"
#import "core/hal/hal.hpp"
#import "core/hal/interface.h"
#import "core/hal/intrin.hpp"
#import "core/hal/intrin_cpp.hpp"
#import "core/hal/intrin_neon.hpp"
#import "core/hal/intrin_sse.hpp"
#import "core/hal_avx/hal.hpp"
#import "core/hal_avx/interface.h"
#import "core/hal_avx/intrin.hpp"
#import "core/hal_avx/intrin_avx.hpp"
#import "core/hal_avx/intrin_avx512.hpp"
#import "core/hal_avx/intrin_cpp.hpp"
#import "core/hal_avx/intrin_forward.hpp"
#import "core/hal_avx/intrin_msa.hpp"
#import "core/hal_avx/intrin_neon.hpp"
#import "core/hal_avx/intrin_rvv.hpp"
#import "core/hal_avx/intrin_rvv071.hpp"
#import "core/hal_avx/intrin_sse.hpp"
#import "core/hal_avx/intrin_sse_em.hpp"
#import "core/hal_avx/intrin_vsx.hpp"
#import "core/hal_avx/intrin_wasm.hpp"
#import "core/hal_avx/msa_macros.h"
#import "core/hal_avx/simd_utils.impl.hpp"
#import "core/ippasync.hpp"
#import "core/mat.hpp"
#import "core/mat.inl.hpp"
#import "core/matx.hpp"
#import "core/neon_utils.hpp"
#import "core/ocl.hpp"
#import "core/ocl_genbase.hpp"
#import "core/opencl/ocl_defs.hpp"
#import "core/opengl.hpp"
#import "core/operations.hpp"
#import "core/optim.hpp"
#import "core/ovx.hpp"
#import "core/persistence.hpp"
#import "core/private.hpp"
#import "core/ptr.inl.hpp"
#import "core/saturate.hpp"
#import "core/sse_utils.hpp"
#import "core/traits.hpp"
#import "core/types.hpp"
#import "core/types_c.h"
#import "core/utility.hpp"
#import "core/utils/instrumentation.hpp"
#import "core/utils/tls.hpp"
#import "core/va_intel.hpp"
#import "core/version.hpp"
#import "core/wimage.hpp"
#import "cvconfig.h"
#import "datacvt.hpp"
#import "features2d.hpp"
#import "features2d/features2d.hpp"
#import "flann.hpp"
#import "flann/all_indices.h"
#import "flann/allocator.h"
#import "flann/any.h"
#import "flann/autotuned_index.h"
#import "flann/composite_index.h"
#import "flann/config.h"
#import "flann/defines.h"
#import "flann/dist.h"
#import "flann/dummy.h"
#import "flann/dynamic_bitset.h"
#import "flann/flann.hpp"
#import "flann/flann_base.hpp"
#import "flann/general.h"
#import "flann/ground_truth.h"
#import "flann/hdf5.h"
#import "flann/heap.h"
#import "flann/hierarchical_clustering_index.h"
#import "flann/index_testing.h"
#import "flann/kdtree_index.h"
#import "flann/kdtree_single_index.h"
#import "flann/kmeans_index.h"
#import "flann/linear_index.h"
#import "flann/logger.h"
#import "flann/lsh_index.h"
#import "flann/lsh_table.h"
#import "flann/matrix.h"
#import "flann/miniflann.hpp"
#import "flann/nn_index.h"
#import "flann/object_factory.h"
#import "flann/params.h"
#import "flann/random.h"
#import "flann/result_set.h"
#import "flann/sampling.h"
#import "flann/saving.h"
#import "flann/simplex_downhill.h"
#import "flann/timer.h"
#import "imgcodecs.hpp"
#import "imgcodecs/imgcodecs.hpp"
#import "imgcodecs/imgcodecs_c.h"
#import "imgproc.hpp"
#import "imgproc/detail/distortion_model.hpp"
#import "imgproc/hal/hal.hpp"
#import "imgproc/hal/interface.h"
#import "imgproc/imgproc.hpp"
#import "imgproc/imgproc_c.h"
#import "imgproc/types_c.h"
#import "mobilecv2.hpp"
#import "mobilecv_modules.hpp"
#import "optflow.hpp"
#import "optflow/motempl.hpp"
#import "optflow/pcaflow.hpp"
#import "optflow/sparse_matching_gpc.hpp"
#import "photo.hpp"
#import "photo/photo.hpp"
#import "photo/photo_c.h"
#import "video.hpp"
#import "video/background_segm.hpp"
#import "video/tracking.hpp"
#import "video/tracking_c.h"
#import "video/video.hpp"
#import "xfeatures2d.hpp"
#import "xfeatures2d/nonfree.hpp"
#import "ximgproc.hpp"
#import "ximgproc/edge_filter.hpp"
#import "yuv_cvt.hpp"

FOUNDATION_EXPORT double mobilecv2VersionNumber;
FOUNDATION_EXPORT const unsigned char mobilecv2VersionString[];
