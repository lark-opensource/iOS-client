load('@build_bazel_rules_swift//swift:swift.bzl', 'swift_library')
load('@build_bazel_rules_apple//apple:resources.bzl', 'apple_resource_bundle', 'gen_bundle_plist')
load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "MeegoMod_pod_hdrs",
  srcs = [
    ":MeegoMod_root_pod_hdrs",
    ":CCMMod_pod_hdrs",
    ":MessengerMod_pod_hdrs",
    ":LarkOpenPlatform_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "MeegoMod_private_includes",
  include = [
    "external/MeegoMod/pod_support/Headers/Private/MeegoMod/"
  ],
  deps = [],
  external_name = "MeegoMod"
)
gen_includes(
  name = "MeegoMod_public_includes",
  include = [
    "external/MeegoMod/pod_support/Headers/Public/MeegoMod/"
  ],
  deps = [],
  external_name = "MeegoMod"
)
filegroup(
  name = "_MeegoMod_hdrs",
  srcs = [
    ":MeegoMod_root_hdrs",
    ":CCMMod_hdrs",
    ":MessengerMod_hdrs",
    ":LarkOpenPlatform_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "MeegoMod_xcode_hmapsource",
  hdrs = [
    ":MeegoMod_root_hdrs",
    ":CCMMod_hdrs",
    ":LarkOpenPlatform_hdrs",
    ":MessengerMod_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "MeegoMod_xcode_hmap",
  dep = ":MeegoMod_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/MeegoMod/*-bitsky-generated.modulemap", "pod_support/Headers/Public/MeegoMod/*-bitsky-generated-umbrella.h"]))
gen_bundle_plist(
  name = "GEN_MeegoModAuto_Plist",
  bundle_name = "MeegoModAuto",
  minimum_os_version = "11.0",
  bundle_version = "7.9.0",
  platform_type = select(
    {
      "//conditions:default": "ios",
      ":osxCase": "osx",
      ":tvosCase": "tvos",
      ":watchosCase": "watchos"
    }
  )
)
apple_resource_bundle(
  name = "MeegoMod_MeegoModAuto",
  bundle_name = "MeegoModAuto",
  infoplists = [
    ":GEN_MeegoModAuto_Plist"
  ],
  resources = [
    "auto_resources/README.md"
  ],
  minimum_os_version = "11.0",
  optimization = "space",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "MeegoMod_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "MeegoMod",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MeegoMod_root_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MeegoMod_root_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MeegoMod_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MeegoMod_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MeegoMod_swift_interface",
  deps = [
    ":MeegoMod_swift"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MeegoMod_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "MeegoMod_module_map",
  module_map = "pod_support/Headers/Public/MeegoMod/MeegoMod-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/MeegoMod/MeegoMod-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MeegoMod_root_swift_srcs",
  srcs = [
    "src/MeegoAssembly.swift",
    "src/MeegoDependencyImpl.swift"
  ],
  visibility = [
    "//visibility:public"
  ]
)
swift_library(
  name = "MeegoMod_swift",
  module_name = "MeegoMod",
  srcs = [
    "MeegoMod_root_swift_srcs"
  ],
  deps = [
    "@PodHeaders//:PodHeaders_namespace_public_interface",
    ":MeegoMod_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@EENavigator//:EENavigator_objc_interface",
    "@LarkAccountInterface//:LarkAccountInterface_objc_interface",
    "@LarkAssembler//:LarkAssembler_objc_interface",
    "@LarkContainer//:LarkContainer_objc_interface",
    "@LarkEnv//:LarkEnv_objc_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_objc_interface",
    "@LarkFoundation//:LarkFoundation_objc_interface",
    "@LarkLocalizations//:LarkLocalizations_objc_interface",
    "@LarkMeego//:LarkMeego_objc_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_objc_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_objc_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_objc_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_objc_interface",
    "@LarkSetting//:LarkSetting_objc_interface",
    "@LarkUIKit//:LarkUIKit_objc_interface",
    "@RustPB//:RustPB_objc_interface",
    "@Swinject//:Swinject_objc_interface",
    "@EENavigator//:EENavigator_swift_interface",
    "@LarkAccountInterface//:LarkAccountInterface_swift_interface",
    "@LarkAssembler//:LarkAssembler_swift_interface",
    "@LarkContainer//:LarkContainer_swift_interface",
    "@LarkEnv//:LarkEnv_swift_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_swift_interface",
    "@LarkFoundation//:LarkFoundation_swift_interface",
    "@LarkLocalizations//:LarkLocalizations_swift_interface",
    "@LarkMeego//:LarkMeego_swift_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_swift_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_swift_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_swift_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_swift_interface",
    "@LarkSetting//:LarkSetting_swift_interface",
    "@LarkUIKit//:LarkUIKit_swift_interface",
    "@RustPB//:RustPB_swift_interface",
    "@Swinject//:Swinject_swift_interface",
    "@EENavigator//:EENavigator_module_map",
    "@LarkAccountInterface//:LarkAccountInterface_module_map",
    "@LarkAssembler//:LarkAssembler_module_map",
    "@LarkContainer//:LarkContainer_module_map",
    "@LarkEnv//:LarkEnv_module_map",
    "@LarkFlutterContainer//:LarkFlutterContainer_module_map",
    "@LarkFoundation//:LarkFoundation_module_map",
    "@LarkLocalizations//:LarkLocalizations_module_map",
    "@LarkMeego//:LarkMeego_module_map",
    "@LarkMeegoLogger//:LarkMeegoLogger_module_map",
    "@LarkMeegoStorage//:LarkMeegoStorage_module_map",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_module_map",
    "@LarkSensitivityControl//:LarkSensitivityControl_module_map",
    "@LarkSetting//:LarkSetting_module_map",
    "@LarkUIKit//:LarkUIKit_module_map",
    "@RustPB//:RustPB_module_map",
    "@Swinject//:Swinject_module_map",
    ":MeegoMod_module_map",
    ":MeegoMod_objc_interface"
  ],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ) + [
    "-DCOCOAPODS",
    "-suppress-warnings",
    "-import-underlying-module",
    "-swift-version",
    "5",
    "-Xcc",
    "-fobjc-weak",
    "-Xcc",
    "-stdlib=libc++",
    "-Xcc",
    "-DCOCOAPODS=1",
    "-Xcc",
    "-fdiagnostics-show-note-include-stack",
    "-Xcc",
    "-fno-common",
    "-Xcc",
    "-fmessage-length=0",
    "-Xcc",
    "-fpascal-strings",
    "-Xcc",
    "-fstrict-aliasing",
    "-Xcc",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Xcc",
    "-I.",
    "-Xcc",
    "-Wno-nullability-completeness",
    "-Xcc",
    "-Wno-nonnull",
    "-Xcc",
    "-Wno-nullability",
    "-Xcc",
    "-Wno-incomplete-umbrella"
  ],
  generates_header = True,
  generated_header_name = "MeegoMod-Swift.h",
  features = [
    "swift.no_generated_module_map",
    "swift.opt_uses_wmo",
    "swift.opt_uses_osize"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MeegoMod_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "MeegoMod_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":MeegoMod_private_includes",
    ":MeegoMod_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@EENavigator//:EENavigator_objc_interface",
    "@LarkAccountInterface//:LarkAccountInterface_objc_interface",
    "@LarkAssembler//:LarkAssembler_objc_interface",
    "@LarkContainer//:LarkContainer_objc_interface",
    "@LarkEnv//:LarkEnv_objc_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_objc_interface",
    "@LarkFoundation//:LarkFoundation_objc_interface",
    "@LarkLocalizations//:LarkLocalizations_objc_interface",
    "@LarkMeego//:LarkMeego_objc_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_objc_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_objc_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_objc_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_objc_interface",
    "@LarkSetting//:LarkSetting_objc_interface",
    "@LarkUIKit//:LarkUIKit_objc_interface",
    "@RustPB//:RustPB_objc_interface",
    "@Swinject//:Swinject_objc_interface",
    "@EENavigator//:EENavigator_swift_interface",
    "@LarkAccountInterface//:LarkAccountInterface_swift_interface",
    "@LarkAssembler//:LarkAssembler_swift_interface",
    "@LarkContainer//:LarkContainer_swift_interface",
    "@LarkEnv//:LarkEnv_swift_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_swift_interface",
    "@LarkFoundation//:LarkFoundation_swift_interface",
    "@LarkLocalizations//:LarkLocalizations_swift_interface",
    "@LarkMeego//:LarkMeego_swift_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_swift_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_swift_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_swift_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_swift_interface",
    "@LarkSetting//:LarkSetting_swift_interface",
    "@LarkUIKit//:LarkUIKit_swift_interface",
    "@RustPB//:RustPB_swift_interface",
    "@Swinject//:Swinject_swift_interface",
    ":MeegoMod_swift",
    ":MeegoMod_objc_interface",
    "@EENavigator//:EENavigator_module_map",
    "@LarkAccountInterface//:LarkAccountInterface_module_map",
    "@LarkAssembler//:LarkAssembler_module_map",
    "@LarkContainer//:LarkContainer_module_map",
    "@LarkEnv//:LarkEnv_module_map",
    "@LarkFlutterContainer//:LarkFlutterContainer_module_map",
    "@LarkFoundation//:LarkFoundation_module_map",
    "@LarkLocalizations//:LarkLocalizations_module_map",
    "@LarkMeego//:LarkMeego_module_map",
    "@LarkMeegoLogger//:LarkMeegoLogger_module_map",
    "@LarkMeegoStorage//:LarkMeegoStorage_module_map",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_module_map",
    "@LarkSensitivityControl//:LarkSensitivityControl_module_map",
    "@LarkSetting//:LarkSetting_module_map",
    "@LarkUIKit//:LarkUIKit_module_map",
    "@RustPB//:RustPB_module_map",
    "@Swinject//:Swinject_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  data = [
    ":MeegoMod_MeegoModAuto"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MeegoMod",
  deps = [
    ":MeegoMod_oc",
    ":MeegoMod_swift"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "MeegoMod_lib",
  deps = [
    ":MeegoMod"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CCMMod_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CCMMod_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CCMMod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CCMMod_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CCMMod_swift_interface",
  deps = [],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CCMMod_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CCMMod_module_map",
  module_map = "pod_support/Headers/Public/MeegoMod/MeegoMod_CCMMod-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/MeegoMod/MeegoMod_CCMMod-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CCMMod_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "CCMMod_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":MeegoMod_private_includes",
    ":MeegoMod_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@SpaceInterface//:SpaceInterface_objc_interface",
    "@EENavigator//:EENavigator_objc_interface",
    "@LarkAccountInterface//:LarkAccountInterface_objc_interface",
    "@LarkAssembler//:LarkAssembler_objc_interface",
    "@LarkContainer//:LarkContainer_objc_interface",
    "@LarkEnv//:LarkEnv_objc_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_objc_interface",
    "@LarkFoundation//:LarkFoundation_objc_interface",
    "@LarkLocalizations//:LarkLocalizations_objc_interface",
    "@LarkMeego//:LarkMeego_objc_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_objc_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_objc_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_objc_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_objc_interface",
    "@LarkSetting//:LarkSetting_objc_interface",
    "@LarkUIKit//:LarkUIKit_objc_interface",
    "@RustPB//:RustPB_objc_interface",
    "@Swinject//:Swinject_objc_interface",
    "@SpaceInterface//:SpaceInterface_swift_interface",
    "@EENavigator//:EENavigator_swift_interface",
    "@LarkAccountInterface//:LarkAccountInterface_swift_interface",
    "@LarkAssembler//:LarkAssembler_swift_interface",
    "@LarkContainer//:LarkContainer_swift_interface",
    "@LarkEnv//:LarkEnv_swift_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_swift_interface",
    "@LarkFoundation//:LarkFoundation_swift_interface",
    "@LarkLocalizations//:LarkLocalizations_swift_interface",
    "@LarkMeego//:LarkMeego_swift_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_swift_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_swift_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_swift_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_swift_interface",
    "@LarkSetting//:LarkSetting_swift_interface",
    "@LarkUIKit//:LarkUIKit_swift_interface",
    "@RustPB//:RustPB_swift_interface",
    "@Swinject//:Swinject_swift_interface",
    ":CCMMod_objc_interface",
    "@SpaceInterface//:SpaceInterface_module_map",
    "@EENavigator//:EENavigator_module_map",
    "@LarkAccountInterface//:LarkAccountInterface_module_map",
    "@LarkAssembler//:LarkAssembler_module_map",
    "@LarkContainer//:LarkContainer_module_map",
    "@LarkEnv//:LarkEnv_module_map",
    "@LarkFlutterContainer//:LarkFlutterContainer_module_map",
    "@LarkFoundation//:LarkFoundation_module_map",
    "@LarkLocalizations//:LarkLocalizations_module_map",
    "@LarkMeego//:LarkMeego_module_map",
    "@LarkMeegoLogger//:LarkMeegoLogger_module_map",
    "@LarkMeegoStorage//:LarkMeegoStorage_module_map",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_module_map",
    "@LarkSensitivityControl//:LarkSensitivityControl_module_map",
    "@LarkSetting//:LarkSetting_module_map",
    "@LarkUIKit//:LarkUIKit_module_map",
    "@RustPB//:RustPB_module_map",
    "@Swinject//:Swinject_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CCMMod",
  deps = [
    ":CCMMod_oc"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CCMMod_lib",
  deps = [
    ":CCMMod"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MessengerMod_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MessengerMod_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MessengerMod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MessengerMod_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MessengerMod_swift_interface",
  deps = [],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MessengerMod_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "MessengerMod_module_map",
  module_map = "pod_support/Headers/Public/MeegoMod/MeegoMod_MessengerMod-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/MeegoMod/MeegoMod_MessengerMod-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MessengerMod_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "MessengerMod_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":MeegoMod_private_includes",
    ":MeegoMod_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@LarkMessengerInterface//:LarkMessengerInterface_objc_interface",
    "@LarkSDKInterface//:LarkSDKInterface_objc_interface",
    "@EENavigator//:EENavigator_objc_interface",
    "@LarkAccountInterface//:LarkAccountInterface_objc_interface",
    "@LarkAssembler//:LarkAssembler_objc_interface",
    "@LarkContainer//:LarkContainer_objc_interface",
    "@LarkEnv//:LarkEnv_objc_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_objc_interface",
    "@LarkFoundation//:LarkFoundation_objc_interface",
    "@LarkLocalizations//:LarkLocalizations_objc_interface",
    "@LarkMeego//:LarkMeego_objc_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_objc_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_objc_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_objc_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_objc_interface",
    "@LarkSetting//:LarkSetting_objc_interface",
    "@LarkUIKit//:LarkUIKit_objc_interface",
    "@RustPB//:RustPB_objc_interface",
    "@Swinject//:Swinject_objc_interface",
    "@LarkMessengerInterface//:LarkMessengerInterface_swift_interface",
    "@LarkSDKInterface//:LarkSDKInterface_swift_interface",
    "@EENavigator//:EENavigator_swift_interface",
    "@LarkAccountInterface//:LarkAccountInterface_swift_interface",
    "@LarkAssembler//:LarkAssembler_swift_interface",
    "@LarkContainer//:LarkContainer_swift_interface",
    "@LarkEnv//:LarkEnv_swift_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_swift_interface",
    "@LarkFoundation//:LarkFoundation_swift_interface",
    "@LarkLocalizations//:LarkLocalizations_swift_interface",
    "@LarkMeego//:LarkMeego_swift_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_swift_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_swift_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_swift_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_swift_interface",
    "@LarkSetting//:LarkSetting_swift_interface",
    "@LarkUIKit//:LarkUIKit_swift_interface",
    "@RustPB//:RustPB_swift_interface",
    "@Swinject//:Swinject_swift_interface",
    ":MessengerMod_objc_interface",
    "@LarkMessengerInterface//:LarkMessengerInterface_module_map",
    "@LarkSDKInterface//:LarkSDKInterface_module_map",
    "@EENavigator//:EENavigator_module_map",
    "@LarkAccountInterface//:LarkAccountInterface_module_map",
    "@LarkAssembler//:LarkAssembler_module_map",
    "@LarkContainer//:LarkContainer_module_map",
    "@LarkEnv//:LarkEnv_module_map",
    "@LarkFlutterContainer//:LarkFlutterContainer_module_map",
    "@LarkFoundation//:LarkFoundation_module_map",
    "@LarkLocalizations//:LarkLocalizations_module_map",
    "@LarkMeego//:LarkMeego_module_map",
    "@LarkMeegoLogger//:LarkMeegoLogger_module_map",
    "@LarkMeegoStorage//:LarkMeegoStorage_module_map",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_module_map",
    "@LarkSensitivityControl//:LarkSensitivityControl_module_map",
    "@LarkSetting//:LarkSetting_module_map",
    "@LarkUIKit//:LarkUIKit_module_map",
    "@RustPB//:RustPB_module_map",
    "@Swinject//:Swinject_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MessengerMod",
  deps = [
    ":MessengerMod_oc"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "MessengerMod_lib",
  deps = [
    ":MessengerMod"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LarkOpenPlatform_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LarkOpenPlatform_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LarkOpenPlatform_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LarkOpenPlatform_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "LarkOpenPlatform_swift_interface",
  deps = [],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "LarkOpenPlatform_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "LarkOpenPlatform_module_map",
  module_map = "pod_support/Headers/Public/MeegoMod/MeegoMod_LarkOpenPlatform-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/MeegoMod/MeegoMod_LarkOpenPlatform-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "LarkOpenPlatform_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "LarkOpenPlatform_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":MeegoMod_private_includes",
    ":MeegoMod_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@LarkOPInterface//:LarkOPInterface_objc_interface",
    "@EENavigator//:EENavigator_objc_interface",
    "@LarkAccountInterface//:LarkAccountInterface_objc_interface",
    "@LarkAssembler//:LarkAssembler_objc_interface",
    "@LarkContainer//:LarkContainer_objc_interface",
    "@LarkEnv//:LarkEnv_objc_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_objc_interface",
    "@LarkFoundation//:LarkFoundation_objc_interface",
    "@LarkLocalizations//:LarkLocalizations_objc_interface",
    "@LarkMeego//:LarkMeego_objc_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_objc_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_objc_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_objc_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_objc_interface",
    "@LarkSetting//:LarkSetting_objc_interface",
    "@LarkUIKit//:LarkUIKit_objc_interface",
    "@RustPB//:RustPB_objc_interface",
    "@Swinject//:Swinject_objc_interface",
    "@LarkOPInterface//:LarkOPInterface_swift_interface",
    "@EENavigator//:EENavigator_swift_interface",
    "@LarkAccountInterface//:LarkAccountInterface_swift_interface",
    "@LarkAssembler//:LarkAssembler_swift_interface",
    "@LarkContainer//:LarkContainer_swift_interface",
    "@LarkEnv//:LarkEnv_swift_interface",
    "@LarkFlutterContainer//:LarkFlutterContainer_swift_interface",
    "@LarkFoundation//:LarkFoundation_swift_interface",
    "@LarkLocalizations//:LarkLocalizations_swift_interface",
    "@LarkMeego//:LarkMeego_swift_interface",
    "@LarkMeegoLogger//:LarkMeegoLogger_swift_interface",
    "@LarkMeegoStorage//:LarkMeegoStorage_swift_interface",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_swift_interface",
    "@LarkSensitivityControl//:LarkSensitivityControl_swift_interface",
    "@LarkSetting//:LarkSetting_swift_interface",
    "@LarkUIKit//:LarkUIKit_swift_interface",
    "@RustPB//:RustPB_swift_interface",
    "@Swinject//:Swinject_swift_interface",
    ":LarkOpenPlatform_objc_interface",
    "@LarkOPInterface//:LarkOPInterface_module_map",
    "@EENavigator//:EENavigator_module_map",
    "@LarkAccountInterface//:LarkAccountInterface_module_map",
    "@LarkAssembler//:LarkAssembler_module_map",
    "@LarkContainer//:LarkContainer_module_map",
    "@LarkEnv//:LarkEnv_module_map",
    "@LarkFlutterContainer//:LarkFlutterContainer_module_map",
    "@LarkFoundation//:LarkFoundation_module_map",
    "@LarkLocalizations//:LarkLocalizations_module_map",
    "@LarkMeego//:LarkMeego_module_map",
    "@LarkMeegoLogger//:LarkMeegoLogger_module_map",
    "@LarkMeegoStorage//:LarkMeegoStorage_module_map",
    "@LarkMeegoStrategy//:LarkMeegoStrategy_module_map",
    "@LarkSensitivityControl//:LarkSensitivityControl_module_map",
    "@LarkSetting//:LarkSetting_module_map",
    "@LarkUIKit//:LarkUIKit_module_map",
    "@RustPB//:RustPB_module_map",
    "@Swinject//:Swinject_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "LarkOpenPlatform",
  deps = [
    ":LarkOpenPlatform_oc"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "LarkOpenPlatform_lib",
  deps = [
    ":LarkOpenPlatform"
  ],
  minimum_os_version = "11.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lark_MeegoMod_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@MeegoMod//:MeegoMod_objc_interface", "@MeegoMod//:CCMMod_objc_interface", "@MeegoMod//:LarkOpenPlatform_objc_interface", "@MeegoMod//:MessengerMod_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_MeegoMod",
  target_name = "Lark",
  module_name = "MeegoMod",
  public_hdrs = ["@MeegoMod//:MeegoMod_root_public_hdrs", "@MeegoMod//:CCMMod_public_hdrs", "@MeegoMod//:LarkOpenPlatform_public_hdrs", "@MeegoMod//:MessengerMod_public_hdrs"],
  private_hdrs = ["@MeegoMod//:MeegoMod_root_private_hdrs", "@MeegoMod//:CCMMod_private_hdrs", "@MeegoMod//:LarkOpenPlatform_private_hdrs", "@MeegoMod//:MessengerMod_private_hdrs"],
  srcs = ["@MeegoMod//:MeegoMod_root_swift_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = ["EENavigator", "LarkAccountInterface", "LarkAssembler", "LarkContainer", "LarkEnv", "LarkFlutterContainer", "LarkFoundation", "LarkLocalizations", "LarkMeego", "LarkMeegoLogger", "LarkMeegoStorage", "LarkMeegoStrategy", "LarkSensitivityControl", "LarkSetting", "LarkUIKit", "RustPB", "Swinject", "SpaceInterface", "LarkOPInterface", "LarkMessengerInterface", "LarkSDKInterface"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "MeegoMod_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "MeegoMod_cxxopts", []),
  swift_copts = select({
      "//conditions:default": [],
      ":release": []
    }) + [
    "-DCOCOAPODS",
    "-suppress-warnings",
    "-import-underlying-module",
    "-swift-version",
    "5",
    "-Xcc",
    "-fobjc-weak",
    "-Xcc",
    "-stdlib=libc++",
    "-Xcc",
    "-DCOCOAPODS=1",
    "-Xcc",
    "-fdiagnostics-show-note-include-stack",
    "-Xcc",
    "-fno-common",
    "-Xcc",
    "-fmessage-length=0",
    "-Xcc",
    "-fpascal-strings",
    "-Xcc",
    "-fstrict-aliasing",
    "-Xcc",
    "-DMeegoMod_POD_VERSION=@\\\"137801_7.9.0.1\\\"",
    "-Xcc",
    "-Wno-nullability-completeness",
    "-Xcc",
    "-Wno-nonnull",
    "-Xcc",
    "-Wno-nullability",
    "-Xcc",
    "-Wno-incomplete-umbrella",
    ] + getattr(defs_external_swift_library, "common_copts", []) 
      + getattr(defs_external_swift_library, "MeegoMod_copts", []),
  sdk_frameworks = [],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = ["@MeegoMod//:MeegoMod_MeegoModAuto"],
  features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "MeegoMod_features", []),
  cxx_features = [] + getattr(defs_external_objc_library, "common_cxx_features", []) 
    + getattr(defs_external_objc_library, "MeegoMod_cpp_features", []),
  objc_features = [] + getattr(defs_external_objc_library, "common_objc_features", []) 
    + getattr(defs_external_objc_library, "MeegoMod_objc_features", []),
  swift_features = ["swift.no_generated_module_map", "swift.opt_uses_wmo", "swift.opt_uses_osize"] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "MeegoMod_features", []),
  link_dynamic = getattr(defs_external_objc_library, "MeegoMod_dynamic", False),
  tags = getattr(defs_external_objc_library, "MeegoMod_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("MeegoMod", {}),
  visibility = ["//visibility:public"],
)