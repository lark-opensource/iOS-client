
#pragma once

#import "HMDDwarfConfig.h"

#if HMD_USE_DWARF_UNWIND

//
#define HMD_DWARF_EXTENDED_LENGTH_FLAG (0xffffffff)
#define HMD_DWARF_CIE_ID_CIE_FLAG (0)

// Exception Handling Pointer Encoding constants
#define HMD_DW_EH_PE_VALUE_MASK (0x0F)
#define HMD_DW_EH_PE_RELATIVE_OFFSET_MASK (0x70)

// Register Definitions
#define HMD_DW_EN_MAX_REGISTER_NUMBER (120)

enum {
  HMD_DW_EH_PE_ptr = 0x00,
  HMD_DW_EH_PE_uleb128 = 0x01,
  HMD_DW_EH_PE_udata2 = 0x02,
  HMD_DW_EH_PE_udata4 = 0x03,
  HMD_DW_EH_PE_udata8 = 0x04,
  HMD_DW_EH_PE_signed = 0x08,
  HMD_DW_EH_PE_sleb128 = 0x09,
  HMD_DW_EH_PE_sdata2 = 0x0A,
  HMD_DW_EH_PE_sdata4 = 0x0B,
  HMD_DW_EH_PE_sdata8 = 0x0C,

  HMD_DW_EH_PE_absptr = 0x00,
  HMD_DW_EH_PE_pcrel = 0x10,
  HMD_DW_EH_PE_textrel = 0x20,
  HMD_DW_EH_PE_datarel = 0x30,
  HMD_DW_EH_PE_funcrel = 0x40,
  HMD_DW_EH_PE_aligned = 0x50,
  HMD_DW_EH_PE_indirect = 0x80,
  HMD_DW_EH_PE_omit = 0xFF
};

// Unwind Instructions

#define HMD_DW_CFA_OPCODE_MASK (0xC0)
#define HMD_DW_CFA_OPERAND_MASK (0x3F)

enum {
  HMD_DW_CFA_nop = 0x0,
  HMD_DW_CFA_set_loc = 0x1,
  HMD_DW_CFA_advance_loc1 = 0x2,
  HMD_DW_CFA_advance_loc2 = 0x3,
  HMD_DW_CFA_advance_loc4 = 0x4,
  HMD_DW_CFA_offset_extended = 0x5,
  HMD_DW_CFA_restore_extended = 0x6,
  HMD_DW_CFA_undefined = 0x7,
  HMD_DW_CFA_same_value = 0x8,
  HMD_DW_CFA_register = 0x9,
  HMD_DW_CFA_remember_state = 0xA,
  HMD_DW_CFA_restore_state = 0xB,
  HMD_DW_CFA_def_cfa = 0xC,
  HMD_DW_CFA_def_cfa_register = 0xD,
  HMD_DW_CFA_def_cfa_offset = 0xE,
  HMD_DW_CFA_def_cfa_expression = 0xF,
  HMD_DW_CFA_expression = 0x10,
  HMD_DW_CFA_offset_extended_sf = 0x11,
  HMD_DW_CFA_def_cfa_sf = 0x12,
  HMD_DW_CFA_def_cfa_offset_sf = 0x13,
  HMD_DW_CFA_val_offset = 0x14,
  HMD_DW_CFA_val_offset_sf = 0x15,
  HMD_DW_CFA_val_expression = 0x16,

  // opcode is in high 2 bits, operand in is lower 6 bits
  HMD_DW_CFA_advance_loc = 0x40,  // operand is delta
  HMD_DW_CFA_offset = 0x80,       // operand is register
  HMD_DW_CFA_restore = 0xC0,      // operand is register

  // GNU extensions
  HMD_DW_CFA_GNU_window_save = 0x2D,
  HMD_DW_CFA_GNU_args_size = 0x2E,
  HMD_DW_CFA_GNU_negative_offset_extended = 0x2F
};

// Expression Instructions
enum {
  HMD_DW_OP_addr = 0x03,
  HMD_DW_OP_deref = 0x06,
  HMD_DW_OP_const1u = 0x08,
  HMD_DW_OP_const1s = 0x09,
  HMD_DW_OP_const2u = 0x0A,
  HMD_DW_OP_const2s = 0x0B,
  HMD_DW_OP_const4u = 0x0C,
  HMD_DW_OP_const4s = 0x0D,
  HMD_DW_OP_const8u = 0x0E,
  HMD_DW_OP_const8s = 0x0F,
  HMD_DW_OP_constu = 0x10,
  HMD_DW_OP_consts = 0x11,
  HMD_DW_OP_dup = 0x12,
  HMD_DW_OP_drop = 0x13,
  HMD_DW_OP_over = 0x14,
  HMD_DW_OP_pick = 0x15,
  HMD_DW_OP_swap = 0x16,
  HMD_DW_OP_rot = 0x17,
  HMD_DW_OP_xderef = 0x18,
  HMD_DW_OP_abs = 0x19,
  HMD_DW_OP_and = 0x1A,
  HMD_DW_OP_div = 0x1B,
  HMD_DW_OP_minus = 0x1C,
  HMD_DW_OP_mod = 0x1D,
  HMD_DW_OP_mul = 0x1E,
  HMD_DW_OP_neg = 0x1F,
  HMD_DW_OP_not = 0x20,
  HMD_DW_OP_or = 0x21,
  HMD_DW_OP_plus = 0x22,
  HMD_DW_OP_plus_uconst = 0x23,
  HMD_DW_OP_shl = 0x24,
  HMD_DW_OP_shr = 0x25,
  HMD_DW_OP_shra = 0x26,
  HMD_DW_OP_xor = 0x27,
  HMD_DW_OP_skip = 0x2F,
  HMD_DW_OP_bra = 0x28,
  HMD_DW_OP_eq = 0x29,
  HMD_DW_OP_ge = 0x2A,
  HMD_DW_OP_gt = 0x2B,
  HMD_DW_OP_le = 0x2C,
  HMD_DW_OP_lt = 0x2D,
  HMD_DW_OP_ne = 0x2E,
  HMD_DW_OP_lit0 = 0x30,
  HMD_DW_OP_lit1 = 0x31,
  HMD_DW_OP_lit2 = 0x32,
  HMD_DW_OP_lit3 = 0x33,
  HMD_DW_OP_lit4 = 0x34,
  HMD_DW_OP_lit5 = 0x35,
  HMD_DW_OP_lit6 = 0x36,
  HMD_DW_OP_lit7 = 0x37,
  HMD_DW_OP_lit8 = 0x38,
  HMD_DW_OP_lit9 = 0x39,
  HMD_DW_OP_lit10 = 0x3A,
  HMD_DW_OP_lit11 = 0x3B,
  HMD_DW_OP_lit12 = 0x3C,
  HMD_DW_OP_lit13 = 0x3D,
  HMD_DW_OP_lit14 = 0x3E,
  HMD_DW_OP_lit15 = 0x3F,
  HMD_DW_OP_lit16 = 0x40,
  HMD_DW_OP_lit17 = 0x41,
  HMD_DW_OP_lit18 = 0x42,
  HMD_DW_OP_lit19 = 0x43,
  HMD_DW_OP_lit20 = 0x44,
  HMD_DW_OP_lit21 = 0x45,
  HMD_DW_OP_lit22 = 0x46,
  HMD_DW_OP_lit23 = 0x47,
  HMD_DW_OP_lit24 = 0x48,
  HMD_DW_OP_lit25 = 0x49,
  HMD_DW_OP_lit26 = 0x4A,
  HMD_DW_OP_lit27 = 0x4B,
  HMD_DW_OP_lit28 = 0x4C,
  HMD_DW_OP_lit29 = 0x4D,
  HMD_DW_OP_lit30 = 0x4E,
  HMD_DW_OP_lit31 = 0x4F,
  HMD_DW_OP_reg0 = 0x50,
  HMD_DW_OP_reg1 = 0x51,
  HMD_DW_OP_reg2 = 0x52,
  HMD_DW_OP_reg3 = 0x53,
  HMD_DW_OP_reg4 = 0x54,
  HMD_DW_OP_reg5 = 0x55,
  HMD_DW_OP_reg6 = 0x56,
  HMD_DW_OP_reg7 = 0x57,
  HMD_DW_OP_reg8 = 0x58,
  HMD_DW_OP_reg9 = 0x59,
  HMD_DW_OP_reg10 = 0x5A,
  HMD_DW_OP_reg11 = 0x5B,
  HMD_DW_OP_reg12 = 0x5C,
  HMD_DW_OP_reg13 = 0x5D,
  HMD_DW_OP_reg14 = 0x5E,
  HMD_DW_OP_reg15 = 0x5F,
  HMD_DW_OP_reg16 = 0x60,
  HMD_DW_OP_reg17 = 0x61,
  HMD_DW_OP_reg18 = 0x62,
  HMD_DW_OP_reg19 = 0x63,
  HMD_DW_OP_reg20 = 0x64,
  HMD_DW_OP_reg21 = 0x65,
  HMD_DW_OP_reg22 = 0x66,
  HMD_DW_OP_reg23 = 0x67,
  HMD_DW_OP_reg24 = 0x68,
  HMD_DW_OP_reg25 = 0x69,
  HMD_DW_OP_reg26 = 0x6A,
  HMD_DW_OP_reg27 = 0x6B,
  HMD_DW_OP_reg28 = 0x6C,
  HMD_DW_OP_reg29 = 0x6D,
  HMD_DW_OP_reg30 = 0x6E,
  HMD_DW_OP_reg31 = 0x6F,
  HMD_DW_OP_breg0 = 0x70,
  HMD_DW_OP_breg1 = 0x71,
  HMD_DW_OP_breg2 = 0x72,
  HMD_DW_OP_breg3 = 0x73,
  HMD_DW_OP_breg4 = 0x74,
  HMD_DW_OP_breg5 = 0x75,
  HMD_DW_OP_breg6 = 0x76,
  HMD_DW_OP_breg7 = 0x77,
  HMD_DW_OP_breg8 = 0x78,
  HMD_DW_OP_breg9 = 0x79,
  HMD_DW_OP_breg10 = 0x7A,
  HMD_DW_OP_breg11 = 0x7B,
  HMD_DW_OP_breg12 = 0x7C,
  HMD_DW_OP_breg13 = 0x7D,
  HMD_DW_OP_breg14 = 0x7E,
  HMD_DW_OP_breg15 = 0x7F,
  HMD_DW_OP_breg16 = 0x80,
  HMD_DW_OP_breg17 = 0x81,
  HMD_DW_OP_breg18 = 0x82,
  HMD_DW_OP_breg19 = 0x83,
  HMD_DW_OP_breg20 = 0x84,
  HMD_DW_OP_breg21 = 0x85,
  HMD_DW_OP_breg22 = 0x86,
  HMD_DW_OP_breg23 = 0x87,
  HMD_DW_OP_breg24 = 0x88,
  HMD_DW_OP_breg25 = 0x89,
  HMD_DW_OP_breg26 = 0x8A,
  HMD_DW_OP_breg27 = 0x8B,
  HMD_DW_OP_breg28 = 0x8C,
  HMD_DW_OP_breg29 = 0x8D,
  HMD_DW_OP_breg30 = 0x8E,
  HMD_DW_OP_breg31 = 0x8F,
  HMD_DW_OP_regx = 0x90,
  HMD_DW_OP_fbreg = 0x91,
  HMD_DW_OP_bregx = 0x92,
  HMD_DW_OP_piece = 0x93,
  HMD_DW_OP_deref_size = 0x94,
  HMD_DW_OP_xderef_size = 0x95,
  HMD_DW_OP_nop = 0x96,
  HMD_DW_OP_push_object_addres = 0x97,
  HMD_DW_OP_call2 = 0x98,
  HMD_DW_OP_call4 = 0x99,
  HMD_DW_OP_call_ref = 0x9A,
  HMD_DW_OP_lo_user = 0xE0,
  HMD_DW_OP_APPLE_uninit = 0xF0,
  HMD_DW_OP_hi_user = 0xFF
};

#endif
