load('@build_bazel_rules_swift//swift:swift.bzl', 'swift_library')
load('@build_bazel_rules_apple//apple:resources.bzl', 'apple_resource_group')
load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "Heimdallr_pod_hdrs",
  srcs = [
    ":Heimdallr_root_pod_hdrs",
    ":HMDAlogProtocol_pod_hdrs",
    ":CloudCommand_pod_hdrs",
    ":ALog_pod_hdrs",
    ":HMDConfig_pod_hdrs",
    ":HMDDomestic_pod_hdrs",
    ":HMDOverseas_pod_hdrs",
    ":Monitors_pod_hdrs",
    ":HTTPRequestTracker_pod_hdrs",
    ":Dart_pod_hdrs",
    ":Game_pod_hdrs",
    ":HMDSession_pod_hdrs",
    ":HMDStore_pod_hdrs",
    ":Upload_pod_hdrs",
    ":Network_pod_hdrs",
    ":HMDStart_pod_hdrs",
    ":HMDLaunchTiming_pod_hdrs",
    ":HMDLaunchTracing_pod_hdrs",
    ":BootingProtect_pod_hdrs",
    ":TTMonitor_pod_hdrs",
    ":Mach_pod_hdrs",
    ":UITracker_pod_hdrs",
    ":Utility_pod_hdrs",
    ":HMDANR_pod_hdrs",
    ":DeviceInfo_pod_hdrs",
    ":HMDOOMCrash_pod_hdrs",
    ":HMDAPPExitReason_pod_hdrs",
    ":HMDSlardarMalloc_pod_hdrs",
    ":HMDSlardarMalloc_HMDTracker_pod_hdrs",
    ":HMDSlardarMalloc_NanoOptimize_pod_hdrs",
    ":HMDSlardarMalloc_ScalableOptimize_pod_hdrs",
    ":Zombie_pod_hdrs",
    ":CrashCapture_pod_hdrs",
    ":OtherSDKSignal_pod_hdrs",
    ":CrashDetector_pod_hdrs",
    ":TTNet_pod_hdrs",
    ":HMDURLProtocolTracker_pod_hdrs",
    ":HMDWebViewMonitor_pod_hdrs",
    ":Protect_pod_hdrs",
    ":ProtectCustomCatch_pod_hdrs",
    ":Log_pod_hdrs",
    ":Core_pod_hdrs",
    ":UserException_pod_hdrs",
    ":CPUException_pod_hdrs",
    ":HMDCaptureBacktrace_pod_hdrs",
    ":HMDCoreDump_pod_hdrs",
    ":HMDEvilMethodTracer_pod_hdrs",
    ":HMDOrderFile_pod_hdrs",
    ":GWPASan_pod_hdrs",
    ":HMDLaunchAnalyse_pod_hdrs",
    ":HMDWatchDog_pod_hdrs",
    ":Runloop_pod_hdrs",
    ":HMDSDKMonitor_pod_hdrs",
    ":OpenTracing_pod_hdrs",
    ":MemoryGraph_pod_hdrs",
    ":HMDMallocHook_pod_hdrs",
    ":AutoReleaseProtection_pod_hdrs",
    ":UIFrozen_pod_hdrs",
    ":WatchdogProtect_pod_hdrs",
    ":ClassCoverage_pod_hdrs",
    ":NetworkTraffic_pod_hdrs",
    ":GPUUsage_pod_hdrs",
    ":CPUFrequency_pod_hdrs",
    ":HMDMetricKit_pod_hdrs",
    ":HMDFDMonitor_pod_hdrs",
    ":HMDCrashPrevent_pod_hdrs",
    ":HMDThreadMonitor_pod_hdrs",
    ":HMDLaunchOptimizer_pod_hdrs",
    ":HMDStabilityTest_pod_hdrs",
    ":HMDMainThreadDispatch_pod_hdrs",
    ":HMDPowerMonitor_pod_hdrs",
    ":PrivateServices_pod_hdrs",
    ":PrivateServices_DebugLogger_pod_hdrs",
    ":PrivateServices_Disaster_pod_hdrs",
    ":PrivateServices_Monitor_pod_hdrs",
    ":PrivateServices_URLSettings_pod_hdrs",
    ":PrivateServices_ZipArchive_pod_hdrs",
    ":Tests_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "Heimdallr_private_includes",
  include = [
    "external/Heimdallr/pod_support/Headers/Private/Heimdallr/"
  ],
  deps = [],
  external_name = "Heimdallr"
)
gen_includes(
  name = "Heimdallr_public_includes",
  include = [
    "external/Heimdallr/pod_support/Headers/Public/Heimdallr/"
  ],
  deps = [],
  external_name = "Heimdallr"
)
filegroup(
  name = "_Heimdallr_hdrs",
  srcs = [
    ":Heimdallr_root_hdrs",
    ":HMDAlogProtocol_hdrs",
    ":CloudCommand_hdrs",
    ":ALog_hdrs",
    ":HMDConfig_hdrs",
    ":HMDDomestic_hdrs",
    ":HMDOverseas_hdrs",
    ":Monitors_hdrs",
    ":HTTPRequestTracker_hdrs",
    ":Dart_hdrs",
    ":Game_hdrs",
    ":HMDSession_hdrs",
    ":HMDStore_hdrs",
    ":Upload_hdrs",
    ":Network_hdrs",
    ":HMDStart_hdrs",
    ":HMDLaunchTiming_hdrs",
    ":HMDLaunchTracing_hdrs",
    ":BootingProtect_hdrs",
    ":TTMonitor_hdrs",
    ":Mach_hdrs",
    ":UITracker_hdrs",
    ":Utility_hdrs",
    ":HMDANR_hdrs",
    ":DeviceInfo_hdrs",
    ":HMDOOMCrash_hdrs",
    ":HMDAPPExitReason_hdrs",
    ":HMDSlardarMalloc_hdrs",
    ":HMDSlardarMalloc_HMDTracker_hdrs",
    ":HMDSlardarMalloc_NanoOptimize_hdrs",
    ":HMDSlardarMalloc_ScalableOptimize_hdrs",
    ":Zombie_hdrs",
    ":CrashCapture_hdrs",
    ":OtherSDKSignal_hdrs",
    ":CrashDetector_hdrs",
    ":TTNet_hdrs",
    ":HMDURLProtocolTracker_hdrs",
    ":HMDWebViewMonitor_hdrs",
    ":Protect_hdrs",
    ":ProtectCustomCatch_hdrs",
    ":Log_hdrs",
    ":Core_hdrs",
    ":UserException_hdrs",
    ":CPUException_hdrs",
    ":HMDCaptureBacktrace_hdrs",
    ":HMDCoreDump_hdrs",
    ":HMDEvilMethodTracer_hdrs",
    ":HMDOrderFile_hdrs",
    ":GWPASan_hdrs",
    ":HMDLaunchAnalyse_hdrs",
    ":HMDWatchDog_hdrs",
    ":Runloop_hdrs",
    ":HMDSDKMonitor_hdrs",
    ":OpenTracing_hdrs",
    ":MemoryGraph_hdrs",
    ":HMDMallocHook_hdrs",
    ":AutoReleaseProtection_hdrs",
    ":UIFrozen_hdrs",
    ":WatchdogProtect_hdrs",
    ":ClassCoverage_hdrs",
    ":NetworkTraffic_hdrs",
    ":GPUUsage_hdrs",
    ":CPUFrequency_hdrs",
    ":HMDMetricKit_hdrs",
    ":HMDFDMonitor_hdrs",
    ":HMDCrashPrevent_hdrs",
    ":HMDThreadMonitor_hdrs",
    ":HMDLaunchOptimizer_hdrs",
    ":HMDStabilityTest_hdrs",
    ":HMDMainThreadDispatch_hdrs",
    ":HMDPowerMonitor_hdrs",
    ":PrivateServices_hdrs",
    ":PrivateServices_DebugLogger_hdrs",
    ":PrivateServices_Disaster_hdrs",
    ":PrivateServices_Monitor_hdrs",
    ":PrivateServices_URLSettings_hdrs",
    ":PrivateServices_ZipArchive_hdrs",
    ":Tests_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "Heimdallr_xcode_hmapsource",
  hdrs = [
    ":Heimdallr_root_hdrs",
    ":ALog_hdrs",
    ":BootingProtect_hdrs",
    ":ClassCoverage_hdrs",
    ":CloudCommand_hdrs",
    ":Core_hdrs",
    ":CPUException_hdrs",
    ":CrashCapture_hdrs",
    ":CrashDetector_hdrs",
    ":Dart_hdrs",
    ":DeviceInfo_hdrs",
    ":GPUUsage_hdrs",
    ":GWPASan_hdrs",
    ":HMDAlogProtocol_hdrs",
    ":HMDANR_hdrs",
    ":HMDAPPExitReason_hdrs",
    ":HMDCaptureBacktrace_hdrs",
    ":HMDConfig_hdrs",
    ":HMDCoreDump_hdrs",
    ":HMDCrashPrevent_hdrs",
    ":HMDDomestic_hdrs",
    ":HMDFDMonitor_hdrs",
    ":HMDLaunchOptimizer_hdrs",
    ":HMDLaunchTracing_hdrs",
    ":HMDMallocHook_hdrs",
    ":HMDMetricKit_hdrs",
    ":HMDOOMCrash_hdrs",
    ":HMDSession_hdrs",
    ":HMDSlardarMalloc_hdrs",
    ":HMDSlardarMalloc_HMDTracker_hdrs",
    ":HMDSlardarMalloc_NanoOptimize_hdrs",
    ":HMDSlardarMalloc_ScalableOptimize_hdrs",
    ":HMDStart_hdrs",
    ":HMDStore_hdrs",
    ":HMDThreadMonitor_hdrs",
    ":HMDWatchDog_hdrs",
    ":HTTPRequestTracker_hdrs",
    ":Log_hdrs",
    ":Mach_hdrs",
    ":MemoryGraph_hdrs",
    ":Monitors_hdrs",
    ":Network_hdrs",
    ":NetworkTraffic_hdrs",
    ":OpenTracing_hdrs",
    ":PrivateServices_DebugLogger_hdrs",
    ":PrivateServices_Disaster_hdrs",
    ":PrivateServices_Monitor_hdrs",
    ":PrivateServices_URLSettings_hdrs",
    ":PrivateServices_ZipArchive_hdrs",
    ":Protect_hdrs",
    ":ProtectCustomCatch_hdrs",
    ":Runloop_hdrs",
    ":TTMonitor_hdrs",
    ":TTNet_hdrs",
    ":UIFrozen_hdrs",
    ":UITracker_hdrs",
    ":Upload_hdrs",
    ":UserException_hdrs",
    ":Utility_hdrs",
    ":WatchdogProtect_hdrs",
    ":Zombie_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "Heimdallr_xcode_hmap",
  dep = ":Heimdallr_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/Heimdallr/*-bitsky-generated.modulemap", "pod_support/Headers/Public/Heimdallr/*-bitsky-generated-umbrella.h"]))
config_setting(
  name = "dev_mode",
  define_values = {
    "BUILD_MODE": "DEV"
  }
)
run_script_phase(
  name = "Heimdallr_Core_script_0",
  cmd = select(
    {
      "//conditions:default": "cd external\n\n            IFS=$\'\\n\'\n            if [[ -d ${PODS_ROOT}/Heimdallr/Heimdallr ]]; then\n                cd ${PODS_ROOT}/Heimdallr/Heimdallr\n                bash DI.sh\n                fi\n                ",
      ":dev_mode": ""
    }
  ),
  env = {
    "PODS_TARGET_SRCROOT": "Heimdallr"
  },
  description = "DI",
  deps = [],
  outputs = [],
  external_name = "Heimdallr",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Heimdallr_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "Heimdallr",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "Heimdallr_xcode_hmap_includes",
  include = [],
  include_files = [
    ":Heimdallr_xcode_hmap"
  ],
  external_name = "Heimdallr",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Heimdallr_root_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Heimdallr_root_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Heimdallr_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Heimdallr_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Heimdallr_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Heimdallr_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Heimdallr_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Heimdallr_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Heimdallr_root_hdrs"
  ],
  pch = "pod_support/Headers/Private/Heimdallr-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Heimdallr_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Heimdallr",
  deps = [
    ":Heimdallr_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Heimdallr_lib",
  deps = [
    ":Heimdallr"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAlogProtocol_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAlogProtocol_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDALogProtocol/Common/Public/HMDALogProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAlogProtocol_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDALogProtocol/Common/Public/HMDALogProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAlogProtocol_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDALogProtocol.h",
    "pod_support/Headers/Public/Heimdallr/HMDALogProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDAlogProtocol_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDAlogProtocol_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDAlogProtocol_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDAlogProtocol-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDAlogProtocol-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAlogProtocol_srcs",
  srcs = [
    "Heimdallr/Classes/HMDALogProtocol/Common/Public/HMDALogProtocol.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDAlogProtocol_oc",
  enable_modules = 1,
  srcs = [
    "HMDAlogProtocol_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDAlogProtocol_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDAlogProtocol-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDAlogProtocol_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDAlogProtocol",
  deps = [
    ":HMDAlogProtocol_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDAlogProtocol_lib",
  deps = [
    ":HMDAlogProtocol"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CloudCommand_private_hdrs",
  srcs = [
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDALogUpload.h",
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDCloudCommandManager+Private.h",
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDCloudCommandNetworkIMP.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDCPUExceptionUpload.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDCloudCommandFileDelete.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDExceptionUpload.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDMemoryGraphUpload.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDPerformanceUpload.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CloudCommand_public_hdrs",
  srcs = [
    "Heimdallr/Classes/CloudCommand/Common/Public/HMDCloudCommandManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CloudCommand_hdrs",
  srcs = [
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDALogUpload.h",
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDCloudCommandManager+Private.h",
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDCloudCommandNetworkIMP.h",
    "Heimdallr/Classes/CloudCommand/Common/Public/HMDCloudCommandManager.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDCPUExceptionUpload.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDCloudCommandFileDelete.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDExceptionUpload.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDMemoryGraphUpload.h",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDPerformanceUpload.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CloudCommand_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDALogUpload.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionUpload.h",
    "pod_support/Headers/Private/Heimdallr/HMDCloudCommandFileDelete.h",
    "pod_support/Headers/Private/Heimdallr/HMDCloudCommandManager+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCloudCommandManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDCloudCommandNetworkIMP.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionUpload.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphUpload.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceUpload.h",
    "pod_support/Headers/Public/Heimdallr/HMDCloudCommandManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CloudCommand_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CloudCommand_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CloudCommand_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_CloudCommand-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_CloudCommand-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CloudCommand_srcs",
  srcs = [
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDALogUpload.mm",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDCloudCommandFileDelete.m",
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDCloudCommandManager+Private.m",
    "Heimdallr/Classes/CloudCommand/Common/Public/HMDCloudCommandManager.mm",
    "Heimdallr/Classes/CloudCommand/Common/Private/HMDCloudCommandNetworkIMP.m",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDCPUExceptionUpload.m",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDExceptionUpload.m",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDMemoryGraphUpload.m",
    "Heimdallr/Classes/CloudCommand/ToD/Private/HMDPerformanceUpload.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CloudCommand_oc",
  enable_modules = 1,
  srcs = [
    "CloudCommand_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CloudCommand_hdrs"
  ],
  pch = "pod_support/Headers/Private/CloudCommand-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@AWECloudCommand//:AWECloudCommand_objc_interface",
    "@BDALog//:BDALog_objc_interface",
    "@AWECloudCommand//:AWECloudCommand_swift_interface",
    "@BDALog//:BDALog_swift_interface",
    ":CloudCommand_objc_interface",
    "@AWECloudCommand//:AWECloudCommand_module_map",
    "@BDALog//:BDALog_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CloudCommand",
  deps = [
    ":CloudCommand_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CloudCommand_lib",
  deps = [
    ":CloudCommand"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ALog_private_hdrs",
  srcs = [
    "Heimdallr/Classes/ALog/Common/Private/HMDInjectedInfo+Alog.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ALog_public_hdrs",
  srcs = [
    "Heimdallr/Classes/ALog/Common/Public/HMDLogHelper.h",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogUploader.h",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogWrapper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ALog_hdrs",
  srcs = [
    "Heimdallr/Classes/ALog/Common/Private/HMDInjectedInfo+Alog.h",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogHelper.h",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogUploader.h",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogWrapper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ALog_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+Alog.h",
    "pod_support/Headers/Private/Heimdallr/HMDLogHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDLogUploader.h",
    "pod_support/Headers/Private/Heimdallr/HMDLogWrapper.h",
    "pod_support/Headers/Public/Heimdallr/HMDLogHelper.h",
    "pod_support/Headers/Public/Heimdallr/HMDLogUploader.h",
    "pod_support/Headers/Public/Heimdallr/HMDLogWrapper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ALog_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ALog_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "ALog_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_ALog-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_ALog-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ALog_srcs",
  srcs = [
    "Heimdallr/Classes/ALog/Common/Private/HMDInjectedInfo+Alog.m",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogHelper.m",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogUploader.mm",
    "Heimdallr/Classes/ALog/Common/Public/HMDLogWrapper.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ALog_oc",
  enable_modules = 1,
  srcs = [
    "ALog_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "ALog_hdrs"
  ],
  pch = "pod_support/Headers/Private/ALog-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDALog//:BDALog_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDALog//:BDALog_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":ALog_objc_interface",
    "@BDALog//:BDALog_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ALog",
  deps = [
    ":ALog_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "ALog_lib",
  deps = [
    ":ALog"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDConfig_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDCloudCommandSetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDCommonAPISetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDConfigFetchSetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDDoubleUploadSettings.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDGeneralAPISettings.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDHermasUploadSetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDPerformanceUploadSetting.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigDataProcessProtocol.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigFetchResourceProtocol.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigFetcher.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigHelper.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigHostProviderProtocol.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigManager.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigStore.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDInjectedInfo+Upload.h",
    "Heimdallr/Classes/Config/Common/Private/HMDCloudCommandConfig.h",
    "Heimdallr/Classes/Config/Common/Private/HMDCustomEventSetting.h",
    "Heimdallr/Classes/Config/Common/Private/HMDDebugRealConfig.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+CloudCommand.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+Legacy.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+Private.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+cleanup.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHermasCleanupSetting.h",
    "Heimdallr/Classes/Config/Common/Private/HMDModuleConfig+StartWeight.h",
    "Heimdallr/Classes/Config/Common/Private/hmd_section_data_utility.h",
    "Heimdallr/Classes/Config/ToD/Private/APISettings/HMDGeneralAPISettings+URLHosts.h",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigDataProcessor.h",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigFetchResource.h",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigHostProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDConfig_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Config/Common/Public/HMDCleanupConfig.h",
    "Heimdallr/Classes/Config/Common/Public/HMDHeimdallrConfig.h",
    "Heimdallr/Classes/Config/Common/Public/HMDModuleConfig.h",
    "Heimdallr/Classes/Config/Common/Public/HMDNetworkProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDConfig_hdrs",
  srcs = [
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDCloudCommandSetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDCommonAPISetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDConfigFetchSetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDDoubleUploadSettings.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDGeneralAPISettings.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDHermasUploadSetting.h",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDPerformanceUploadSetting.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigDataProcessProtocol.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigFetchResourceProtocol.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigFetcher.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigHelper.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigHostProviderProtocol.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigManager.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigStore.h",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDInjectedInfo+Upload.h",
    "Heimdallr/Classes/Config/Common/Private/HMDCloudCommandConfig.h",
    "Heimdallr/Classes/Config/Common/Private/HMDCustomEventSetting.h",
    "Heimdallr/Classes/Config/Common/Private/HMDDebugRealConfig.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+CloudCommand.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+Legacy.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+Private.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+cleanup.h",
    "Heimdallr/Classes/Config/Common/Private/HMDHermasCleanupSetting.h",
    "Heimdallr/Classes/Config/Common/Private/HMDModuleConfig+StartWeight.h",
    "Heimdallr/Classes/Config/Common/Private/hmd_section_data_utility.h",
    "Heimdallr/Classes/Config/Common/Public/HMDCleanupConfig.h",
    "Heimdallr/Classes/Config/Common/Public/HMDHeimdallrConfig.h",
    "Heimdallr/Classes/Config/Common/Public/HMDModuleConfig.h",
    "Heimdallr/Classes/Config/Common/Public/HMDNetworkProvider.h",
    "Heimdallr/Classes/Config/ToD/Private/APISettings/HMDGeneralAPISettings+URLHosts.h",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigDataProcessor.h",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigFetchResource.h",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigHostProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDConfig_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCleanupConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCloudCommandConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCloudCommandSetting.h",
    "pod_support/Headers/Private/Heimdallr/HMDCommonAPISetting.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigDataProcessProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigDataProcessor.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigFetchResource.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigFetchResourceProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigFetchSetting.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigFetcher.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigHostProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigHostProviderProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDConfigStore.h",
    "pod_support/Headers/Private/Heimdallr/HMDCustomEventSetting.h",
    "pod_support/Headers/Private/Heimdallr/HMDDebugRealConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDDoubleUploadSettings.h",
    "pod_support/Headers/Private/Heimdallr/HMDGeneralAPISettings+URLHosts.h",
    "pod_support/Headers/Private/Heimdallr/HMDGeneralAPISettings.h",
    "pod_support/Headers/Private/Heimdallr/HMDHeimdallrConfig+CloudCommand.h",
    "pod_support/Headers/Private/Heimdallr/HMDHeimdallrConfig+Legacy.h",
    "pod_support/Headers/Private/Heimdallr/HMDHeimdallrConfig+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDHeimdallrConfig+cleanup.h",
    "pod_support/Headers/Private/Heimdallr/HMDHeimdallrConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDHermasCleanupSetting.h",
    "pod_support/Headers/Private/Heimdallr/HMDHermasUploadSetting.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+Upload.h",
    "pod_support/Headers/Private/Heimdallr/HMDModuleConfig+StartWeight.h",
    "pod_support/Headers/Private/Heimdallr/HMDModuleConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceUploadSetting.h",
    "pod_support/Headers/Private/Heimdallr/hmd_section_data_utility.h",
    "pod_support/Headers/Public/Heimdallr/HMDCleanupConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDHeimdallrConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDModuleConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDNetworkProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDConfig_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDConfig_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDConfig_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDConfig-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDConfig-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDConfig_srcs",
  srcs = [
    "Heimdallr/Classes/Config/Common/Private/hmd_section_data_utility.c",
    "Heimdallr/Classes/Config/Common/Public/HMDCleanupConfig.m",
    "Heimdallr/Classes/Config/Common/Private/HMDCloudCommandConfig.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDCloudCommandSetting.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDCommonAPISetting.m",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigDataProcessor.m",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigFetcher.m",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigFetchResource.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDConfigFetchSetting.m",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigHelper.m",
    "Heimdallr/Classes/Config/ToD/Private/HMDConfigHostProvider.m",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigManager.m",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDConfigStore.m",
    "Heimdallr/Classes/Config/Common/Private/HMDCustomEventSetting.m",
    "Heimdallr/Classes/Config/Common/Private/HMDDebugRealConfig.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDDoubleUploadSettings.m",
    "Heimdallr/Classes/Config/ToD/Private/APISettings/HMDGeneralAPISettings+URLHosts.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDGeneralAPISettings.m",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+cleanup.m",
    "Heimdallr/Classes/Config/Common/Private/HMDHeimdallrConfig+Legacy.m",
    "Heimdallr/Classes/Config/Common/Public/HMDHeimdallrConfig.m",
    "Heimdallr/Classes/Config/Common/Private/HMDHermasCleanupSetting.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDHermasUploadSetting.m",
    "Heimdallr/Classes/Config/Common/Private/ConfigManager/HMDInjectedInfo+Upload.m",
    "Heimdallr/Classes/Config/Common/Private/HMDModuleConfig+StartWeight.m",
    "Heimdallr/Classes/Config/Common/Public/HMDModuleConfig.m",
    "Heimdallr/Classes/Config/Common/Private/APISettings/HMDPerformanceUploadSetting.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDConfig_oc",
  enable_modules = 1,
  srcs = [
    "HMDConfig_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDConfig_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDConfig-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDConfig_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDConfig",
  deps = [
    ":HMDConfig_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDConfig_lib",
  deps = [
    ":HMDConfig"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDDomestic_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Localization/URLDomestic/ToD/HMDDomesticURLSettings.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDDomestic_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDDomestic_hdrs",
  srcs = [
    "Heimdallr/Classes/Localization/URLDomestic/ToD/HMDDomesticURLSettings.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDDomestic_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDDomesticURLSettings.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDDomestic_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDDomestic_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDDomestic_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDDomestic-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDDomestic-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDDomestic_srcs",
  srcs = [
    "Heimdallr/Classes/Localization/URLDomestic/ToD/HMDDomesticURLSettings.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDDomestic_oc",
  enable_modules = 1,
  srcs = [
    "HMDDomestic_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDDomestic_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDDomestic-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDDomestic_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDDomestic",
  deps = [
    ":HMDDomestic_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDDomestic_lib",
  deps = [
    ":HMDDomestic"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOverseas_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Localization/URLOverseas/ToD/HMDOverseasURLSettings.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOverseas_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOverseas_hdrs",
  srcs = [
    "Heimdallr/Classes/Localization/URLOverseas/ToD/HMDOverseasURLSettings.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOverseas_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDOverseas_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDOverseas_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDOverseas_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDOverseas-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDOverseas-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOverseas_srcs",
  srcs = [
    "Heimdallr/Classes/Localization/URLOverseas/ToD/HMDOverseasURLSettings.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDOverseas_oc",
  enable_modules = 1,
  srcs = [
    "HMDOverseas_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDOverseas_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDOverseas-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDOverseas_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDOverseas",
  deps = [
    ":HMDOverseas_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDOverseas_lib",
  deps = [
    ":HMDOverseas"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Monitors_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Monitors/Common/Private/HMDCPUTimeDetector.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+Private.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+Report.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+SizeLimitedReport.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitorCurve+Private.h",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfo+DiskUsageIMP.h",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfo.h",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfoModel.h",
    "Heimdallr/Classes/Monitors/Common/Private/Record/HMDMonitorRecord+Private.h",
    "Heimdallr/Classes/Monitors/Common/Private/Record/HMDPerformanceAggregate+FindMaxValue.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Monitors_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitorConfig.h",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitorCustomSwitch.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDBatteryMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDCPUMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDDiskMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFluencyDisplayLink.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFPSMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFrameDropMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDMemoryMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDMonitorCallbackObject.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDBatteryMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDCPUMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDDiskMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDFPSMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDFrameDropRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMemoryMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorCurve.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorCurve2.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorRecord+DBStore.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDPerformanceAggregate.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Monitors_hdrs",
  srcs = [
    "Heimdallr/Classes/Monitors/Common/Private/HMDCPUTimeDetector.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+Private.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+Report.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+SizeLimitedReport.h",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitorCurve+Private.h",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfo+DiskUsageIMP.h",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfo.h",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfoModel.h",
    "Heimdallr/Classes/Monitors/Common/Private/Record/HMDMonitorRecord+Private.h",
    "Heimdallr/Classes/Monitors/Common/Private/Record/HMDPerformanceAggregate+FindMaxValue.h",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitorConfig.h",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitorCustomSwitch.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDBatteryMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDCPUMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDDiskMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFPSMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFluencyDisplayLink.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFrameDropMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDMemoryMonitor.h",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDMonitorCallbackObject.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDBatteryMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDCPUMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDDiskMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDFPSMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDFrameDropRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMemoryMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorCurve.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorCurve2.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorRecord+DBStore.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorRecord.h",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDPerformanceAggregate.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Monitors_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDBatteryMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDBatteryMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUTimeDetector.h",
    "pod_support/Headers/Private/Heimdallr/HMDDiskMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDDiskMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDFPSMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDFPSMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDFluencyDisplayLink.h",
    "pod_support/Headers/Private/Heimdallr/HMDFolderInfo+DiskUsageIMP.h",
    "pod_support/Headers/Private/Heimdallr/HMDFolderInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDFolderInfoModel.h",
    "pod_support/Headers/Private/Heimdallr/HMDFrameDropMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDFrameDropRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitor+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitor+Report.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitor+SizeLimitedReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorCallbackObject.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorCurve+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorCurve.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorCurve2.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorCustomSwitch.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorRecord+DBStore.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorRecord+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceAggregate+FindMaxValue.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceAggregate.h",
    "pod_support/Headers/Public/Heimdallr/HMDBatteryMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDBatteryMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDCPUMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDCPUMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDDiskMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDDiskMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDFPSMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDFPSMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDFluencyDisplayLink.h",
    "pod_support/Headers/Public/Heimdallr/HMDFrameDropMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDFrameDropRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDMemoryMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDMemoryMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorCallbackObject.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorCurve.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorCurve2.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorCustomSwitch.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorRecord+DBStore.h",
    "pod_support/Headers/Public/Heimdallr/HMDMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDPerformanceAggregate.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Monitors_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Monitors_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Monitors_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Monitors-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Monitors-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Monitors_srcs",
  srcs = [
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDBatteryMonitor.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDBatteryMonitorRecord.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDCPUMonitor.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDCPUMonitorRecord.mm",
    "Heimdallr/Classes/Monitors/Common/Private/HMDCPUTimeDetector.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDDiskMonitor.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDDiskMonitorRecord.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFluencyDisplayLink.m",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfo.m",
    "Heimdallr/Classes/Monitors/Common/Private/MonitorUtilities/HMDFolderInfoModel.m",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFPSMonitor.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDFPSMonitorRecord.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDFrameDropMonitor.m",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDFrameDropRecord.m",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDMemoryMonitor.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMemoryMonitorRecord.mm",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+Report.m",
    "Heimdallr/Classes/Monitors/Common/Private/HMDMonitor+SizeLimitedReport.m",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitor.m",
    "Heimdallr/Classes/Monitors/Common/Public/Modules/HMDMonitorCallbackObject.m",
    "Heimdallr/Classes/Monitors/Common/Public/HMDMonitorConfig.m",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorCurve.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorCurve2.mm",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorRecord+DBStore.mm",
    "Heimdallr/Classes/Monitors/Common/Private/Record/HMDMonitorRecord+Private.m",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDMonitorRecord.mm",
    "Heimdallr/Classes/Monitors/Common/Private/Record/HMDPerformanceAggregate+FindMaxValue.m",
    "Heimdallr/Classes/Monitors/Common/Public/Record/HMDPerformanceAggregate.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Monitors_oc",
  enable_modules = 1,
  srcs = [
    "Monitors_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Monitors_hdrs"
  ],
  pch = "pod_support/Headers/Private/Monitors-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Monitors_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Monitors",
  deps = [
    ":Monitors_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Monitors_lib",
  deps = [
    ":Monitors"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HTTPRequestTracker_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPDetailRecord+Private.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPDetailRecord+Report.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPRequestInfo+Private.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPResponseInfo.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPUtil.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+HMDSampling.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+Private.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+SizeLimitedReport.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestUploader.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HTTPRequestTracker_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPDetailRecord.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPRequestInfo.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPRequestRecord.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Public/HMDHTTPRequestTracker.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Public/HMDHTTPTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HTTPRequestTracker_hdrs",
  srcs = [
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPDetailRecord+Private.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPDetailRecord+Report.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPRequestInfo+Private.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPResponseInfo.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPUtil.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPDetailRecord.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPRequestInfo.h",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPRequestRecord.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+HMDSampling.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+Private.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+SizeLimitedReport.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestUploader.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Public/HMDHTTPRequestTracker.h",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Public/HMDHTTPTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HTTPRequestTracker_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDHTTPDetailRecord+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPDetailRecord+Report.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPDetailRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestInfo+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestTracker+HMDSampling.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestTracker+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestTracker+SizeLimitedReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPRequestUploader.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPResponseInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPTrackerConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDHTTPUtil.h",
    "pod_support/Headers/Public/Heimdallr/HMDHTTPDetailRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDHTTPRequestInfo.h",
    "pod_support/Headers/Public/Heimdallr/HMDHTTPRequestRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDHTTPRequestTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDHTTPTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HTTPRequestTracker_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HTTPRequestTracker_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HTTPRequestTracker_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HTTPRequestTracker-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HTTPRequestTracker-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HTTPRequestTracker_srcs",
  srcs = [
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPDetailRecord+Private.m",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPDetailRecord+Report.m",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPDetailRecord.mm",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPRequestInfo+Private.m",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPRequestInfo.m",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Public/HMDHTTPRequestRecord.mm",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+HMDSampling.m",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestTracker+SizeLimitedReport.m",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Public/HMDHTTPRequestTracker.mm",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Private/HMDHTTPRequestUploader.m",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPResponseInfo.m",
    "Heimdallr/Classes/HTTPRequestTracker/ToD/Public/HMDHTTPTrackerConfig.m",
    "Heimdallr/Classes/HTTPRequestTracker/Common/Private/HMDHTTPUtil.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HTTPRequestTracker_oc",
  enable_modules = 1,
  srcs = [
    "HTTPRequestTracker_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HTTPRequestTracker_hdrs"
  ],
  pch = "pod_support/Headers/Private/HTTPRequestTracker-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HTTPRequestTracker_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HTTPRequestTracker",
  deps = [
    ":HTTPRequestTracker_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HTTPRequestTracker_lib",
  deps = [
    ":HTTPRequestTracker"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Dart_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Dart/Common/Private/HMDDartRecord.h",
    "Heimdallr/Classes/Dart/ToD/Private/HMDDartURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Dart_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Dart/Common/Public/Heimdallr+DartTracker.h",
    "Heimdallr/Classes/Dart/Common/Public/HMDDartTracker.h",
    "Heimdallr/Classes/Dart/Common/Public/HMDDartTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Dart_hdrs",
  srcs = [
    "Heimdallr/Classes/Dart/Common/Private/HMDDartRecord.h",
    "Heimdallr/Classes/Dart/Common/Public/HMDDartTracker.h",
    "Heimdallr/Classes/Dart/Common/Public/HMDDartTrackerConfig.h",
    "Heimdallr/Classes/Dart/Common/Public/Heimdallr+DartTracker.h",
    "Heimdallr/Classes/Dart/ToD/Private/HMDDartURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Dart_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDDartRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDDartTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDDartTrackerConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDDartURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+DartTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDDartTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDDartTrackerConfig.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr+DartTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Dart_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Dart_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Dart_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Dart-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Dart-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Dart_srcs",
  srcs = [
    "Heimdallr/Classes/Dart/Common/Public/Heimdallr+DartTracker.m",
    "Heimdallr/Classes/Dart/Common/Private/HMDDartRecord.mm",
    "Heimdallr/Classes/Dart/Common/Public/HMDDartTracker.mm",
    "Heimdallr/Classes/Dart/Common/Public/HMDDartTrackerConfig.m",
    "Heimdallr/Classes/Dart/ToD/Private/HMDDartURLProvider.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Dart_oc",
  enable_modules = 1,
  srcs = [
    "Dart_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Dart_hdrs"
  ],
  pch = "pod_support/Headers/Private/Dart-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Dart_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Dart",
  deps = [
    ":Dart_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Dart_lib",
  deps = [
    ":Dart"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Game_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Game/Common/Private/HMDGameRecord.h",
    "Heimdallr/Classes/Game/ToD/Private/HMDGameURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Game_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Game/Common/Public/Heimdallr+GameTracker.h",
    "Heimdallr/Classes/Game/Common/Public/HMDGameTracker.h",
    "Heimdallr/Classes/Game/Common/Public/HMDGameTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Game_hdrs",
  srcs = [
    "Heimdallr/Classes/Game/Common/Private/HMDGameRecord.h",
    "Heimdallr/Classes/Game/Common/Public/HMDGameTracker.h",
    "Heimdallr/Classes/Game/Common/Public/HMDGameTrackerConfig.h",
    "Heimdallr/Classes/Game/Common/Public/Heimdallr+GameTracker.h",
    "Heimdallr/Classes/Game/ToD/Private/HMDGameURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Game_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Game_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Game_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Game_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Game-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Game-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Game_srcs",
  srcs = [
    "Heimdallr/Classes/Game/Common/Public/Heimdallr+GameTracker.m",
    "Heimdallr/Classes/Game/Common/Private/HMDGameRecord.mm",
    "Heimdallr/Classes/Game/Common/Public/HMDGameTracker.m",
    "Heimdallr/Classes/Game/Common/Public/HMDGameTrackerConfig.m",
    "Heimdallr/Classes/Game/ToD/Private/HMDGameURLProvider.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Game_oc",
  enable_modules = 1,
  srcs = [
    "Game_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Game_hdrs"
  ],
  pch = "pod_support/Headers/Private/Game-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Game_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Game",
  deps = [
    ":Game_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Game_lib",
  deps = [
    ":Game"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSession_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSession_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSession/Common/Public/HMDApplicationSession.h",
    "Heimdallr/Classes/HMDSession/Common/Public/HMDBackgroundMonitor.h",
    "Heimdallr/Classes/HMDSession/Common/Public/HMDSessionTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSession_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSession/Common/Public/HMDApplicationSession.h",
    "Heimdallr/Classes/HMDSession/Common/Public/HMDBackgroundMonitor.h",
    "Heimdallr/Classes/HMDSession/Common/Public/HMDSessionTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSession_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDApplicationSession.h",
    "pod_support/Headers/Private/Heimdallr/HMDBackgroundMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDSessionTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDApplicationSession.h",
    "pod_support/Headers/Public/Heimdallr/HMDBackgroundMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDSessionTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSession_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSession_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDSession_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSession-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSession-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSession_srcs",
  srcs = [
    "Heimdallr/Classes/HMDSession/Common/Public/HMDApplicationSession.mm",
    "Heimdallr/Classes/HMDSession/Common/Public/HMDBackgroundMonitor.mm",
    "Heimdallr/Classes/HMDSession/Common/Public/HMDSessionTracker.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSession_oc",
  enable_modules = 1,
  srcs = [
    "HMDSession_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDSession_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDSession-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Hermas//:Hermas_objc_interface",
    "@Hermas//:Hermas_swift_interface",
    ":HMDSession_objc_interface",
    "@Hermas//:Hermas_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSession",
  deps = [
    ":HMDSession_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDSession_lib",
  deps = [
    ":HMDSession"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStore_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGDB.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGFMDBConfig.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGTool.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGToolCustomization.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/NSCache+HMDBGCache.h",
    "Heimdallr/Classes/Store/Common/Private/HMDFMDBConditionHelper.h",
    "Heimdallr/Classes/Store/Common/Private/HMDStoreFMDB.h",
    "Heimdallr/Classes/Store/Common/Private/HMDStoreMemoryDB.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStore_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStore+DeleteRecord.h",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStore.h",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStoreObject.h",
    "Heimdallr/Classes/Store/Common/Public/HMDStoreCondition.h",
    "Heimdallr/Classes/Store/Common/Public/HMDStoreIMP.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStore_hdrs",
  srcs = [
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGDB.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGFMDBConfig.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGTool.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGToolCustomization.h",
    "Heimdallr/Classes/Store/Common/Private/BGDB/NSCache+HMDBGCache.h",
    "Heimdallr/Classes/Store/Common/Private/HMDFMDBConditionHelper.h",
    "Heimdallr/Classes/Store/Common/Private/HMDStoreFMDB.h",
    "Heimdallr/Classes/Store/Common/Private/HMDStoreMemoryDB.h",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStore+DeleteRecord.h",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStore.h",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStoreObject.h",
    "Heimdallr/Classes/Store/Common/Public/HMDStoreCondition.h",
    "Heimdallr/Classes/Store/Common/Public/HMDStoreIMP.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStore_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDBGDB.h",
    "pod_support/Headers/Private/Heimdallr/HMDBGFMDBConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDBGTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDBGToolCustomization.h",
    "pod_support/Headers/Private/Heimdallr/HMDFMDBConditionHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDRecordStore+DeleteRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDRecordStore.h",
    "pod_support/Headers/Private/Heimdallr/HMDRecordStoreObject.h",
    "pod_support/Headers/Private/Heimdallr/HMDStoreCondition.h",
    "pod_support/Headers/Private/Heimdallr/HMDStoreFMDB.h",
    "pod_support/Headers/Private/Heimdallr/HMDStoreIMP.h",
    "pod_support/Headers/Private/Heimdallr/HMDStoreMemoryDB.h",
    "pod_support/Headers/Private/Heimdallr/NSCache+HMDBGCache.h",
    "pod_support/Headers/Public/Heimdallr/HMDRecordStore+DeleteRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDRecordStore.h",
    "pod_support/Headers/Public/Heimdallr/HMDRecordStoreObject.h",
    "pod_support/Headers/Public/Heimdallr/HMDStoreCondition.h",
    "pod_support/Headers/Public/Heimdallr/HMDStoreIMP.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDStore_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDStore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDStore_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDStore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDStore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStore_srcs",
  srcs = [
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGDB.m",
    "Heimdallr/Classes/Store/Common/Private/BGDB/HMDBGTool.m",
    "Heimdallr/Classes/Store/Common/Private/HMDFMDBConditionHelper.m",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStore+DeleteRecord.m",
    "Heimdallr/Classes/Store/Common/Public/HMDRecordStore.mm",
    "Heimdallr/Classes/Store/Common/Public/HMDStoreCondition.m",
    "Heimdallr/Classes/Store/Common/Private/HMDStoreFMDB.mm",
    "Heimdallr/Classes/Store/Common/Private/HMDStoreMemoryDB.m",
    "Heimdallr/Classes/Store/Common/Private/BGDB/NSCache+HMDBGCache.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDStore_oc",
  enable_modules = 1,
  srcs = [
    "HMDStore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDStore_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDStore-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@FMDB//:FMDB_objc_interface",
    "@FMDB//:FMDB_swift_interface",
    ":HMDStore_objc_interface",
    "@FMDB//:FMDB_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDStore",
  deps = [
    ":HMDStore_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDStore_lib",
  deps = [
    ":HMDStore"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Upload_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDDefaultExceptionModuleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionDataWrapper.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionModuleReporter+Internal.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionModuleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionReporterDataProvider.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDUserExceptionModuleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/FileUploader/HMDFileUploadRequest+URLPathProvider.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDCustomReport.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDCustomReportManager+Private.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDDoubleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDExceptionReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReportRequest.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporter+SizeLimitedReport.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporterManager+Privated.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporterManager.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDRecordCleanALog.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportDowngrador.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportLimitSizeTool.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportSizeLimitManager+Private.h",
    "Heimdallr/Classes/Upload/ToD/Private/ExceptionReporter/HMDDefaultExceptionModuleReporter+HMDURLProvider.h",
    "Heimdallr/Classes/Upload/ToD/Private/ExceptionReporter/HMDUserExceptionModuleReporter+HMDURLProvider.h",
    "Heimdallr/Classes/Upload/ToD/Private/FileUploader/HMDFileUploader+HMDURLProvider.h",
    "Heimdallr/Classes/Upload/ToD/Private/Performace/HMDPerformanceReporterManager+HMDURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Upload_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Upload/Common/Public/HMDCustomReportConfig.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDCustomReportManager.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploader.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploadProtocol.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploadRequest.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDReportSizeLimitManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Upload_hdrs",
  srcs = [
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDDefaultExceptionModuleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionDataWrapper.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionModuleReporter+Internal.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionModuleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionReporterDataProvider.h",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDUserExceptionModuleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/FileUploader/HMDFileUploadRequest+URLPathProvider.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDCustomReport.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDCustomReportManager+Private.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDDoubleReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDExceptionReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReportRequest.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporter+SizeLimitedReport.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporter.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporterManager+Privated.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporterManager.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDRecordCleanALog.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportDowngrador.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportLimitSizeTool.h",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportSizeLimitManager+Private.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDCustomReportConfig.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDCustomReportManager.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploadProtocol.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploadRequest.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploader.h",
    "Heimdallr/Classes/Upload/Common/Public/HMDReportSizeLimitManager.h",
    "Heimdallr/Classes/Upload/ToD/Private/ExceptionReporter/HMDDefaultExceptionModuleReporter+HMDURLProvider.h",
    "Heimdallr/Classes/Upload/ToD/Private/ExceptionReporter/HMDUserExceptionModuleReporter+HMDURLProvider.h",
    "Heimdallr/Classes/Upload/ToD/Private/FileUploader/HMDFileUploader+HMDURLProvider.h",
    "Heimdallr/Classes/Upload/ToD/Private/Performace/HMDPerformanceReporterManager+HMDURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Upload_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCustomReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDCustomReportConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCustomReportManager+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCustomReportManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDDefaultExceptionModuleReporter+HMDURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDDefaultExceptionModuleReporter.h",
    "pod_support/Headers/Private/Heimdallr/HMDDoubleReporter.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionDataWrapper.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionModuleReporter+Internal.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionModuleReporter.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionReporter.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionReporterDataProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileUploadProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileUploadRequest+URLPathProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileUploadRequest.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileUploader+HMDURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileUploader.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceReportRequest.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceReporter+SizeLimitedReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceReporter.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceReporterManager+HMDURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceReporterManager+Privated.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceReporterManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDRecordCleanALog.h",
    "pod_support/Headers/Private/Heimdallr/HMDReportDowngrador.h",
    "pod_support/Headers/Private/Heimdallr/HMDReportLimitSizeTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDReportSizeLimitManager+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDReportSizeLimitManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionModuleReporter+HMDURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionModuleReporter.h",
    "pod_support/Headers/Public/Heimdallr/HMDCustomReportConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDCustomReportManager.h",
    "pod_support/Headers/Public/Heimdallr/HMDFileUploadProtocol.h",
    "pod_support/Headers/Public/Heimdallr/HMDFileUploadRequest.h",
    "pod_support/Headers/Public/Heimdallr/HMDFileUploader.h",
    "pod_support/Headers/Public/Heimdallr/HMDReportSizeLimitManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Upload_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Upload_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Upload_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Upload-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Upload-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Upload_srcs",
  srcs = [
    "Heimdallr/Classes/Upload/Common/Private/HMDCustomReport.m",
    "Heimdallr/Classes/Upload/Common/Public/HMDCustomReportConfig.m",
    "Heimdallr/Classes/Upload/Common/Public/HMDCustomReportManager.m",
    "Heimdallr/Classes/Upload/ToD/Private/ExceptionReporter/HMDDefaultExceptionModuleReporter+HMDURLProvider.m",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDDefaultExceptionModuleReporter.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDDoubleReporter.m",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionDataWrapper.m",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDExceptionModuleReporter.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDExceptionReporter.m",
    "Heimdallr/Classes/Upload/ToD/Private/FileUploader/HMDFileUploader+HMDURLProvider.m",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploader.m",
    "Heimdallr/Classes/Upload/Common/Private/FileUploader/HMDFileUploadRequest+URLPathProvider.m",
    "Heimdallr/Classes/Upload/Common/Public/HMDFileUploadRequest.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporter+SizeLimitedReport.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporter.m",
    "Heimdallr/Classes/Upload/ToD/Private/Performace/HMDPerformanceReporterManager+HMDURLProvider.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReporterManager.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDPerformanceReportRequest.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDRecordCleanALog.c",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportDowngrador.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportLimitSizeTool.m",
    "Heimdallr/Classes/Upload/Common/Private/HMDReportSizeLimitManager+Private.m",
    "Heimdallr/Classes/Upload/Common/Public/HMDReportSizeLimitManager.m",
    "Heimdallr/Classes/Upload/ToD/Private/ExceptionReporter/HMDUserExceptionModuleReporter+HMDURLProvider.m",
    "Heimdallr/Classes/Upload/Common/Private/ExceptionReporter/HMDUserExceptionModuleReporter.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Upload_oc",
  enable_modules = 1,
  srcs = [
    "Upload_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Upload_hdrs"
  ],
  pch = "pod_support/Headers/Private/Upload-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@TTReachability//:TTReachability_objc_interface",
    "@TTReachability//:TTReachability_swift_interface",
    ":Upload_objc_interface",
    "@TTReachability//:TTReachability_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Upload",
  deps = [
    ":Upload_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Upload_lib",
  deps = [
    ":Upload"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Network_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Network/Common/Private/HMDNetQualityProtocol.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetQualityTracker.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkHelper.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkManager.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkProtocol.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkReachability.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkReqModel.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkUploadModel.h",
    "Heimdallr/Classes/Network/Common/Private/HMDURLBackgrounSessionManager.h",
    "Heimdallr/Classes/Network/Common/Private/HMDURLSessionManager.h",
    "Heimdallr/Classes/Network/Common/Private/HMDUploadHelper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Network_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Network/Common/Public/HMDNetworkInjector.h",
    "Heimdallr/Classes/Network/Common/Public/HMDNetworkSpeedManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Network_hdrs",
  srcs = [
    "Heimdallr/Classes/Network/Common/Private/HMDNetQualityProtocol.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetQualityTracker.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkHelper.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkManager.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkProtocol.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkReachability.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkReqModel.h",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkUploadModel.h",
    "Heimdallr/Classes/Network/Common/Private/HMDURLBackgrounSessionManager.h",
    "Heimdallr/Classes/Network/Common/Private/HMDURLSessionManager.h",
    "Heimdallr/Classes/Network/Common/Private/HMDUploadHelper.h",
    "Heimdallr/Classes/Network/Common/Public/HMDNetworkInjector.h",
    "Heimdallr/Classes/Network/Common/Public/HMDNetworkSpeedManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Network_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDNetQualityProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetQualityTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkInjector.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkReachability.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkReqModel.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkSpeedManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkUploadModel.h",
    "pod_support/Headers/Private/Heimdallr/HMDURLBackgrounSessionManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDURLSessionManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDUploadHelper.h",
    "pod_support/Headers/Public/Heimdallr/HMDNetworkInjector.h",
    "pod_support/Headers/Public/Heimdallr/HMDNetworkSpeedManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Network_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Network_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Network_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Network-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Network-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Network_srcs",
  srcs = [
    "Heimdallr/Classes/Network/Common/Private/HMDNetQualityTracker.m",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkHelper.m",
    "Heimdallr/Classes/Network/Common/Public/HMDNetworkInjector.m",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkManager.m",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkReachability.m",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkReqModel.m",
    "Heimdallr/Classes/Network/Common/Public/HMDNetworkSpeedManager.m",
    "Heimdallr/Classes/Network/Common/Private/HMDNetworkUploadModel.m",
    "Heimdallr/Classes/Network/Common/Private/HMDUploadHelper.m",
    "Heimdallr/Classes/Network/Common/Private/HMDURLBackgrounSessionManager.m",
    "Heimdallr/Classes/Network/Common/Private/HMDURLSessionManager.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Network_oc",
  enable_modules = 1,
  srcs = [
    "Network_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Network_hdrs"
  ],
  pch = "pod_support/Headers/Private/Network-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDDataDecorator//:BDDataDecorator_objc_interface",
    "@Hermas//:Hermas_objc_interface",
    "@TTReachability//:TTReachability_objc_interface",
    "@BDDataDecorator//:BDDataDecorator_swift_interface",
    "@Hermas//:Hermas_swift_interface",
    "@TTReachability//:TTReachability_swift_interface",
    ":Network_objc_interface",
    "@BDDataDecorator//:BDDataDecorator_module_map",
    "@Hermas//:Hermas_module_map",
    "@TTReachability//:TTReachability_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Network",
  deps = [
    ":Network_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Network_lib",
  deps = [
    ":Network"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStart_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDStart/Common/Private/AppStartTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStart_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDStart/Common/Public/Heimdallr+UserTracker.h",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartDetector.h",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartDetectorConfig.h",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStart_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDStart/Common/Private/AppStartTracker.h",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartDetector.h",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartDetectorConfig.h",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartRecord.h",
    "Heimdallr/Classes/HMDStart/Common/Public/Heimdallr+UserTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStart_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/AppStartTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDStartDetector.h",
    "pod_support/Headers/Private/Heimdallr/HMDStartDetectorConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDStartRecord.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+UserTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDStartDetector.h",
    "pod_support/Headers/Public/Heimdallr/HMDStartDetectorConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDStartRecord.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr+UserTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDStart_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDStart_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDStart_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDStart-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDStart-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStart_srcs",
  srcs = [
    "Heimdallr/Classes/HMDStart/Common/Private/AppStartTracker.mm",
    "Heimdallr/Classes/HMDStart/Common/Public/Heimdallr+UserTracker.m",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartDetector.mm",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartDetectorConfig.m",
    "Heimdallr/Classes/HMDStart/Common/Public/HMDStartRecord.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDStart_oc",
  enable_modules = 1,
  srcs = [
    "HMDStart_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDStart_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDStart-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDStart_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDStart",
  deps = [
    ":HMDStart_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDStart_lib",
  deps = [
    ":HMDStart"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTiming_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchDataCollector.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchNetCollector.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchPerfCollector.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTaskSpan.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTiming+Private.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTiming+Report.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTiming_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTiming.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingConfig.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingDefine.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingRecord.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingUserTrace.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTiming_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchDataCollector.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchNetCollector.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchPerfCollector.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTaskSpan.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTiming+Private.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTiming+Report.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTiming.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingConfig.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingDefine.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingRecord.h",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingUserTrace.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTiming_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchTiming_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchTiming_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDLaunchTiming_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchTiming-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchTiming-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTiming_srcs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchDataCollector.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchNetCollector.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchPerfCollector.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTaskSpan.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Private/HMDLaunchTiming+Report.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTiming.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingConfig.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingRecord.m",
    "Heimdallr/Classes/HMDLaunchTiming/Common/Public/HMDLaunchTimingUserTrace.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchTiming_oc",
  enable_modules = 1,
  srcs = [
    "HMDLaunchTiming_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDLaunchTiming_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDLaunchTiming-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDLaunchTiming_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchTiming",
  deps = [
    ":HMDLaunchTiming_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDLaunchTiming_lib",
  deps = [
    ":HMDLaunchTiming"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTracing_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTracing_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTracing/Common/Public/HMDLaunchTracingTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTracing_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTracing/Common/Public/HMDLaunchTracingTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTracing_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDLaunchTracingTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDLaunchTracingTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchTracing_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchTracing_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDLaunchTracing_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchTracing-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchTracing-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchTracing_srcs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchTracing/Common/Public/HMDLaunchTracingTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchTracing_oc",
  enable_modules = 1,
  srcs = [
    "HMDLaunchTracing_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDLaunchTracing_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDLaunchTracing-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDLaunchTracing_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchTracing",
  deps = [
    ":HMDLaunchTracing_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDLaunchTracing_lib",
  deps = [
    ":HMDLaunchTracing"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BootingProtect_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BootingProtect_public_hdrs",
  srcs = [
    "Heimdallr/Classes/BootingProtect/Common/Public/HMDBootingProtection.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BootingProtect_hdrs",
  srcs = [
    "Heimdallr/Classes/BootingProtect/Common/Public/HMDBootingProtection.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BootingProtect_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDBootingProtection.h",
    "pod_support/Headers/Public/Heimdallr/HMDBootingProtection.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "BootingProtect_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "BootingProtect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "BootingProtect_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_BootingProtect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_BootingProtect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BootingProtect_srcs",
  srcs = [
    "Heimdallr/Classes/BootingProtect/Common/Public/HMDBootingProtection.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "BootingProtect_oc",
  enable_modules = 1,
  srcs = [
    "BootingProtect_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "BootingProtect_hdrs"
  ],
  pch = "pod_support/Headers/Private/BootingProtect-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":BootingProtect_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "BootingProtect",
  deps = [
    ":BootingProtect_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "BootingProtect_lib",
  deps = [
    ":BootingProtect"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTMonitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager+Upload.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager2.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitor+Private.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitor+Tracker.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorCounter.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorExchangeHelper.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorHelper.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorInterceptor.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorInterceptorParam.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorMetricRecord.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorRecord.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTagHelper.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker+Privated.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker+SizeLimitedReport.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker2.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTrackerInterface.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorUserInfo+Private.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTMonitor_public_hdrs",
  srcs = [
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+AppLog.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+CodeCoverage.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+CustomTag.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+FrequenceDetect.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+Sample.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitorUserInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTMonitor_hdrs",
  srcs = [
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager+Upload.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager2.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitor+Private.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitor+Tracker.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorCounter.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorExchangeHelper.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorHelper.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorInterceptor.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorInterceptorParam.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorMetricRecord.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorRecord.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTagHelper.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker+Privated.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker+SizeLimitedReport.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker2.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTrackerInterface.h",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorUserInfo+Private.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+AppLog.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+CodeCoverage.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+CustomTag.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+FrequenceDetect.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+Sample.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor.h",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitorUserInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTMonitor_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDMonitorDataManager+Upload.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorDataManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorDataManager2.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+AppLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+CodeCoverage.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+CustomTag.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+FrequenceDetect.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+Sample.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor+Tracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorCounter.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorExchangeHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorInterceptor.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorInterceptorParam.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorMetricRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorTagHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorTracker+Privated.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorTracker+SizeLimitedReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorTracker2.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorTrackerInterface.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorUserInfo+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorUserInfo.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitor+AppLog.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitor+CodeCoverage.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitor+CustomTag.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitor+FrequenceDetect.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitor+Sample.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTMonitorUserInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TTMonitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TTMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "TTMonitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_TTMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_TTMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTMonitor_srcs",
  srcs = [
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager+Upload.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDMonitorDataManager2.mm",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+AppLog.m",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+CodeCoverage.m",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+CustomTag.m",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+FrequenceDetect.m",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor+Sample.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitor+Tracker.m",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitor.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorCounter.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorExchangeHelper.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorHelper.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorInterceptor.mm",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorInterceptorParam.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorMetricRecord.mm",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorRecord.mm",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTagHelper.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker+SizeLimitedReport.m",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker.mm",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorTracker2.mm",
    "Heimdallr/Classes/TTMonitor/Common/Private/HMDTTMonitorUserInfo+Private.m",
    "Heimdallr/Classes/TTMonitor/Common/Public/HMDTTMonitorUserInfo.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TTMonitor_oc",
  enable_modules = 1,
  srcs = [
    "TTMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "TTMonitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/TTMonitor-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":TTMonitor_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TTMonitor",
  deps = [
    ":TTMonitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "TTMonitor_lib",
  deps = [
    ":TTMonitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Mach_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDAsyncStackTraceDebug.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDAsyncThreadRecordPool.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncStackRecordList.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncStackTrace.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncThreadUtils.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDThreadBacktrace+Private.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/hmd_crash_async_stack_trace.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/hmd_thread_backtrace.h",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDDeadlockDiscover.hpp",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDDeadlockHeader.h",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDLockHeader.h",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDThreadLockTool.h",
    "Heimdallr/Classes/Mach/Common/Private/Env/HMDInfo+DeviceEnv.h",
    "Heimdallr/Classes/Mach/Common/Private/Images/HMDBinaryImage.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/HMDAsyncSymbolicator.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/HMDAsyncThread.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/SDKLog/HMDCrashSDKLog.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/SDKLog/HMDCrashSDKLog_Namespace.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/WriteBuffer/HMDCrashFileBuffer.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/WriteBuffer/HMDCrashMemoryBuffer.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/env/HMDEnvCheck.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_crash_safe_tool.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_logger.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach_exception_protection_definition.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach_exception_protection_tool.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_memory.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_objc_apple.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_queue_name_offset.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_signal_info.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_symbolicator.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_try_catch_detector.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_types.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncRegister.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncThreadState.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_machine_context.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_backtrace.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_machine_context.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_self_thread.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDAsyncDwarfUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfConfig.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfDataParsing.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfExpressionMachine.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfUnwindRegisters.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/dwarf.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/HMDCompactUnwind.hpp",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncImageList.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncMachOImage.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncMemoryRange.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncSymbolReader.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDDeviceImageTool.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDAsyncCompactUnwindEncoding.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDCompactUnwindConfig.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDCompatConstants.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameCompactUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameStackUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameWalker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Mach_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktrace.h",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktraceFrame.h",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktraceParameter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Mach_hdrs",
  srcs = [
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDAsyncStackTraceDebug.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDAsyncThreadRecordPool.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncStackRecordList.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncStackTrace.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncThreadUtils.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDThreadBacktrace+Private.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/hmd_crash_async_stack_trace.h",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/hmd_thread_backtrace.h",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDDeadlockDiscover.hpp",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDDeadlockHeader.h",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDLockHeader.h",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDThreadLockTool.h",
    "Heimdallr/Classes/Mach/Common/Private/Env/HMDInfo+DeviceEnv.h",
    "Heimdallr/Classes/Mach/Common/Private/Images/HMDBinaryImage.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/HMDAsyncSymbolicator.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/HMDAsyncThread.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/SDKLog/HMDCrashSDKLog.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/SDKLog/HMDCrashSDKLog_Namespace.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/WriteBuffer/HMDCrashFileBuffer.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/WriteBuffer/HMDCrashMemoryBuffer.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/env/HMDEnvCheck.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_crash_safe_tool.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_logger.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach_exception_protection_definition.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach_exception_protection_tool.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_memory.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_objc_apple.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_queue_name_offset.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_signal_info.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_symbolicator.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_try_catch_detector.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_types.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncRegister.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncThreadState.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_machine_context.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_backtrace.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_machine_context.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_self_thread.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDAsyncDwarfUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfConfig.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfDataParsing.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfExpressionMachine.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfUnwindRegisters.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/dwarf.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/HMDCompactUnwind.hpp",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncImageList.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncMachOImage.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncMemoryRange.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncSymbolReader.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDDeviceImageTool.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDAsyncCompactUnwindEncoding.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDCompactUnwindConfig.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDCompatConstants.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameCompactUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameStackUnwind.h",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameWalker.h",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktrace.h",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktraceFrame.h",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktraceParameter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Mach_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDAsyncCompactUnwindEncoding.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncDwarfUnwind.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncImageList.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncMachOImage.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncMemoryRange.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncRegister.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncStackTraceDebug.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncSymbolReader.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncSymbolicator.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncThread.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncThreadRecordPool.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncThreadState.h",
    "pod_support/Headers/Private/Heimdallr/HMDBinaryImage.h",
    "pod_support/Headers/Private/Heimdallr/HMDCompactUnwind.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDCompactUnwindConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCompatConstants.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAsyncStackRecordList.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAsyncStackTrace.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAsyncThreadUtils.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashFileBuffer.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashMemoryBuffer.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashSDKLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashSDKLog_Namespace.h",
    "pod_support/Headers/Private/Heimdallr/HMDDeadlockDiscover.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDDeadlockHeader.h",
    "pod_support/Headers/Private/Heimdallr/HMDDeviceImageTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDDwarfConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDDwarfDataParsing.h",
    "pod_support/Headers/Private/Heimdallr/HMDDwarfExpressionMachine.h",
    "pod_support/Headers/Private/Heimdallr/HMDDwarfUnwind.h",
    "pod_support/Headers/Private/Heimdallr/HMDDwarfUnwindRegisters.h",
    "pod_support/Headers/Private/Heimdallr/HMDEnvCheck.h",
    "pod_support/Headers/Private/Heimdallr/HMDFrameCompactUnwind.h",
    "pod_support/Headers/Private/Heimdallr/HMDFrameStackUnwind.h",
    "pod_support/Headers/Private/Heimdallr/HMDFrameWalker.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo+DeviceEnv.h",
    "pod_support/Headers/Private/Heimdallr/HMDLockHeader.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadBacktrace+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadBacktrace.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadBacktraceFrame.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadBacktraceParameter.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadLockTool.h",
    "pod_support/Headers/Private/Heimdallr/dwarf.h",
    "pod_support/Headers/Private/Heimdallr/hmd_crash_async_stack_trace.h",
    "pod_support/Headers/Private/Heimdallr/hmd_crash_safe_tool.h",
    "pod_support/Headers/Private/Heimdallr/hmd_logger.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mach.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mach_exception_protection_definition.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mach_exception_protection_tool.h",
    "pod_support/Headers/Private/Heimdallr/hmd_machine_context.h",
    "pod_support/Headers/Private/Heimdallr/hmd_memory.h",
    "pod_support/Headers/Private/Heimdallr/hmd_objc_apple.h",
    "pod_support/Headers/Private/Heimdallr/hmd_queue_name_offset.h",
    "pod_support/Headers/Private/Heimdallr/hmd_signal_info.h",
    "pod_support/Headers/Private/Heimdallr/hmd_stack_cursor.h",
    "pod_support/Headers/Private/Heimdallr/hmd_stack_cursor_backtrace.h",
    "pod_support/Headers/Private/Heimdallr/hmd_stack_cursor_machine_context.h",
    "pod_support/Headers/Private/Heimdallr/hmd_stack_cursor_self_thread.h",
    "pod_support/Headers/Private/Heimdallr/hmd_symbolicator.h",
    "pod_support/Headers/Private/Heimdallr/hmd_thread_backtrace.h",
    "pod_support/Headers/Private/Heimdallr/hmd_try_catch_detector.h",
    "pod_support/Headers/Private/Heimdallr/hmd_types.h",
    "pod_support/Headers/Public/Heimdallr/HMDThreadBacktrace.h",
    "pod_support/Headers/Public/Heimdallr/HMDThreadBacktraceFrame.h",
    "pod_support/Headers/Public/Heimdallr/HMDThreadBacktraceParameter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Mach_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Mach_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Mach_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Mach-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Mach-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Mach_srcs",
  srcs = [
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_crash_safe_tool.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_mach_exception_protection_tool.m",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_machine_context.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_memory.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_queue_name_offset.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_signal_info.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_backtrace.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_machine_context.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stacktrace/hmd_stack_cursor_self_thread.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_symbolicator.c",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/hmd_thread_backtrace.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/hmd_try_catch_detector.mm",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDAsyncCompactUnwindEncoding.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDAsyncDwarfUnwind.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncImageList.cpp",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncMachOImage.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncMemoryRange.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncRegister_ARM32.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncRegister_ARM64.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncRegister_I386.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncRegister_X86_64.c",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDAsyncStackTraceDebug.m",
    "Heimdallr/Classes/Mach/Common/Private/tools/HMDAsyncSymbolicator.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDAsyncSymbolReader.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/HMDAsyncThread.c",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDAsyncThreadRecordPool.cpp",
    "Heimdallr/Classes/Mach/Common/Private/tools/register/HMDAsyncThreadState.c",
    "Heimdallr/Classes/Mach/Common/Private/Images/HMDBinaryImage.m",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/HMDCompactUnwind.cpp",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncStackRecordList.cpp",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncStackTrace.m",
    "Heimdallr/Classes/Mach/Common/Private/Backtrace/HMDCrashAsyncThreadUtils.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/WriteBuffer/HMDCrashFileBuffer.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/WriteBuffer/HMDCrashMemoryBuffer.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/SDKLog/HMDCrashSDKLog.c",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDDeadlockDiscover.cpp",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDDeadlockHeader.mm",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/macho/HMDDeviceImageTool.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfDataParsing.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfExpressionMachine.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/Dwarf/HMDDwarfUnwind.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/env/HMDEnvCheck.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameCompactUnwind.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameStackUnwind.c",
    "Heimdallr/Classes/Mach/Common/Private/tools/stackunwind/unwind/HMDFrameWalker.c",
    "Heimdallr/Classes/Mach/Common/Private/Env/HMDInfo+DeviceEnv.m",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktrace.m",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktraceFrame.mm",
    "Heimdallr/Classes/Mach/Common/Public/HMDThreadBacktraceParameter.m",
    "Heimdallr/Classes/Mach/Common/Private/Deadlock/HMDThreadLockTool.c"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Mach_oc",
  enable_modules = 1,
  srcs = [
    "Mach_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Mach_hdrs"
  ],
  pch = "pod_support/Headers/Private/Mach-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    ":Mach_objc_interface",
    "@BDFishhook//:BDFishhook_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Mach",
  deps = [
    ":Mach_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Mach_lib",
  deps = [
    ":Mach"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UITracker_private_hdrs",
  srcs = [
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIControl+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIGestureRecognizer+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UINavigationController+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UITabBarController+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIView+HMDController.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+HMDUITracker+Macro.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+UserTracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDControllerMonitor.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDDelegateProxy.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDUITrackableContext.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDUIViewHierarchy.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager+Report.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager+SizeLimitedReport.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager2.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeRecord.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackRecord.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITracker+Private.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackerDelegate.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackerManager+SizeLimitedReport.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UITracker_public_hdrs",
  srcs = [
    "Heimdallr/Classes/UITrackers/Common/Public/HMDControllerTimingConfig.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDUITrackerConfig.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDUITrackerManager.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDVCFinder.h",
    "Heimdallr/Classes/UITrackers/Common/Public/UIViewController+HMDControllerMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UITracker_hdrs",
  srcs = [
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIControl+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIGestureRecognizer+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UINavigationController+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UITabBarController+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIView+HMDController.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+HMDUITracker+Macro.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+UserTracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDControllerMonitor.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDDelegateProxy.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDUITrackableContext.h",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDUIViewHierarchy.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager+Report.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager+SizeLimitedReport.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager2.h",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeRecord.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackRecord.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITracker+Private.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITracker.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackerDelegate.h",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackerManager+SizeLimitedReport.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDControllerTimingConfig.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDUITrackerConfig.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDUITrackerManager.h",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDVCFinder.h",
    "Heimdallr/Classes/UITrackers/Common/Public/UIViewController+HMDControllerMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UITracker_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDControllerMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDControllerTimeManager+Report.h",
    "pod_support/Headers/Private/Heimdallr/HMDControllerTimeManager+SizeLimitedReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDControllerTimeManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDControllerTimeManager2.h",
    "pod_support/Headers/Private/Heimdallr/HMDControllerTimeRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDControllerTimingConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDDelegateProxy.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackableContext.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITracker+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackerConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackerDelegate.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackerManager+SizeLimitedReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackerManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIViewHierarchy.h",
    "pod_support/Headers/Private/Heimdallr/HMDVCFinder.h",
    "pod_support/Headers/Private/Heimdallr/UIControl+HMDUITracker.h",
    "pod_support/Headers/Private/Heimdallr/UIGestureRecognizer+HMDUITracker.h",
    "pod_support/Headers/Private/Heimdallr/UINavigationController+HMDUITracker.h",
    "pod_support/Headers/Private/Heimdallr/UITabBarController+HMDUITracker.h",
    "pod_support/Headers/Private/Heimdallr/UIView+HMDController.h",
    "pod_support/Headers/Private/Heimdallr/UIViewController+HMDControllerMonitor.h",
    "pod_support/Headers/Private/Heimdallr/UIViewController+HMDUITracker+Macro.h",
    "pod_support/Headers/Private/Heimdallr/UIViewController+HMDUITracker.h",
    "pod_support/Headers/Private/Heimdallr/UIViewController+UserTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDControllerTimingConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDUITrackerConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDUITrackerManager.h",
    "pod_support/Headers/Public/Heimdallr/HMDVCFinder.h",
    "pod_support/Headers/Public/Heimdallr/UIViewController+HMDControllerMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "UITracker_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "UITracker_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "UITracker_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_UITracker-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_UITracker-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UITracker_srcs",
  srcs = [
    "Heimdallr/Classes/UITrackers/Common/Private/HMDControllerMonitor.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager+Report.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager+SizeLimitedReport.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager.mm",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeManager2.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Timing/HMDControllerTimeRecord.mm",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDControllerTimingConfig.m",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDDelegateProxy.m",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDUITrackableContext.m",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITracker.mm",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDUITrackerConfig.m",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackerManager+SizeLimitedReport.m",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDUITrackerManager.mm",
    "Heimdallr/Classes/UITrackers/Common/Private/UIManager/HMDUITrackRecord.mm",
    "Heimdallr/Classes/UITrackers/Common/Private/HMDUIViewHierarchy.m",
    "Heimdallr/Classes/UITrackers/Common/Public/HMDVCFinder.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIControl+HMDUITracker.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIGestureRecognizer+HMDUITracker.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UINavigationController+HMDUITracker.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UITabBarController+HMDUITracker.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIView+HMDController.m",
    "Heimdallr/Classes/UITrackers/Common/Public/UIViewController+HMDControllerMonitor.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+HMDUITracker.m",
    "Heimdallr/Classes/UITrackers/Common/Private/Extend/UIViewController+UserTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "UITracker_oc",
  enable_modules = 1,
  srcs = [
    "UITracker_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "UITracker_hdrs"
  ],
  pch = "pod_support/Headers/Private/UITracker-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":UITracker_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "UITracker",
  deps = [
    ":UITracker_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "UITracker_lib",
  deps = [
    ":UITracker"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Utility_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Utility/Common/Private/ARC/Analyzer/HMDClassAnalyzer.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/Analyzer/HMDTaggedPointerAnalyzer.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/FileWriter/HMDFileErrorDefines.hpp",
    "Heimdallr/Classes/Utility/Common/Private/ARC/FileWriter/HMDFileWriter.hpp",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDAttributesMacro.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDFishhookQueue.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDGCD.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDGCDTimer.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDJSONObjectProtocol.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDMacro.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDOOMLockingDetector.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDPathComplianceTool.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDSimpleBackgroundTask.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDStingerBlocker.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDSwizzle.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSafeArray.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSafeDictionary.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSuspender.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDURLHelper.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUSELForwarder.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUserDefaults.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWPDynamicSafeData/HMDWPDynamicSafeData+ThreadSynchronize.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWPDynamicSafeData/HMDWPDynamicSafeData.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWeakProxy.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSArray+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSArray+HMDSafe.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDAES.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDGzip.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDHTTPQuery.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDImmutableCopy.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDSafe.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSNumber+HMDTypeClassify.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+Attributes.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDAttributes.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDPerformSelector.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDUtilities.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDValidate.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HDMUtility.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HMDSafe.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/UIApplication+HMDUtility.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/hmd_vm_remap_util.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/pthread_extended.h",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDAsyncSafeLinkedList.hpp",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDNumberUtils.h",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDTimeSepc.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/Analyzer/HMDObjectAnalyzer.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/Analyzer/HMDObjectAnalyzerInternal.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/HMDDynamicCall.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/HMDReference.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Utility_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Utility/Common/Public/ARC/HeimdallrUtilities.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/hmd_debug.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDISAHookOptimization.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDJSONable.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDMacroManager.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDPublicMacro.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDUITrackerManagerSceneProtocol.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDUITrackerTool.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/NSArray+HMDTopN.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/NSDate+HMDAccurate.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDAppLaunchTool.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDCPUUtilties.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDFileTool.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDMemoryUsage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Utility_hdrs",
  srcs = [
    "Heimdallr/Classes/Utility/Common/Private/ARC/Analyzer/HMDClassAnalyzer.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/Analyzer/HMDTaggedPointerAnalyzer.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/FileWriter/HMDFileErrorDefines.hpp",
    "Heimdallr/Classes/Utility/Common/Private/ARC/FileWriter/HMDFileWriter.hpp",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDAttributesMacro.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDFishhookQueue.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDGCD.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDGCDTimer.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDJSONObjectProtocol.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDMacro.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDOOMLockingDetector.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDPathComplianceTool.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDSimpleBackgroundTask.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDStingerBlocker.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDSwizzle.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSafeArray.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSafeDictionary.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSuspender.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDURLHelper.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUSELForwarder.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUserDefaults.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWPDynamicSafeData/HMDWPDynamicSafeData+ThreadSynchronize.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWPDynamicSafeData/HMDWPDynamicSafeData.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWeakProxy.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSArray+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSArray+HMDSafe.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDAES.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDGzip.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDHTTPQuery.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDImmutableCopy.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDSafe.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSNumber+HMDTypeClassify.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+Attributes.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDAttributes.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDPerformSelector.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDUtilities.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDValidate.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HDMUtility.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HMDJSON.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HMDSafe.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/UIApplication+HMDUtility.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/hmd_vm_remap_util.h",
    "Heimdallr/Classes/Utility/Common/Private/ARC/pthread_extended.h",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDAsyncSafeLinkedList.hpp",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDNumberUtils.h",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDTimeSepc.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/Analyzer/HMDObjectAnalyzer.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/Analyzer/HMDObjectAnalyzerInternal.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/HMDDynamicCall.h",
    "Heimdallr/Classes/Utility/Common/Private/MRC/HMDReference.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDISAHookOptimization.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDJSONable.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDMacroManager.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDPublicMacro.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDUITrackerManagerSceneProtocol.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDUITrackerTool.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HeimdallrUtilities.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/NSArray+HMDTopN.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/NSDate+HMDAccurate.h",
    "Heimdallr/Classes/Utility/Common/Public/ARC/hmd_debug.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDAppLaunchTool.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDCPUUtilties.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDFileTool.h",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDMemoryUsage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Utility_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDAppLaunchTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDAsyncSafeLinkedList.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDAttributesMacro.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUUtilties.h",
    "pod_support/Headers/Private/Heimdallr/HMDClassAnalyzer.h",
    "pod_support/Headers/Private/Heimdallr/HMDDynamicCall.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileErrorDefines.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDFileTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDFileWriter.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDFishhookQueue.h",
    "pod_support/Headers/Private/Heimdallr/HMDGCD.h",
    "pod_support/Headers/Private/Heimdallr/HMDGCDTimer.h",
    "pod_support/Headers/Private/Heimdallr/HMDISAHookOptimization.h",
    "pod_support/Headers/Private/Heimdallr/HMDJSON.h",
    "pod_support/Headers/Private/Heimdallr/HMDJSONObjectProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDJSONable.h",
    "pod_support/Headers/Private/Heimdallr/HMDMacro.h",
    "pod_support/Headers/Private/Heimdallr/HMDMacroManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryUsage.h",
    "pod_support/Headers/Private/Heimdallr/HMDNumberUtils.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMLockingDetector.h",
    "pod_support/Headers/Private/Heimdallr/HMDObjectAnalyzer.h",
    "pod_support/Headers/Private/Heimdallr/HMDObjectAnalyzerInternal.h",
    "pod_support/Headers/Private/Heimdallr/HMDPathComplianceTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDPublicMacro.h",
    "pod_support/Headers/Private/Heimdallr/HMDReference.h",
    "pod_support/Headers/Private/Heimdallr/HMDSimpleBackgroundTask.h",
    "pod_support/Headers/Private/Heimdallr/HMDStingerBlocker.h",
    "pod_support/Headers/Private/Heimdallr/HMDSwizzle.h",
    "pod_support/Headers/Private/Heimdallr/HMDTaggedPointerAnalyzer.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadSafeArray.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadSafeDictionary.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadSuspender.h",
    "pod_support/Headers/Private/Heimdallr/HMDTimeSepc.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackerManagerSceneProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDUITrackerTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDURLHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDUSELForwarder.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserDefaults.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPDynamicSafeData+ThreadSynchronize.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPDynamicSafeData.h",
    "pod_support/Headers/Private/Heimdallr/HMDWeakProxy.h",
    "pod_support/Headers/Private/Heimdallr/HeimdallrUtilities.h",
    "pod_support/Headers/Private/Heimdallr/NSArray+HMDJSON.h",
    "pod_support/Headers/Private/Heimdallr/NSArray+HMDSafe.h",
    "pod_support/Headers/Private/Heimdallr/NSArray+HMDTopN.h",
    "pod_support/Headers/Private/Heimdallr/NSData+HMDAES.h",
    "pod_support/Headers/Private/Heimdallr/NSData+HMDGzip.h",
    "pod_support/Headers/Private/Heimdallr/NSData+HMDJSON.h",
    "pod_support/Headers/Private/Heimdallr/NSDate+HMDAccurate.h",
    "pod_support/Headers/Private/Heimdallr/NSDictionary+HMDHTTPQuery.h",
    "pod_support/Headers/Private/Heimdallr/NSDictionary+HMDImmutableCopy.h",
    "pod_support/Headers/Private/Heimdallr/NSDictionary+HMDJSON.h",
    "pod_support/Headers/Private/Heimdallr/NSDictionary+HMDSafe.h",
    "pod_support/Headers/Private/Heimdallr/NSNumber+HMDTypeClassify.h",
    "pod_support/Headers/Private/Heimdallr/NSObject+Attributes.h",
    "pod_support/Headers/Private/Heimdallr/NSObject+HMDAttributes.h",
    "pod_support/Headers/Private/Heimdallr/NSObject+HMDPerformSelector.h",
    "pod_support/Headers/Private/Heimdallr/NSObject+HMDUtilities.h",
    "pod_support/Headers/Private/Heimdallr/NSObject+HMDValidate.h",
    "pod_support/Headers/Private/Heimdallr/NSString+HDMUtility.h",
    "pod_support/Headers/Private/Heimdallr/NSString+HMDJSON.h",
    "pod_support/Headers/Private/Heimdallr/NSString+HMDSafe.h",
    "pod_support/Headers/Private/Heimdallr/UIApplication+HMDUtility.h",
    "pod_support/Headers/Private/Heimdallr/hmd_debug.h",
    "pod_support/Headers/Private/Heimdallr/hmd_vm_remap_util.h",
    "pod_support/Headers/Private/Heimdallr/pthread_extended.h",
    "pod_support/Headers/Public/Heimdallr/HMDAppLaunchTool.h",
    "pod_support/Headers/Public/Heimdallr/HMDCPUUtilties.h",
    "pod_support/Headers/Public/Heimdallr/HMDFileTool.h",
    "pod_support/Headers/Public/Heimdallr/HMDISAHookOptimization.h",
    "pod_support/Headers/Public/Heimdallr/HMDJSONable.h",
    "pod_support/Headers/Public/Heimdallr/HMDMacroManager.h",
    "pod_support/Headers/Public/Heimdallr/HMDMemoryUsage.h",
    "pod_support/Headers/Public/Heimdallr/HMDPublicMacro.h",
    "pod_support/Headers/Public/Heimdallr/HMDUITrackerManagerSceneProtocol.h",
    "pod_support/Headers/Public/Heimdallr/HMDUITrackerTool.h",
    "pod_support/Headers/Public/Heimdallr/HeimdallrUtilities.h",
    "pod_support/Headers/Public/Heimdallr/NSArray+HMDTopN.h",
    "pod_support/Headers/Public/Heimdallr/NSDate+HMDAccurate.h",
    "pod_support/Headers/Public/Heimdallr/hmd_debug.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Utility_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Utility_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Utility_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Utility-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Utility-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Utility_srcs",
  srcs = [
    "Heimdallr/Classes/Utility/Common/Public/ARC/HeimdallrUtilities.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/hmd_vm_remap_util.m",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDAppLaunchTool.c",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDAsyncSafeLinkedList.cpp",
    "Heimdallr/Classes/Utility/Common/Private/ARC/Analyzer/HMDClassAnalyzer.c",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDCPUUtilties.c",
    "Heimdallr/Classes/Utility/Common/Private/ARC/FileWriter/HMDFileWriter.mm",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDFishhookQueue.mm",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDGCD.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDGCDTimer.m",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDISAHookOptimization.c",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDISAHookOptimizationAssembly.s",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDMacro.m",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDMacroManager.m",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDNumberUtils.c",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDOOMLockingDetector.c",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDPathComplianceTool.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDSimpleBackgroundTask.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDStingerBlocker.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDSwizzle.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/Analyzer/HMDTaggedPointerAnalyzer.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSafeArray.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSafeDictionary.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDThreadSuspender.mm",
    "Heimdallr/Classes/Utility/Common/Private/C/HMDTimeSepc.c",
    "Heimdallr/Classes/Utility/Common/Public/ARC/HMDUITrackerTool.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDURLHelper.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUSELForwarder.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUSELForwarderAssembly.s",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDUserDefaults.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWeakProxy.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/HMDWPDynamicSafeData/HMDWPDynamicSafeData.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSArray+HMDJSON.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSArray+HMDSafe.m",
    "Heimdallr/Classes/Utility/Common/Public/ARC/NSArray+HMDTopN.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDAES.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDGzip.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSData+HMDJSON.m",
    "Heimdallr/Classes/Utility/Common/Public/ARC/NSDate+HMDAccurate.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDHTTPQuery.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDImmutableCopy.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDJSON.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSDictionary+HMDSafe.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSNumber+HMDTypeClassify.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDAttributes.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDPerformSelector.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDUtilities.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSObject+HMDValidate.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HDMUtility.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HMDJSON.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/NSString+HMDSafe.m",
    "Heimdallr/Classes/Utility/Common/Private/ARC/UIApplication+HMDUtility.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Utility_non_arc_srcs",
  srcs = [
    "Heimdallr/Classes/Utility/Common/Private/MRC/HMDDynamicCall.m",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDFileTool.m",
    "Heimdallr/Classes/Utility/Common/Public/C/HMDMemoryUsage.m",
    "Heimdallr/Classes/Utility/Common/Private/MRC/Analyzer/HMDObjectAnalyzer.m",
    "Heimdallr/Classes/Utility/Common/Private/MRC/Analyzer/HMDObjectAnalyzerInternal.m",
    "Heimdallr/Classes/Utility/Common/Private/MRC/HMDReference.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Utility_oc",
  enable_modules = 1,
  srcs = [
    "Utility_srcs"
  ],
  non_arc_srcs = [
    "Utility_non_arc_srcs"
  ],
  hdrs = [
    "Utility_hdrs"
  ],
  pch = "pod_support/Headers/Private/Utility-prefix.pch",
  sdk_dylibs = [
    "z"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@TTMacroManager//:TTMacroManager_objc_interface",
    "@TTMacroManager//:TTMacroManager_swift_interface",
    ":Utility_objc_interface",
    "@TTMacroManager//:TTMacroManager_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Utility",
  deps = [
    ":Utility_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Utility_lib",
  deps = [
    ":Utility"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDANR_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRRecord.h",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRTracker.h",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRTracker2.h",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDFlameGraphInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDANR_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDANR/Common/Public/HMDANRConfig.h",
    "Heimdallr/Classes/HMDANR/Common/Public/HMDANRMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDANR_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRRecord.h",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRTracker.h",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRTracker2.h",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDFlameGraphInfo.h",
    "Heimdallr/Classes/HMDANR/Common/Public/HMDANRConfig.h",
    "Heimdallr/Classes/HMDANR/Common/Public/HMDANRMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDANR_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDANRConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDANRMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDANRRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDANRTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDANRTracker2.h",
    "pod_support/Headers/Private/Heimdallr/HMDFlameGraphInfo.h",
    "pod_support/Headers/Public/Heimdallr/HMDANRConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDANRMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDANR_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDANR_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDANR_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDANR-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDANR-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDANR_srcs",
  srcs = [
    "Heimdallr/Classes/HMDANR/Common/Public/HMDANRConfig.m",
    "Heimdallr/Classes/HMDANR/Common/Public/HMDANRMonitor.mm",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRRecord.mm",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRTracker.mm",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDANRTracker2.mm",
    "Heimdallr/Classes/HMDANR/Common/Private/HMDFlameGraphInfo.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDANR_oc",
  enable_modules = 1,
  srcs = [
    "HMDANR_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDANR_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDANR-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDANR_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDANR",
  deps = [
    ":HMDANR_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDANR_lib",
  deps = [
    ":HMDANR"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DeviceInfo_private_hdrs",
  srcs = [
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDABTestVids.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDDeviceTool.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDDiskUsage+Private.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+AppInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+AutoTestInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+CustomInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+DeviceInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+SystemInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInjectedInfo+UniqueKey.h",
    "Heimdallr/Classes/DeviceInfo/ToD/Private/HMDInjectedInfo+URLHosts.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DeviceInfo_public_hdrs",
  srcs = [
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDDiskUsage.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+LegacyDBOptimize.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+MovingLine.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+NetMonitorConfig.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+NetworkSchedule.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+PerfOptSwitch.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DeviceInfo_hdrs",
  srcs = [
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDABTestVids.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDDeviceTool.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDDiskUsage+Private.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+AppInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+AutoTestInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+CustomInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+DeviceInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+SystemInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo.h",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInjectedInfo+UniqueKey.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDDiskUsage.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+LegacyDBOptimize.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+MovingLine.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+NetMonitorConfig.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+NetworkSchedule.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+PerfOptSwitch.h",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo.h",
    "Heimdallr/Classes/DeviceInfo/ToD/Private/HMDInjectedInfo+URLHosts.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DeviceInfo_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDABTestVids.h",
    "pod_support/Headers/Private/Heimdallr/HMDDeviceTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDDiskUsage+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDDiskUsage.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo+AppInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo+AutoTestInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo+CustomInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo+DeviceInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo+SystemInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+LegacyDBOptimize.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+MovingLine.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+NetMonitorConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+NetworkSchedule.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+PerfOptSwitch.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+URLHosts.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo+UniqueKey.h",
    "pod_support/Headers/Private/Heimdallr/HMDInjectedInfo.h",
    "pod_support/Headers/Public/Heimdallr/HMDDiskUsage.h",
    "pod_support/Headers/Public/Heimdallr/HMDInjectedInfo+LegacyDBOptimize.h",
    "pod_support/Headers/Public/Heimdallr/HMDInjectedInfo+MovingLine.h",
    "pod_support/Headers/Public/Heimdallr/HMDInjectedInfo+NetMonitorConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDInjectedInfo+NetworkSchedule.h",
    "pod_support/Headers/Public/Heimdallr/HMDInjectedInfo+PerfOptSwitch.h",
    "pod_support/Headers/Public/Heimdallr/HMDInjectedInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "DeviceInfo_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "DeviceInfo_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "DeviceInfo_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_DeviceInfo-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_DeviceInfo-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DeviceInfo_srcs",
  srcs = [
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDABTestVids.c",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDDeviceTool.c",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDDiskUsage.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+AppInfo.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+AutoTestInfo.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+CustomInfo.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+DeviceInfo.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo+SystemInfo.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInfo.m",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+LegacyDBOptimize.m",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+MovingLine.m",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+NetMonitorConfig.m",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+NetworkSchedule.m",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo+PerfOptSwitch.m",
    "Heimdallr/Classes/DeviceInfo/Common/Private/HMDInjectedInfo+UniqueKey.m",
    "Heimdallr/Classes/DeviceInfo/ToD/Private/HMDInjectedInfo+URLHosts.m",
    "Heimdallr/Classes/DeviceInfo/Common/Public/HMDInjectedInfo.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "DeviceInfo_oc",
  enable_modules = 1,
  srcs = [
    "DeviceInfo_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "DeviceInfo_hdrs"
  ],
  pch = "pod_support/Headers/Private/DeviceInfo-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":DeviceInfo_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "DeviceInfo",
  deps = [
    ":DeviceInfo_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "DeviceInfo_lib",
  deps = [
    ":DeviceInfo"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOOMCrash_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDOOMCrash/Common/Private/HMDOOMCrashTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOOMCrash_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashConfig.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashDetector.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashDetectorDelegate.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOOMCrash_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDOOMCrash/Common/Private/HMDOOMCrashTracker.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashConfig.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashDetector.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashDetectorDelegate.h",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOOMCrash_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashDetector.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashDetectorDelegate.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDOOMCrashConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDOOMCrashDetector.h",
    "pod_support/Headers/Public/Heimdallr/HMDOOMCrashDetectorDelegate.h",
    "pod_support/Headers/Public/Heimdallr/HMDOOMCrashRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDOOMCrash_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDOOMCrash_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDOOMCrash_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDOOMCrash-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDOOMCrash-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOOMCrash_srcs",
  srcs = [
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashConfig.m",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashDetector.m",
    "Heimdallr/Classes/HMDOOMCrash/Common/Public/HMDOOMCrashRecord.m",
    "Heimdallr/Classes/HMDOOMCrash/Common/Private/HMDOOMCrashTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDOOMCrash_oc",
  enable_modules = 1,
  srcs = [
    "HMDOOMCrash_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDOOMCrash_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDOOMCrash-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDOOMCrash_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDOOMCrash",
  deps = [
    ":HMDOOMCrash_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDOOMCrash_lib",
  deps = [
    ":HMDOOMCrash"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAPPExitReason_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppExitReasonDetector+LogUpload.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppExitReasonDetector+Private.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppVCPageViewRecord.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDMemoryLogInfo.hpp",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDOOMAppState.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/OOMLog/HMDOOMCrashSDKLog.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAPPExitReason_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAppExitReasonDetector.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAPPExitReasonDetectorProtocol.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAppStateMemoryInfo.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDOOMCrashInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAPPExitReason_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppExitReasonDetector+LogUpload.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppExitReasonDetector+Private.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppVCPageViewRecord.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDMemoryLogInfo.hpp",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDOOMAppState.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/OOMLog/HMDOOMCrashSDKLog.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAPPExitReasonDetectorProtocol.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAppExitReasonDetector.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAppStateMemoryInfo.h",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDOOMCrashInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAPPExitReason_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDAPPExitReasonDetectorProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDAppExitReasonDetector+LogUpload.h",
    "pod_support/Headers/Private/Heimdallr/HMDAppExitReasonDetector+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDAppExitReasonDetector.h",
    "pod_support/Headers/Private/Heimdallr/HMDAppStateMemoryInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDAppVCPageViewRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryLogInfo.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDOOMAppState.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDOOMCrashSDKLog.h",
    "pod_support/Headers/Public/Heimdallr/HMDAPPExitReasonDetectorProtocol.h",
    "pod_support/Headers/Public/Heimdallr/HMDAppExitReasonDetector.h",
    "pod_support/Headers/Public/Heimdallr/HMDAppStateMemoryInfo.h",
    "pod_support/Headers/Public/Heimdallr/HMDOOMCrashInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDAPPExitReason_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDAPPExitReason_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDAPPExitReason_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDAPPExitReason-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDAPPExitReason-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDAPPExitReason_srcs",
  srcs = [
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppExitReasonDetector+LogUpload.mm",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDAppExitReasonDetector.mm",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDAppVCPageViewRecord.m",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDMemoryLogInfo.mm",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/HMDOOMAppState.m",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Public/HMDOOMCrashInfo.m",
    "Heimdallr/Classes/HMDAppExitReasonDetector/Common/Private/OOMLog/HMDOOMCrashSDKLog.c"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDAPPExitReason_oc",
  enable_modules = 1,
  srcs = [
    "HMDAPPExitReason_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDAPPExitReason_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDAPPExitReason-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDAPPExitReason_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDAPPExitReason",
  deps = [
    ":HMDAPPExitReason_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDAPPExitReason_lib",
  deps = [
    ":HMDAPPExitReason"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocOptimizeConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocTracker.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/util/hmd_memory_logger.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/NanoOptimize/hmd_nano_zone_optimize.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment_util.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_mmap_allocator.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_store_rb.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_memory_rbtree.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_mmap_memory_allocator.hpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_user_exception_wrapper.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_virtual_memory_macro.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_slardar_malloc_remap.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_vm_recorder.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_rb.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocOptimizeConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocTracker.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/util/hmd_memory_logger.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/NanoOptimize/hmd_nano_zone_optimize.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment_util.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_mmap_allocator.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_store_rb.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_memory_rbtree.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_mmap_memory_allocator.hpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_user_exception_wrapper.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_virtual_memory_macro.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_slardar_malloc_remap.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_vm_recorder.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_rb.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDSlardarMallocConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDSlardarMallocOptimizeConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDSlardarMallocTracker.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment_header.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment_store_rb.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment_util.h",
    "pod_support/Headers/Private/Heimdallr/hmd_memory_logger.h",
    "pod_support/Headers/Private/Heimdallr/hmd_memory_rbtree.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mmap_allocator.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mmap_memory_allocator.hpp",
    "pod_support/Headers/Private/Heimdallr/hmd_nano_zone_optimize.h",
    "pod_support/Headers/Private/Heimdallr/hmd_slardar_malloc_remap.h",
    "pod_support/Headers/Private/Heimdallr/hmd_user_exception_wrapper.h",
    "pod_support/Headers/Private/Heimdallr/hmd_virtual_address_store_header.h",
    "pod_support/Headers/Private/Heimdallr/hmd_virtual_address_store_rb.h",
    "pod_support/Headers/Private/Heimdallr/hmd_virtual_memory_macro.h",
    "pod_support/Headers/Private/Heimdallr/hmd_vm_recorder.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDSlardarMalloc_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "HMDSlardarMalloc_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDSlardarMalloc-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDSlardarMalloc_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc",
  deps = [
    ":HMDSlardarMalloc_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDSlardarMalloc_lib",
  deps = [
    ":HMDSlardarMalloc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_HMDTracker_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocOptimizeConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocTracker.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/util/hmd_memory_logger.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_HMDTracker_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_HMDTracker_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocOptimizeConfig.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocTracker.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/util/hmd_memory_logger.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_HMDTracker_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDSlardarMallocConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDSlardarMallocOptimizeConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDSlardarMallocTracker.h",
    "pod_support/Headers/Private/Heimdallr/hmd_memory_logger.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_HMDTracker_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_HMDTracker_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDSlardarMalloc_HMDTracker_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc_HMDTracker-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc_HMDTracker-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_HMDTracker_srcs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/util/hmd_memory_logger.mm",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocConfig.m",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/HMDTracker/HMDSlardarMallocTracker.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_HMDTracker_oc",
  enable_modules = 1,
  srcs = [
    "HMDSlardarMalloc_HMDTracker_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDSlardarMalloc_HMDTracker_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDSlardarMalloc_HMDTracker-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDSlardarMalloc_HMDTracker_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_HMDTracker",
  deps = [
    ":HMDSlardarMalloc_HMDTracker_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDSlardarMalloc_HMDTracker_lib",
  deps = [
    ":HMDSlardarMalloc_HMDTracker"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_NanoOptimize_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/NanoOptimize/hmd_nano_zone_optimize.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_NanoOptimize_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_NanoOptimize_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/NanoOptimize/hmd_nano_zone_optimize.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_NanoOptimize_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/hmd_nano_zone_optimize.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_NanoOptimize_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_NanoOptimize_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDSlardarMalloc_NanoOptimize_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc_NanoOptimize-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc_NanoOptimize-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_NanoOptimize_srcs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/NanoOptimize/hmd_nano_zone_optimize.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_NanoOptimize_oc",
  enable_modules = 1,
  srcs = [
    "HMDSlardarMalloc_NanoOptimize_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDSlardarMalloc_NanoOptimize_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDSlardarMalloc_NanoOptimize-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDSlardarMalloc_NanoOptimize_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_NanoOptimize",
  deps = [
    ":HMDSlardarMalloc_NanoOptimize_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDSlardarMalloc_NanoOptimize_lib",
  deps = [
    ":HMDSlardarMalloc_NanoOptimize"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_ScalableOptimize_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment_util.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_mmap_allocator.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_store_rb.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_memory_rbtree.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_mmap_memory_allocator.hpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_user_exception_wrapper.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_virtual_memory_macro.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_slardar_malloc_remap.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_vm_recorder.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_rb.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_ScalableOptimize_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_ScalableOptimize_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment_util.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_mmap_allocator.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_store_rb.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_memory_rbtree.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_mmap_memory_allocator.hpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_user_exception_wrapper.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_virtual_memory_macro.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_slardar_malloc_remap.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_vm_recorder.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_header.h",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_rb.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_ScalableOptimize_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment_header.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment_store_rb.h",
    "pod_support/Headers/Private/Heimdallr/hmd_file_fragment_util.h",
    "pod_support/Headers/Private/Heimdallr/hmd_memory_rbtree.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mmap_allocator.h",
    "pod_support/Headers/Private/Heimdallr/hmd_mmap_memory_allocator.hpp",
    "pod_support/Headers/Private/Heimdallr/hmd_slardar_malloc_remap.h",
    "pod_support/Headers/Private/Heimdallr/hmd_user_exception_wrapper.h",
    "pod_support/Headers/Private/Heimdallr/hmd_virtual_address_store_header.h",
    "pod_support/Headers/Private/Heimdallr/hmd_virtual_address_store_rb.h",
    "pod_support/Headers/Private/Heimdallr/hmd_virtual_memory_macro.h",
    "pod_support/Headers/Private/Heimdallr/hmd_vm_recorder.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_ScalableOptimize_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_ScalableOptimize_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDSlardarMalloc_ScalableOptimize_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc_ScalableOptimize-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSlardarMalloc_ScalableOptimize-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSlardarMalloc_ScalableOptimize_srcs",
  srcs = [
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment.cpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/rbtree/hmd_file_fragment_store_rb.cpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_file_fragment_util.mm",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/file_fragment/hmd_mmap_allocator.cpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_mmap_memory_allocator.cpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_slardar_malloc_remap.cpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/hmd_user_exception_wrapper.m",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/rbtree/hmd_virtual_address_store_rb.cpp",
    "Heimdallr/Classes/HMDSlardarMalloc/Common/Private/ScalableOptimize/vm_remap/hmd_vm_recorder.cpp"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSlardarMalloc_ScalableOptimize_oc",
  enable_modules = 1,
  srcs = [
    "HMDSlardarMalloc_ScalableOptimize_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDSlardarMalloc_ScalableOptimize_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDSlardarMalloc_ScalableOptimize-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDSlardarMalloc_ScalableOptimize_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSlardarMalloc_ScalableOptimize",
  deps = [
    ":HMDSlardarMalloc_ScalableOptimize_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDSlardarMalloc_ScalableOptimize_lib",
  deps = [
    ":HMDSlardarMalloc_ScalableOptimize"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Zombie_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieMonitor+private.h",
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieObject.h",
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieQueue.h",
    "Heimdallr/Classes/Zombie/Common/Private/MRC/HMDZombieHandle.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Zombie_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieDefines.h",
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieMonitor.h",
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Zombie_hdrs",
  srcs = [
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieMonitor+private.h",
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieObject.h",
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieQueue.h",
    "Heimdallr/Classes/Zombie/Common/Private/MRC/HMDZombieHandle.h",
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieDefines.h",
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieMonitor.h",
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Zombie_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDZombieDefines.h",
    "pod_support/Headers/Private/Heimdallr/HMDZombieHandle.h",
    "pod_support/Headers/Private/Heimdallr/HMDZombieMonitor+private.h",
    "pod_support/Headers/Private/Heimdallr/HMDZombieMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDZombieObject.h",
    "pod_support/Headers/Private/Heimdallr/HMDZombieQueue.h",
    "pod_support/Headers/Private/Heimdallr/HMDZombieTrackerConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDZombieDefines.h",
    "pod_support/Headers/Public/Heimdallr/HMDZombieMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDZombieTrackerConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Zombie_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Zombie_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Zombie_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Zombie-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Zombie-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Zombie_srcs",
  srcs = [
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieMonitor.m",
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieObject.m",
    "Heimdallr/Classes/Zombie/Common/Private/ARC/HMDZombieQueue.m",
    "Heimdallr/Classes/Zombie/Common/Public/ARC/HMDZombieTrackerConfig.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Zombie_non_arc_srcs",
  srcs = [
    "Heimdallr/Classes/Zombie/Common/Private/MRC/HMDZombieHandle.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Zombie_oc",
  enable_modules = 1,
  srcs = [
    "Zombie_srcs"
  ],
  non_arc_srcs = [
    "Zombie_non_arc_srcs"
  ],
  hdrs = [
    "Zombie_hdrs"
  ],
  pch = "pod_support/Headers/Private/Zombie-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Zombie_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Zombie",
  deps = [
    ":Zombie_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Zombie_lib",
  deps = [
    ":Zombie"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashCapture_private_hdrs",
  srcs = [
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashArrayAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashContentAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashContentAnalyzeBase.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashDictionaryAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashStringAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashURLAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/DynamicData/HMDCrashException_dynamicData.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/FileDescriptor/HMDCrashException_fileDescriptor.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashException.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashException_Namespace.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashOnceCatch/HMDCrashOnceCatch.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/HMDCrashDetect_Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/CPP/HMDCrashDetectCPP.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Mach/HMDCrashDetectMach.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Shared/HMDCrashDeadLockMonitor.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Shared/HMDCrashDetectShared.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Signal/HMDCrashDetectFatalSignal.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory+Path.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory_LowLevel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/BinaryImage/HMDCrashEnvironmentBinaryImages.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/DynamicData/HMDCrashDynamicData.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/HMDCrashEnviroment.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashAppExitReasonMark.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashKit+Internal.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashReportInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadBackgroundSession/HMDCrashLoadBackgroundSession.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadContext/HMDCLoadContext.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLaunch/HMDCrashLoadLaunch+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLogger/HMDCrashLoadLogger+Path.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLogger/HMDCrashLoadLogger.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadMacro/HMDCrashLoadMacro.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadMeta/HMDCrashLoadMeta.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadModel/HMDCrashLoadModel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadOption/HMDCrashLoadOption+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadProfile/HMDCrashLoadProfile.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadReport/HMDCrashLoadReport+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync_LowLevel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadUtil/HMDCrashLoadUtil.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashInfoLoader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashlogFormatter.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashlogProcessor.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDInvalidJSONLex.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDInvalidThreadsJSONParser.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDJSONToken.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashAddressAnalysis.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashAddressObjectInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashBinaryImage.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashFrameInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashHeaderInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashMetaData.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashModel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashProcessState.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRegisterAnalysis.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRegisters.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRuntimeInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashStackAnalysis.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashStorage.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashThreadInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashVMRegion.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/NSString+HMDCrash.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashEventLogger+URLPathProvider.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashEventLogger.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashUploader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDStandardCrashUploader+URLPathProvider.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDStandardCrashUploader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashAddressAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashAsyncContainer.hpp",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashHeader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashHeader_Public.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashRegionFile.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashVMRegionDescription.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDMachExceptionUtility.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDObjcRuntime.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/hmd_cpp_exception.hpp"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashCapture_public_hdrs",
  srcs = [
    "Heimdallr/Classes/CrashCapture/Common/Public/Detect/HMDCrashDetect.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Directory/HMDCrashAppGroupURL.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Directory/HMDCrashDirectory.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/DynamicSavedFiles/HMDCrashDynamicSavedFiles.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/ExtraDynamic/HMDCrashExtraDynamicData.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/GameScriptStack/HMDCrashGameScriptStack.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/HMDCrashKit.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/HMDCrashKitSwitch.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadLaunch.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadOption+Definition.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadOption.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadReport.h",
    "Heimdallr/Classes/CrashCapture/ToD/Public/HMDCrashCallback.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashCapture_hdrs",
  srcs = [
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashArrayAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashContentAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashContentAnalyzeBase.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashDictionaryAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashStringAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashURLAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/DynamicData/HMDCrashException_dynamicData.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/FileDescriptor/HMDCrashException_fileDescriptor.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashException.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashException_Namespace.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashOnceCatch/HMDCrashOnceCatch.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/HMDCrashDetect_Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/CPP/HMDCrashDetectCPP.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Mach/HMDCrashDetectMach.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Shared/HMDCrashDeadLockMonitor.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Shared/HMDCrashDetectShared.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Signal/HMDCrashDetectFatalSignal.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory+Path.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory_LowLevel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/BinaryImage/HMDCrashEnvironmentBinaryImages.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/DynamicData/HMDCrashDynamicData.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/HMDCrashEnviroment.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashAppExitReasonMark.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashKit+Internal.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashReportInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadBackgroundSession/HMDCrashLoadBackgroundSession.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadContext/HMDCLoadContext.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLaunch/HMDCrashLoadLaunch+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLogger/HMDCrashLoadLogger+Path.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLogger/HMDCrashLoadLogger.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadMacro/HMDCrashLoadMacro.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadMeta/HMDCrashLoadMeta.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadModel/HMDCrashLoadModel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadOption/HMDCrashLoadOption+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadProfile/HMDCrashLoadProfile.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadReport/HMDCrashLoadReport+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync+Private.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync_LowLevel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadUtil/HMDCrashLoadUtil.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashInfoLoader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashlogFormatter.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashlogProcessor.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDInvalidJSONLex.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDInvalidThreadsJSONParser.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDJSONToken.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashAddressAnalysis.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashAddressObjectInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashBinaryImage.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashFrameInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashHeaderInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashMetaData.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashModel.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashProcessState.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRegisterAnalysis.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRegisters.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRuntimeInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashStackAnalysis.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashStorage.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashThreadInfo.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashVMRegion.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/NSString+HMDCrash.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashEventLogger+URLPathProvider.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashEventLogger.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashUploader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDStandardCrashUploader+URLPathProvider.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDStandardCrashUploader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashAddressAnalyze.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashAsyncContainer.hpp",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashHeader.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashHeader_Public.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashRegionFile.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashVMRegionDescription.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDMachExceptionUtility.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDObjcRuntime.h",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/hmd_cpp_exception.hpp",
    "Heimdallr/Classes/CrashCapture/Common/Public/Detect/HMDCrashDetect.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Directory/HMDCrashAppGroupURL.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Directory/HMDCrashDirectory.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/DynamicSavedFiles/HMDCrashDynamicSavedFiles.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/ExtraDynamic/HMDCrashExtraDynamicData.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/GameScriptStack/HMDCrashGameScriptStack.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/HMDCrashKit.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/HMDCrashKitSwitch.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadLaunch.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadOption+Definition.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadOption.h",
    "Heimdallr/Classes/CrashCapture/Common/Public/LoadLaunch/HMDCrashLoadReport.h",
    "Heimdallr/Classes/CrashCapture/ToD/Public/HMDCrashCallback.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashCapture_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCLoadContext.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAddressAnalysis.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAddressAnalyze.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAddressObjectInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAppExitReasonMark.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAppGroupURL.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashArrayAnalyze.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashAsyncContainer.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDCrashBinaryImage.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashCallback.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashContentAnalyze.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashContentAnalyzeBase.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDeadLockMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDetect.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDetectCPP.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDetectFatalSignal.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDetectMach.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDetectShared.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDetect_Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDictionaryAnalyze.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDirectory+Path.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDirectory+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDirectory.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDirectory_LowLevel.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDynamicData.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDynamicSavedFiles.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashEnviroment.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashEnvironmentBinaryImages.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashEventLogger+URLPathProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashEventLogger.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashException.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashException_Namespace.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashException_dynamicData.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashException_fileDescriptor.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashExtraDynamicData.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashFrameInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashGameScriptStack.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashHeader.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashHeaderInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashHeader_Public.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashInfoLoader.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashKit+Internal.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashKit.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashKitSwitch.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadBackgroundSession.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadLaunch+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadLaunch.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadLogger+Path.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadLogger.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadMacro.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadMeta.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadModel.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadOption+Definition.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadOption+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadOption.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadProfile.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadReport+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadSync+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadSync.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadSync_LowLevel.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashLoadUtil.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashMetaData.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashModel.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashOnceCatch.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashProcessState.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashRegionFile.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashRegisterAnalysis.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashRegisters.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashReportInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashRuntimeInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashStackAnalysis.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashStorage.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashStringAnalyze.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashThreadInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashURLAnalyze.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashUploader.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashVMRegion.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashVMRegionDescription.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashlogFormatter.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashlogProcessor.h",
    "pod_support/Headers/Private/Heimdallr/HMDInvalidJSONLex.h",
    "pod_support/Headers/Private/Heimdallr/HMDInvalidThreadsJSONParser.h",
    "pod_support/Headers/Private/Heimdallr/HMDJSONToken.h",
    "pod_support/Headers/Private/Heimdallr/HMDMachExceptionUtility.h",
    "pod_support/Headers/Private/Heimdallr/HMDObjcRuntime.h",
    "pod_support/Headers/Private/Heimdallr/HMDStandardCrashUploader+URLPathProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDStandardCrashUploader.h",
    "pod_support/Headers/Private/Heimdallr/NSString+HMDCrash.h",
    "pod_support/Headers/Private/Heimdallr/hmd_cpp_exception.hpp",
    "pod_support/Headers/Public/Heimdallr/HMDCrashAppGroupURL.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashCallback.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashDetect.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashDirectory.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashDynamicSavedFiles.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashExtraDynamicData.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashGameScriptStack.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashKit.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashKitSwitch.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashLoadLaunch.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashLoadOption+Definition.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashLoadOption.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashLoadReport.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CrashCapture_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrashCapture_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CrashCapture_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_CrashCapture-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_CrashCapture-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashCapture_srcs",
  srcs = [
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/hmd_cpp_exception.cpp",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadContext/HMDCLoadContext.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashAddressAnalysis.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashAddressAnalyze.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashAddressObjectInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashAppExitReasonMark.c",
    "Heimdallr/Classes/CrashCapture/Common/Public/Directory/HMDCrashAppGroupURL.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashArrayAnalyze.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashAsyncContainer.cpp",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashBinaryImage.m",
    "Heimdallr/Classes/CrashCapture/ToD/Public/HMDCrashCallback.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashContentAnalyze.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashContentAnalyzeBase.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Shared/HMDCrashDeadLockMonitor.c",
    "Heimdallr/Classes/CrashCapture/Common/Public/Detect/HMDCrashDetect.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/CPP/HMDCrashDetectCPP.mm",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/CPP/HMDCrashDetectCPPAssembly.s",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Signal/HMDCrashDetectFatalSignal.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Signal/HMDCrashDetectFatalSignalAssembly.s",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Mach/HMDCrashDetectMach.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Internal/Shared/HMDCrashDetectShared.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashDictionaryAnalyze.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Directory/HMDCrashDirectory.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/DynamicData/HMDCrashDynamicData.c",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/DynamicSavedFiles/HMDCrashDynamicSavedFiles.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/HMDCrashEnviroment.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Environment/BinaryImage/HMDCrashEnvironmentBinaryImages.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashEventLogger+URLPathProvider.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashEventLogger.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashException.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/DynamicData/HMDCrashException_dynamicData.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/FileDescriptor/HMDCrashException_fileDescriptor.m",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/ExtraDynamic/HMDCrashExtraDynamicData.cpp",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashFrameInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Public/Environment/GameScriptStack/HMDCrashGameScriptStack.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashHeaderInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashInfoLoader.m",
    "Heimdallr/Classes/CrashCapture/Common/Public/HMDCrashKit.m",
    "Heimdallr/Classes/CrashCapture/Common/Public/HMDCrashKitSwitch.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadBackgroundSession/HMDCrashLoadBackgroundSession.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLaunch/HMDCrashLoadLaunch.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadLogger/HMDCrashLoadLogger.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadMeta/HMDCrashLoadMeta.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadModel/HMDCrashLoadModel.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadOption/HMDCrashLoadOption.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadProfile/HMDCrashLoadProfile.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadReport/HMDCrashLoadReport.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadSync/HMDCrashLoadSync.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/LoadLaunch/HMDCrashLoadUtil/HMDCrashLoadUtil.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashlogFormatter.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDCrashlogProcessor.mm",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashMetaData.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashModel.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Detect/Exception/HMDCrashOnceCatch/HMDCrashOnceCatch.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashProcessState.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashRegionFile.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRegisterAnalysis.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRegisters.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/HMDCrashReportInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashRuntimeInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashStackAnalysis.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashStorage.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashStringAnalyze.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashThreadInfo.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDCrashUploader.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/Exception/HMDCrashContentAnalyze/HMDCrashURLAnalyze.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/HMDCrashVMRegion.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDCrashVMRegionDescription.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDInvalidJSONLex.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDInvalidThreadsJSONParser.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/HMDJSONToken.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDMachExceptionUtility.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Utils/HMDObjcRuntime.c",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDStandardCrashUploader+URLPathProvider.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Upload/HMDStandardCrashUploader.m",
    "Heimdallr/Classes/CrashCapture/Common/Private/HMDCrashKit/Process/Model/NSString+HMDCrash.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrashCapture_oc",
  enable_modules = 1,
  srcs = [
    "CrashCapture_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CrashCapture_hdrs"
  ],
  pch = "pod_support/Headers/Private/CrashCapture-prefix.pch",
  sdk_dylibs = [
    "c++abi"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    ":CrashCapture_objc_interface",
    "@BDFishhook//:BDFishhook_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CrashCapture",
  deps = [
    ":CrashCapture_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CrashCapture_lib",
  deps = [
    ":CrashCapture"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OtherSDKSignal_private_hdrs",
  srcs = [
    "Heimdallr/Classes/OtherSDKSignal/Common/Private/Signal/HMDOtherSDKSignal+Private.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OtherSDKSignal_public_hdrs",
  srcs = [
    "Heimdallr/Classes/OtherSDKSignal/Common/Public/Signal/HMDOtherSDKSignal.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OtherSDKSignal_hdrs",
  srcs = [
    "Heimdallr/Classes/OtherSDKSignal/Common/Private/Signal/HMDOtherSDKSignal+Private.h",
    "Heimdallr/Classes/OtherSDKSignal/Common/Public/Signal/HMDOtherSDKSignal.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OtherSDKSignal_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "OtherSDKSignal_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "OtherSDKSignal_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "OtherSDKSignal_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_OtherSDKSignal-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_OtherSDKSignal-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OtherSDKSignal_srcs",
  srcs = [
    "Heimdallr/Classes/OtherSDKSignal/Common/Private/Signal/HMDOtherSDKSignal.c",
    "Heimdallr/Classes/OtherSDKSignal/Common/Private/LiveKeeper/HMDOtherSignalLiveKeeper.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "OtherSDKSignal_oc",
  enable_modules = 1,
  srcs = [
    "OtherSDKSignal_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "OtherSDKSignal_hdrs"
  ],
  pch = "pod_support/Headers/Private/OtherSDKSignal-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":OtherSDKSignal_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "OtherSDKSignal",
  deps = [
    ":OtherSDKSignal_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "OtherSDKSignal_lib",
  deps = [
    ":OtherSDKSignal"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashDetector_private_hdrs",
  srcs = [
    "Heimdallr/Classes/CrashDetector/Common/Private/HMDCrashDynamicDataProvider.h",
    "Heimdallr/Classes/CrashDetector/ToD/Private/HMDCrashURLHostProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashDetector_public_hdrs",
  srcs = [
    "Heimdallr/Classes/CrashDetector/Common/Public/Extension/HMDExtensionCrashTracker.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDBDMatrixPortable.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashConfig.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashRecord.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashDetector_hdrs",
  srcs = [
    "Heimdallr/Classes/CrashDetector/Common/Private/HMDCrashDynamicDataProvider.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/Extension/HMDExtensionCrashTracker.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDBDMatrixPortable.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashConfig.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashRecord.h",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashTracker.h",
    "Heimdallr/Classes/CrashDetector/ToD/Private/HMDCrashURLHostProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashDetector_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDBDMatrixPortable.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashDynamicDataProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashURLHostProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDExtensionCrashTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDBDMatrixPortable.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDExtensionCrashTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CrashDetector_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrashDetector_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CrashDetector_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_CrashDetector-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_CrashDetector-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrashDetector_srcs",
  srcs = [
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDBDMatrixPortable.m",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashConfig.m",
    "Heimdallr/Classes/CrashDetector/Common/Private/HMDCrashDynamicDataProvider.m",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashRecord.mm",
    "Heimdallr/Classes/CrashDetector/Common/Public/HMDCrashTracker.mm",
    "Heimdallr/Classes/CrashDetector/ToD/Private/HMDCrashURLHostProvider.m",
    "Heimdallr/Classes/CrashDetector/Common/Public/Extension/HMDExtensionCrashTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrashDetector_oc",
  enable_modules = 1,
  srcs = [
    "CrashDetector_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CrashDetector_hdrs"
  ],
  pch = "pod_support/Headers/Private/CrashDetector-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":CrashDetector_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CrashDetector",
  deps = [
    ":CrashDetector_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CrashDetector_lib",
  deps = [
    ":CrashDetector"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTNet_private_hdrs",
  srcs = [
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetHelper.h",
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetManager.h",
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetQualityHelper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTNet_public_hdrs",
  srcs = [
    "Heimdallr/Classes/TTNet/Common/Public/HMDTTNetMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTNet_hdrs",
  srcs = [
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetHelper.h",
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetManager.h",
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetQualityHelper.h",
    "Heimdallr/Classes/TTNet/Common/Public/HMDTTNetMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTNet_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDTTNetHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTNetManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTNetMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTNetQualityHelper.h",
    "pod_support/Headers/Public/Heimdallr/HMDTTNetMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TTNet_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TTNet_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "TTNet_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_TTNet-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_TTNet-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "TTNet_srcs",
  srcs = [
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetHelper.m",
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetManager.m",
    "Heimdallr/Classes/TTNet/Common/Public/HMDTTNetMonitor.mm",
    "Heimdallr/Classes/TTNet/Common/Private/HMDTTNetQualityHelper.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "TTNet_oc",
  enable_modules = 1,
  srcs = [
    "TTNet_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "TTNet_hdrs"
  ],
  pch = "pod_support/Headers/Private/TTNet-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDNetworkTag//:BDNetworkTag_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_objc_interface",
    "@BDNetworkTag//:BDNetworkTag_swift_interface",
    "@TTNetworkManager//:TTNetworkManager_swift_interface",
    ":TTNet_objc_interface",
    "@BDNetworkTag//:BDNetworkTag_module_map",
    "@TTNetworkManager//:TTNetworkManager_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "TTNet",
  deps = [
    ":TTNet_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "TTNet_lib",
  deps = [
    ":TTNet"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDURLProtocolTracker_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLCacheManager+Private.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLProtocol+Entry.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLProtocolManager.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLCache+HMDCustomCache.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLProtocol+HMD.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLRequest+HMDURLProtocol.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLSessionConfiguration+HMDURLProtocol.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLSessionTask+HMDURLProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDURLProtocolTracker_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Public/HMDURLCacheManager.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Public/HMDURLProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDURLProtocolTracker_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLCacheManager+Private.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLProtocol+Entry.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLProtocolManager.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLCache+HMDCustomCache.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLProtocol+HMD.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLRequest+HMDURLProtocol.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLSessionConfiguration+HMDURLProtocol.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLSessionTask+HMDURLProtocol.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Public/HMDURLCacheManager.h",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Public/HMDURLProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDURLProtocolTracker_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDURLProtocolTracker_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDURLProtocolTracker_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDURLProtocolTracker_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDURLProtocolTracker-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDURLProtocolTracker-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDURLProtocolTracker_srcs",
  srcs = [
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Public/HMDURLCacheManager.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLProtocol+Entry.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Public/HMDURLProtocol.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/HMDURLProtocolManager.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLCache+HMDCustomCache.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLProtocol+HMD.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLRequest+HMDURLProtocol.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLSessionConfiguration+HMDURLProtocol.m",
    "Heimdallr/Classes/HMDURLProtocolTracker/Common/Private/NSURLSessionTask+HMDURLProtocol.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDURLProtocolTracker_oc",
  enable_modules = 1,
  srcs = [
    "HMDURLProtocolTracker_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDURLProtocolTracker_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDURLProtocolTracker-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDURLProtocolTracker_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDURLProtocolTracker",
  deps = [
    ":HMDURLProtocolTracker_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDURLProtocolTracker_lib",
  deps = [
    ":HMDURLProtocolTracker"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWebViewMonitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDWebViewMonitor/Common/Private/HMDRequestDecorator.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWebViewMonitor_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDWebViewMonitor/Common/Public/HMDWebViewMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWebViewMonitor_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDWebViewMonitor/Common/Private/HMDRequestDecorator.h",
    "Heimdallr/Classes/HMDWebViewMonitor/Common/Public/HMDWebViewMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWebViewMonitor_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDWebViewMonitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDWebViewMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDWebViewMonitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDWebViewMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDWebViewMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWebViewMonitor_srcs",
  srcs = [
    "Heimdallr/Classes/HMDWebViewMonitor/Common/Private/HMDRequestDecorator.m",
    "Heimdallr/Classes/HMDWebViewMonitor/Common/Public/HMDWebViewMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDWebViewMonitor_oc",
  enable_modules = 1,
  srcs = [
    "HMDWebViewMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDWebViewMonitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDWebViewMonitor-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDWebViewMonitor_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDWebViewMonitor",
  deps = [
    ":HMDWebViewMonitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDWebViewMonitor_lib",
  deps = [
    ":HMDWebViewMonitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Protect_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Protect/Common/Private/ARC/Exception/HMDExceptionRecord.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Exception/HMDExceptionTracker.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/HMDProtect_Private.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/HMDProtector+Private.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVC/HMDProtectKVC.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVO/HMDKVOPair.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVO/HMDProtectKVO.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/NSAssert/HMDProtectNSAssert.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Nano/HMDProtectNano.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDNotificationCenter.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDNotificationConnection.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDProtectNSNotification.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/UnrecognizedSelector/HMDProtectUnrecognizedSelector.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/UserDefaults/HMDProtectUserDefaults.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Weak/HMDWeakRetainDeallocating.h",
    "Heimdallr/Classes/Protect/Common/Private/MRC/Containers/HMDProtectContainerProtocol.h",
    "Heimdallr/Classes/Protect/Common/Private/MRC/Containers/HMDProtectContainers.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Protect_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Protect/Common/Public/ARC/Exception/HMDExceptionTrackerConfig.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectCapture.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectDefine.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectFixLibdispatch.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtector.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Protect_hdrs",
  srcs = [
    "Heimdallr/Classes/Protect/Common/Private/ARC/Exception/HMDExceptionRecord.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Exception/HMDExceptionTracker.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/HMDProtect_Private.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/HMDProtector+Private.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVC/HMDProtectKVC.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVO/HMDKVOPair.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVO/HMDProtectKVO.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/NSAssert/HMDProtectNSAssert.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Nano/HMDProtectNano.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDNotificationCenter.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDNotificationConnection.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDProtectNSNotification.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/UnrecognizedSelector/HMDProtectUnrecognizedSelector.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/UserDefaults/HMDProtectUserDefaults.h",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Weak/HMDWeakRetainDeallocating.h",
    "Heimdallr/Classes/Protect/Common/Private/MRC/Containers/HMDProtectContainerProtocol.h",
    "Heimdallr/Classes/Protect/Common/Private/MRC/Containers/HMDProtectContainers.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/Exception/HMDExceptionTrackerConfig.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectCapture.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectDefine.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectFixLibdispatch.h",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtector.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Protect_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDExceptionRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionTrackerConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDKVOPair.h",
    "pod_support/Headers/Private/Heimdallr/HMDNotificationCenter.h",
    "pod_support/Headers/Private/Heimdallr/HMDNotificationConnection.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectCapture.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectContainerProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectContainers.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectDefine.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectFixLibdispatch.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectKVC.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectKVO.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectNSAssert.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectNSNotification.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectNano.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectUnrecognizedSelector.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtectUserDefaults.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtect_Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtector+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDProtector.h",
    "pod_support/Headers/Private/Heimdallr/HMDWeakRetainDeallocating.h",
    "pod_support/Headers/Public/Heimdallr/HMDExceptionTrackerConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDProtectCapture.h",
    "pod_support/Headers/Public/Heimdallr/HMDProtectDefine.h",
    "pod_support/Headers/Public/Heimdallr/HMDProtectFixLibdispatch.h",
    "pod_support/Headers/Public/Heimdallr/HMDProtector.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Protect_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Protect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Protect_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Protect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Protect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Protect_srcs",
  srcs = [
    "Heimdallr/Classes/Protect/Common/Private/ARC/Exception/HMDExceptionRecord.mm",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Exception/HMDExceptionTracker.mm",
    "Heimdallr/Classes/Protect/Common/Public/ARC/Exception/HMDExceptionTrackerConfig.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVO/HMDKVOPair.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDNotificationCenter.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDNotificationConnection.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/HMDProtect_Private.m",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectCapture.m",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtectFixLibdispatch.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVC/HMDProtectKVC.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/KVO/HMDProtectKVO.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Nano/HMDProtectNano.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/NSAssert/HMDProtectNSAssert.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Notification/HMDProtectNSNotification.m",
    "Heimdallr/Classes/Protect/Common/Public/ARC/HMDProtector.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/UnrecognizedSelector/HMDProtectUnrecognizedSelector.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/UserDefaults/HMDProtectUserDefaults.m",
    "Heimdallr/Classes/Protect/Common/Private/ARC/Weak/HMDWeakRetainDeallocating.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Protect_non_arc_srcs",
  srcs = [
    "Heimdallr/Classes/Protect/Common/Private/MRC/Containers/HMDProtectContainers.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Protect_oc",
  enable_modules = 1,
  srcs = [
    "Protect_srcs"
  ],
  non_arc_srcs = [
    "Protect_non_arc_srcs"
  ],
  hdrs = [
    "Protect_hdrs"
  ],
  pch = "pod_support/Headers/Private/Protect-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Protect_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Protect",
  deps = [
    ":Protect_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Protect_lib",
  deps = [
    ":Protect"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ProtectCustomCatch_private_hdrs",
  srcs = [
    "Heimdallr/Classes/ProtectCustomCatch/Common/Private/HMDProtectCatch.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ProtectCustomCatch_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ProtectCustomCatch_hdrs",
  srcs = [
    "Heimdallr/Classes/ProtectCustomCatch/Common/Private/HMDProtectCatch.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ProtectCustomCatch_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDProtectCatch.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ProtectCustomCatch_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ProtectCustomCatch_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "ProtectCustomCatch_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_ProtectCustomCatch-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_ProtectCustomCatch-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ProtectCustomCatch_srcs",
  srcs = [
    "Heimdallr/Classes/ProtectCustomCatch/Common/Private/HMDProtectCatch.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ProtectCustomCatch_oc",
  enable_modules = 1,
  srcs = [
    "ProtectCustomCatch_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "ProtectCustomCatch_hdrs"
  ],
  pch = "pod_support/Headers/Private/ProtectCustomCatch-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Stinger//:Stinger_objc_interface",
    "@Stinger//:Stinger_swift_interface",
    ":ProtectCustomCatch_objc_interface",
    "@Stinger//:Stinger_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ProtectCustomCatch",
  deps = [
    ":ProtectCustomCatch_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "ProtectCustomCatch_lib",
  deps = [
    ":ProtectCustomCatch"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Log_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Log/Common/Private/HMDBacktraceLog.h",
    "Heimdallr/Classes/Log/Common/Private/HMDHeaderLog.h",
    "Heimdallr/Classes/Log/Common/Private/HMDImageLog.h",
    "Heimdallr/Classes/Log/Common/Private/hmd_apple_backtrace_log.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Log_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Log/Common/Public/HMDAppleBacktracesLog.h",
    "Heimdallr/Classes/Log/Common/Public/HMDAppleBacktracesParameter.h",
    "Heimdallr/Classes/Log/Common/Public/HMDLog.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Log_hdrs",
  srcs = [
    "Heimdallr/Classes/Log/Common/Private/HMDBacktraceLog.h",
    "Heimdallr/Classes/Log/Common/Private/HMDHeaderLog.h",
    "Heimdallr/Classes/Log/Common/Private/HMDImageLog.h",
    "Heimdallr/Classes/Log/Common/Private/hmd_apple_backtrace_log.h",
    "Heimdallr/Classes/Log/Common/Public/HMDAppleBacktracesLog.h",
    "Heimdallr/Classes/Log/Common/Public/HMDAppleBacktracesParameter.h",
    "Heimdallr/Classes/Log/Common/Public/HMDLog.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Log_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDAppleBacktracesLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDAppleBacktracesParameter.h",
    "pod_support/Headers/Private/Heimdallr/HMDBacktraceLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDHeaderLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDImageLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDLog.h",
    "pod_support/Headers/Private/Heimdallr/hmd_apple_backtrace_log.h",
    "pod_support/Headers/Public/Heimdallr/HMDAppleBacktracesLog.h",
    "pod_support/Headers/Public/Heimdallr/HMDAppleBacktracesParameter.h",
    "pod_support/Headers/Public/Heimdallr/HMDLog.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Log_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Log_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Log_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Log-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Log-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Log_srcs",
  srcs = [
    "Heimdallr/Classes/Log/Common/Private/hmd_apple_backtrace_log.mm",
    "Heimdallr/Classes/Log/Common/Public/HMDAppleBacktracesLog.m",
    "Heimdallr/Classes/Log/Common/Public/HMDAppleBacktracesParameter.m",
    "Heimdallr/Classes/Log/Common/Private/HMDBacktraceLog.m",
    "Heimdallr/Classes/Log/Common/Private/HMDHeaderLog.mm",
    "Heimdallr/Classes/Log/Common/Private/HMDImageLog.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Log_oc",
  enable_modules = 1,
  srcs = [
    "Log_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Log_hdrs"
  ],
  pch = "pod_support/Headers/Private/Log-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Log_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Log",
  deps = [
    ":Log_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Log_lib",
  deps = [
    ":Log"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
apple_resource_group(
  name = "Core_resource_group",
  resources = [
    ":Core_resource_group_provider"
  ],
  visibility = [
    "//visibility:public"
  ]
)
resource_provider(
  name = "Core_resource_group_provider",
  resources = [
    "Heimdallr/Assets/Core/Heimdallr.plist"
  ],
  deps = [
    ":Heimdallr_Core_script_0"
  ]
)
filegroup(
  name = "Core_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Core/Common/Private/HMDExcludeModule/HMDExcludeModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDExcludeModule/HMDExcludeModuleHelper.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDBaseModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDExceptionModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasCounter.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasHelper.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasManager.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasNetworkManager.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHighPriorityModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDModuleProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDOpenTracingModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDPerformanceModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDUserExceptionModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDInspector/HMDDiskSpaceDistribution.h",
    "Heimdallr/Classes/Core/Common/Private/HMDInspector/HMDInspector.h",
    "Heimdallr/Classes/Core/Common/Private/HMDModuleCallbackPair/HMDModuleCallbackPair.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceContext.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceProtocol/HMDEvilMethodServiceProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceProtocol/HMDFrameDropServiceProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceProtocol/HMDTTMonitorServiceProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContextMainThreadDispatch/HMDServiceContextMainThreadDispatch.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+Cleanup.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+DebugReal.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+Private.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+SafeMode.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+ExternalClean.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+ManualControl.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+ModuleCallback.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+RoleStateChange.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr.h",
    "Heimdallr/Classes/Core/Common/Public/HeimdallrLocalModule.h",
    "Heimdallr/Classes/Core/Common/Public/HeimdallrModule.h",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTracker.h",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTrackerConfig.h",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTrackerRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [
    "Heimdallr/Classes/Core/Common/Private/HMDExcludeModule/HMDExcludeModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDExcludeModule/HMDExcludeModuleHelper.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDBaseModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDExceptionModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasCounter.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasHelper.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasManager.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasNetworkManager.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHighPriorityModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDModuleProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDOpenTracingModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDPerformanceModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDUserExceptionModule.h",
    "Heimdallr/Classes/Core/Common/Private/HMDInspector/HMDDiskSpaceDistribution.h",
    "Heimdallr/Classes/Core/Common/Private/HMDInspector/HMDInspector.h",
    "Heimdallr/Classes/Core/Common/Private/HMDModuleCallbackPair/HMDModuleCallbackPair.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceContext.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceProtocol/HMDEvilMethodServiceProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceProtocol/HMDFrameDropServiceProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceProtocol/HMDTTMonitorServiceProtocol.h",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContextMainThreadDispatch/HMDServiceContextMainThreadDispatch.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+Cleanup.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+DebugReal.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+Private.h",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+SafeMode.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+ExternalClean.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+ManualControl.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+ModuleCallback.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr+RoleStateChange.h",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr.h",
    "Heimdallr/Classes/Core/Common/Public/HeimdallrLocalModule.h",
    "Heimdallr/Classes/Core/Common/Public/HeimdallrModule.h",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTracker.h",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTrackerConfig.h",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTrackerRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDBaseModule.h",
    "pod_support/Headers/Private/Heimdallr/HMDDiskSpaceDistribution.h",
    "pod_support/Headers/Private/Heimdallr/HMDEvilMethodServiceProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDExceptionModule.h",
    "pod_support/Headers/Private/Heimdallr/HMDExcludeModule.h",
    "pod_support/Headers/Private/Heimdallr/HMDExcludeModuleHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDFrameDropServiceProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDHermasCounter.h",
    "pod_support/Headers/Private/Heimdallr/HMDHermasHelper.h",
    "pod_support/Headers/Private/Heimdallr/HMDHermasManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDHermasNetworkManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDHighPriorityModule.h",
    "pod_support/Headers/Private/Heimdallr/HMDInspector.h",
    "pod_support/Headers/Private/Heimdallr/HMDModuleCallbackPair.h",
    "pod_support/Headers/Private/Heimdallr/HMDModuleProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDOpenTracingModule.h",
    "pod_support/Headers/Private/Heimdallr/HMDPerformanceModule.h",
    "pod_support/Headers/Private/Heimdallr/HMDServiceContext.h",
    "pod_support/Headers/Private/Heimdallr/HMDServiceContextMainThreadDispatch.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTMonitorServiceProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDTrackerConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDTrackerRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionModule.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+Cleanup.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+DebugReal.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+ExternalClean.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+ManualControl.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+ModuleCallback.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+Private.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+RoleStateChange.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr+SafeMode.h",
    "pod_support/Headers/Private/Heimdallr/Heimdallr.h",
    "pod_support/Headers/Private/Heimdallr/HeimdallrLocalModule.h",
    "pod_support/Headers/Private/Heimdallr/HeimdallrModule.h",
    "pod_support/Headers/Public/Heimdallr/HMDTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDTrackerConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDTrackerRecord.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr+ExternalClean.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr+ManualControl.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr+ModuleCallback.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr+RoleStateChange.h",
    "pod_support/Headers/Public/Heimdallr/Heimdallr.h",
    "pod_support/Headers/Public/Heimdallr/HeimdallrLocalModule.h",
    "pod_support/Headers/Public/Heimdallr/HeimdallrModule.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_srcs",
  srcs = [
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+Cleanup.m",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+DebugReal.m",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+ExternalClean.m",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+RoleStateChange.m",
    "Heimdallr/Classes/Core/Common/Private/Heimdallr+SafeMode.m",
    "Heimdallr/Classes/Core/Common/Public/Heimdallr.m",
    "Heimdallr/Classes/Core/Common/Public/HeimdallrModule.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDBaseModule.m",
    "Heimdallr/Classes/Core/Common/Private/HMDInspector/HMDDiskSpaceDistribution.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDExceptionModule.m",
    "Heimdallr/Classes/Core/Common/Private/HMDExcludeModule/HMDExcludeModuleHelper.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasCounter.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasHelper.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasManager.mm",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHermasNetworkManager.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDHighPriorityModule.m",
    "Heimdallr/Classes/Core/Common/Private/HMDInspector/HMDInspector.m",
    "Heimdallr/Classes/Core/Common/Private/HMDModuleCallbackPair/HMDModuleCallbackPair.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDOpenTracingModule.m",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDPerformanceModule.m",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContext/HMDServiceContext.m",
    "Heimdallr/Classes/Core/Common/Private/HMDServiceContextMainThreadDispatch/HMDServiceContextMainThreadDispatch.m",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTracker.mm",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTrackerConfig.m",
    "Heimdallr/Classes/Core/Common/Public/Tracker/HMDTrackerRecord.mm",
    "Heimdallr/Classes/Core/Common/Private/HMDHermas/HMDUserExceptionModule.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [
    "Core_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "pod_support/Headers/Private/Core-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Hermas//:Hermas_objc_interface",
    "@TTReachability//:TTReachability_objc_interface",
    "@Hermas//:Hermas_swift_interface",
    "@TTReachability//:TTReachability_swift_interface",
    ":Heimdallr_Core_script_0",
    ":Core_objc_interface",
    "@Hermas//:Hermas_module_map",
    "@TTReachability//:TTReachability_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  data = [
    ":Core_resource_group"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UserException_private_hdrs",
  srcs = [
    "Heimdallr/Classes/UserException/Common/Private/HMDUserExceptionRecord.h",
    "Heimdallr/Classes/UserException/ToD/Private/HMDUserExceptionErrorDefinition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UserException_public_hdrs",
  srcs = [
    "Heimdallr/Classes/UserException/Common/Public/HMDAddressUnit.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionConfig.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionParameter.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UserException_hdrs",
  srcs = [
    "Heimdallr/Classes/UserException/Common/Private/HMDUserExceptionRecord.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDAddressUnit.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionConfig.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionParameter.h",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionTracker.h",
    "Heimdallr/Classes/UserException/ToD/Private/HMDUserExceptionErrorDefinition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UserException_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDAddressUnit.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionErrorDefinition.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionParameter.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDUserExceptionTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDAddressUnit.h",
    "pod_support/Headers/Public/Heimdallr/HMDUserExceptionConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDUserExceptionParameter.h",
    "pod_support/Headers/Public/Heimdallr/HMDUserExceptionTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "UserException_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "UserException_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "UserException_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_UserException-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_UserException-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UserException_srcs",
  srcs = [
    "Heimdallr/Classes/UserException/Common/Public/HMDAddressUnit.m",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionConfig.m",
    "Heimdallr/Classes/UserException/ToD/Private/HMDUserExceptionErrorDefinition.m",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionParameter.m",
    "Heimdallr/Classes/UserException/Common/Private/HMDUserExceptionRecord.m",
    "Heimdallr/Classes/UserException/Common/Public/HMDUserExceptionTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "UserException_oc",
  enable_modules = 1,
  srcs = [
    "UserException_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "UserException_hdrs"
  ],
  pch = "pod_support/Headers/Private/UserException-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":UserException_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "UserException",
  deps = [
    ":UserException_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "UserException_lib",
  deps = [
    ":UserException"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUException_private_hdrs",
  srcs = [
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUBinaryImageInfo.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionCycleDataCollector.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionLog.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionMonitor+Private.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionMonitor+Reporter.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionPerf.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionRecordManager.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionSampleInfo.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionThermalMonitor.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionV2Record.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUThreadInfo.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUException_public_hdrs",
  srcs = [
    "Heimdallr/Classes/CPUException/Common/Public/HMDCPUExceptionConfig.h",
    "Heimdallr/Classes/CPUException/Common/Public/HMDCPUExceptionMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUException_hdrs",
  srcs = [
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUBinaryImageInfo.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionCycleDataCollector.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionLog.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionMonitor+Private.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionMonitor+Reporter.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionPerf.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionRecordManager.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionSampleInfo.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionThermalMonitor.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionV2Record.h",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUThreadInfo.h",
    "Heimdallr/Classes/CPUException/Common/Public/HMDCPUExceptionConfig.h",
    "Heimdallr/Classes/CPUException/Common/Public/HMDCPUExceptionMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUException_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCPUBinaryImageInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionCycleDataCollector.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionLog.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionMonitor+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionMonitor+Reporter.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionPerf.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionRecordManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionSampleInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionThermalMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUExceptionV2Record.h",
    "pod_support/Headers/Private/Heimdallr/HMDCPUThreadInfo.h",
    "pod_support/Headers/Public/Heimdallr/HMDCPUExceptionConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDCPUExceptionMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CPUException_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CPUException_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CPUException_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_CPUException-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_CPUException-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUException_srcs",
  srcs = [
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUBinaryImageInfo.m",
    "Heimdallr/Classes/CPUException/Common/Public/HMDCPUExceptionConfig.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionCycleDataCollector.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionLog.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionMonitor+Reporter.m",
    "Heimdallr/Classes/CPUException/Common/Public/HMDCPUExceptionMonitor.mm",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionPerf.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionRecordManager.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionSampleInfo.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionThermalMonitor.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUExceptionV2Record.m",
    "Heimdallr/Classes/CPUException/Common/Private/HMDCPUThreadInfo.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CPUException_oc",
  enable_modules = 1,
  srcs = [
    "CPUException_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CPUException_hdrs"
  ],
  pch = "pod_support/Headers/Private/CPUException-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":CPUException_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CPUException",
  deps = [
    ":CPUException_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CPUException_lib",
  deps = [
    ":CPUException"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCaptureBacktrace_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCaptureBacktrace/Common/Private/HMDCaptureBacktraceManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCaptureBacktrace_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCaptureBacktrace/Common/Public/HMDCaptureBacktrace.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCaptureBacktrace_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCaptureBacktrace/Common/Private/HMDCaptureBacktraceManager.h",
    "Heimdallr/Classes/HMDCaptureBacktrace/Common/Public/HMDCaptureBacktrace.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCaptureBacktrace_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCaptureBacktrace.h",
    "pod_support/Headers/Private/Heimdallr/HMDCaptureBacktraceManager.h",
    "pod_support/Headers/Public/Heimdallr/HMDCaptureBacktrace.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDCaptureBacktrace_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDCaptureBacktrace_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDCaptureBacktrace_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDCaptureBacktrace-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDCaptureBacktrace-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCaptureBacktrace_srcs",
  srcs = [
    "Heimdallr/Classes/HMDCaptureBacktrace/Common/Public/HMDCaptureBacktrace.m",
    "Heimdallr/Classes/HMDCaptureBacktrace/Common/Private/HMDCaptureBacktraceManager.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDCaptureBacktrace_oc",
  enable_modules = 1,
  srcs = [
    "HMDCaptureBacktrace_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDCaptureBacktrace_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDCaptureBacktrace-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDCaptureBacktrace_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDCaptureBacktrace",
  deps = [
    ":HMDCaptureBacktrace_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDCaptureBacktrace_lib",
  deps = [
    ":HMDCaptureBacktrace"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCoreDump_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDConfig+Private.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDFile.hpp",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDGenerator+Private.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDMachO.hpp",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDSaveCore.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDTool.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDUploader.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCoreDump_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCoreDump/Common/Public/HMDCDConfig.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Public/HMDCDGenerator.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCoreDump_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDConfig+Private.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDFile.hpp",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDGenerator+Private.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDMachO.hpp",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDSaveCore.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDTool.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDUploader.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Public/HMDCDConfig.h",
    "Heimdallr/Classes/HMDCoreDump/Common/Public/HMDCDGenerator.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCoreDump_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCDConfig+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCDConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDCDFile.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDCDGenerator+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDCDGenerator.h",
    "pod_support/Headers/Private/Heimdallr/HMDCDMachO.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDCDSaveCore.h",
    "pod_support/Headers/Private/Heimdallr/HMDCDTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDCDUploader.h",
    "pod_support/Headers/Public/Heimdallr/HMDCDConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDCDGenerator.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDCoreDump_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDCoreDump_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDCoreDump_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDCoreDump-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDCoreDump-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCoreDump_srcs",
  srcs = [
    "Heimdallr/Classes/HMDCoreDump/Common/Public/HMDCDConfig.m",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDFile.cpp",
    "Heimdallr/Classes/HMDCoreDump/Common/Public/HMDCDGenerator.m",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDMachO.mm",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDSaveCore.mm",
    "Heimdallr/Classes/HMDCoreDump/Common/Private/HMDCDUploader.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDCoreDump_oc",
  enable_modules = 1,
  srcs = [
    "HMDCoreDump_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDCoreDump_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDCoreDump-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDCoreDump_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDCoreDump",
  deps = [
    ":HMDCoreDump_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDCoreDump_lib",
  deps = [
    ":HMDCoreDump"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDEvilMethodTracer_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMCollectData.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMCollectTraceData.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMMacro.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMUploader.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEvilMethodTracer+private.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDEvilMethodTracer_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Public/HMDEvilMethodConfig.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Public/HMDEvilMethodTracer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDEvilMethodTracer_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMCollectData.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMCollectTraceData.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMMacro.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMUploader.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEvilMethodTracer+private.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Public/HMDEvilMethodConfig.h",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Public/HMDEvilMethodTracer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDEvilMethodTracer_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDEvilMethodTracer_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDEvilMethodTracer_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDEvilMethodTracer_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDEvilMethodTracer-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDEvilMethodTracer-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDEvilMethodTracer_srcs",
  srcs = [
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMCollectData.mm",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMCollectTraceData.mm",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEMUploader.m",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Public/HMDEvilMethodConfig.m",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Private/HMDEvilMethodTracer+private.m",
    "Heimdallr/Classes/HMDEvilMethodTracer/Common/Public/HMDEvilMethodTracer.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDEvilMethodTracer_oc",
  enable_modules = 1,
  srcs = [
    "HMDEvilMethodTracer_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDEvilMethodTracer_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDEvilMethodTracer-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDEvilMethodTracer_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDEvilMethodTracer",
  deps = [
    ":HMDEvilMethodTracer_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDEvilMethodTracer_lib",
  deps = [
    ":HMDEvilMethodTracer"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOrderFile_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDOrderFile/Common/Private/HMDOrderFileCollectData.h",
    "Heimdallr/Classes/HMDOrderFile/Common/Private/HMDOrderFileTraceData.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOrderFile_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDOrderFile/Common/Public/HMDOrderFileTracer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOrderFile_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDOrderFile/Common/Private/HMDOrderFileCollectData.h",
    "Heimdallr/Classes/HMDOrderFile/Common/Private/HMDOrderFileTraceData.h",
    "Heimdallr/Classes/HMDOrderFile/Common/Public/HMDOrderFileTracer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOrderFile_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDOrderFile_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDOrderFile_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDOrderFile_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDOrderFile-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDOrderFile-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDOrderFile_srcs",
  srcs = [
    "Heimdallr/Classes/HMDOrderFile/Common/Private/HMDOrderFileCollectData.mm",
    "Heimdallr/Classes/HMDOrderFile/Common/Private/HMDOrderFileTraceData.mm",
    "Heimdallr/Classes/HMDOrderFile/Common/Public/HMDOrderFileTracer.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDOrderFile_oc",
  enable_modules = 1,
  srcs = [
    "HMDOrderFile_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDOrderFile_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDOrderFile-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDOrderFile_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDOrderFile",
  deps = [
    ":HMDOrderFile_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDOrderFile_lib",
  deps = [
    ":HMDOrderFile"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GWPASan_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GWPASan_public_hdrs",
  srcs = [
    "Heimdallr/Classes/GWPASan/Common/Public/HMDGWPASanConfig.h",
    "Heimdallr/Classes/GWPASan/Common/Public/HMDGWPASanMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GWPASan_hdrs",
  srcs = [
    "Heimdallr/Classes/GWPASan/Common/Public/HMDGWPASanConfig.h",
    "Heimdallr/Classes/GWPASan/Common/Public/HMDGWPASanMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GWPASan_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDGWPASanConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDGWPASanMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDGWPASanConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDGWPASanMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "GWPASan_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "GWPASan_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "GWPASan_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_GWPASan-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_GWPASan-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GWPASan_srcs",
  srcs = [
    "Heimdallr/Classes/GWPASan/Common/Public/HMDGWPASanConfig.m",
    "Heimdallr/Classes/GWPASan/Common/Public/HMDGWPASanMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "GWPASan_oc",
  enable_modules = 1,
  srcs = [
    "GWPASan_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "GWPASan_hdrs"
  ],
  pch = "pod_support/Headers/Private/GWPASan-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@HMDGWPASan//:HMDGWPASan_objc_interface",
    "@HMDGWPASan//:HMDGWPASan_swift_interface",
    ":GWPASan_objc_interface",
    "@HMDGWPASan//:HMDGWPASan_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "GWPASan",
  deps = [
    ":GWPASan_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "GWPASan_lib",
  deps = [
    ":GWPASan"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchAnalyse_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchAnalyse_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchAnalyse/Common/Public/HMDLaunchAnalyseConfig.h",
    "Heimdallr/Classes/HMDLaunchAnalyse/Common/Public/HMDLaunchAnalyseMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchAnalyse_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchAnalyse/Common/Public/HMDLaunchAnalyseConfig.h",
    "Heimdallr/Classes/HMDLaunchAnalyse/Common/Public/HMDLaunchAnalyseMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchAnalyse_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchAnalyse_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchAnalyse_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDLaunchAnalyse_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchAnalyse-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchAnalyse-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchAnalyse_srcs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchAnalyse/Common/Public/HMDLaunchAnalyseConfig.m",
    "Heimdallr/Classes/HMDLaunchAnalyse/Common/Public/HMDLaunchAnalyseMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchAnalyse_oc",
  enable_modules = 1,
  srcs = [
    "HMDLaunchAnalyse_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDLaunchAnalyse_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDLaunchAnalyse-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDLaunchAnalyse_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchAnalyse",
  deps = [
    ":HMDLaunchAnalyse_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDLaunchAnalyse_lib",
  deps = [
    ":HMDLaunchAnalyse"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWatchDog_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogAppExitReasonMark.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogDefine.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWatchDog_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDog.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogConfig.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogDelegate.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWatchDog_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogAppExitReasonMark.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogDefine.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogRecord.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDog.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogConfig.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogDelegate.h",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWatchDog_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDWatchDog.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchDogAppExitReasonMark.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchDogConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchDogDefine.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchDogDelegate.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchDogRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchDogTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDWatchDog.h",
    "pod_support/Headers/Public/Heimdallr/HMDWatchDogConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDWatchDogDelegate.h",
    "pod_support/Headers/Public/Heimdallr/HMDWatchDogTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDWatchDog_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDWatchDog_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDWatchDog_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDWatchDog-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDWatchDog-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDWatchDog_srcs",
  srcs = [
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDog.mm",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogAppExitReasonMark.c",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogConfig.m",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogDefine.m",
    "Heimdallr/Classes/HMDWatchDog/Common/Private/HMDWatchDogRecord.m",
    "Heimdallr/Classes/HMDWatchDog/Common/Public/HMDWatchDogTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDWatchDog_oc",
  enable_modules = 1,
  srcs = [
    "HMDWatchDog_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDWatchDog_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDWatchDog-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDWatchDog_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDWatchDog",
  deps = [
    ":HMDWatchDog_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDWatchDog_lib",
  deps = [
    ":HMDWatchDog"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Runloop_private_hdrs",
  srcs = [
    "Heimdallr/Classes/Runloop/Common/Private/HMDMainRunloopMonitor.h",
    "Heimdallr/Classes/Runloop/Common/Private/HMDMainRunloopMonitorV2.h",
    "Heimdallr/Classes/Runloop/Common/Private/HMDRunloopMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Runloop_public_hdrs",
  srcs = [
    "Heimdallr/Classes/Runloop/Common/Public/hmd_runloop_define.h",
    "Heimdallr/Classes/Runloop/Common/Public/HMDANRSDKMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Runloop_hdrs",
  srcs = [
    "Heimdallr/Classes/Runloop/Common/Private/HMDMainRunloopMonitor.h",
    "Heimdallr/Classes/Runloop/Common/Private/HMDMainRunloopMonitorV2.h",
    "Heimdallr/Classes/Runloop/Common/Private/HMDRunloopMonitor.h",
    "Heimdallr/Classes/Runloop/Common/Public/HMDANRSDKMonitor.h",
    "Heimdallr/Classes/Runloop/Common/Public/hmd_runloop_define.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Runloop_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDANRSDKMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDMainRunloopMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDMainRunloopMonitorV2.h",
    "pod_support/Headers/Private/Heimdallr/HMDRunloopMonitor.h",
    "pod_support/Headers/Private/Heimdallr/hmd_runloop_define.h",
    "pod_support/Headers/Public/Heimdallr/HMDANRSDKMonitor.h",
    "pod_support/Headers/Public/Heimdallr/hmd_runloop_define.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Runloop_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Runloop_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Runloop_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Runloop-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Runloop-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Runloop_srcs",
  srcs = [
    "Heimdallr/Classes/Runloop/Common/Public/HMDANRSDKMonitor.mm",
    "Heimdallr/Classes/Runloop/Common/Private/HMDMainRunloopMonitor.mm",
    "Heimdallr/Classes/Runloop/Common/Private/HMDMainRunloopMonitorV2.mm",
    "Heimdallr/Classes/Runloop/Common/Private/HMDRunloopMonitor.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Runloop_oc",
  enable_modules = 1,
  srcs = [
    "Runloop_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Runloop_hdrs"
  ],
  pch = "pod_support/Headers/Private/Runloop-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Runloop_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Runloop",
  deps = [
    ":Runloop_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Runloop_lib",
  deps = [
    ":Runloop"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSDKMonitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSDKMonitor/Common/Private/HMDSDKMonitorDataManager.h",
    "Heimdallr/Classes/HMDSDKMonitor/Common/Private/HMDSDKMonitorManager+Private.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSDKMonitor_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSDKMonitor/Common/Public/HMDSDKMonitorManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSDKMonitor_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDSDKMonitor/Common/Private/HMDSDKMonitorDataManager.h",
    "Heimdallr/Classes/HMDSDKMonitor/Common/Private/HMDSDKMonitorManager+Private.h",
    "Heimdallr/Classes/HMDSDKMonitor/Common/Public/HMDSDKMonitorManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSDKMonitor_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSDKMonitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSDKMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDSDKMonitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSDKMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDSDKMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDSDKMonitor_srcs",
  srcs = [
    "Heimdallr/Classes/HMDSDKMonitor/Common/Private/HMDSDKMonitorDataManager.m",
    "Heimdallr/Classes/HMDSDKMonitor/Common/Public/HMDSDKMonitorManager.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDSDKMonitor_oc",
  enable_modules = 1,
  srcs = [
    "HMDSDKMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDSDKMonitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDSDKMonitor-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDSDKMonitor_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDSDKMonitor",
  deps = [
    ":HMDSDKMonitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDSDKMonitor_lib",
  deps = [
    ":HMDSDKMonitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OpenTracing_private_hdrs",
  srcs = [
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTManager+Report.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTManager.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTTrace+Private.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTTraceConfig+Tools.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTManager2.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTSpan+Private.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTTraceConfig+Private.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OpenTracing_public_hdrs",
  srcs = [
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTBridge.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTConfig.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTSpan.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTSpanConfig.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTrace.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTraceConfig.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTraceDefine.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OpenTracing_hdrs",
  srcs = [
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTManager+Report.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTManager.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTTrace+Private.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTTraceConfig+Tools.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTManager2.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTSpan+Private.h",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTTraceConfig+Private.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTBridge.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTConfig.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTSpan.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTSpanConfig.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTrace.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTraceConfig.h",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTraceDefine.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OpenTracing_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDOTBridge.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTManager+Report.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTManager2.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTSpan+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTSpan.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTSpanConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTTrace+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTTrace.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTTraceConfig+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTTraceConfig+Tools.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTTraceConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDOTTraceDefine.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTBridge.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTSpan.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTSpanConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTTrace.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTTraceConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDOTTraceDefine.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "OpenTracing_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "OpenTracing_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "OpenTracing_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_OpenTracing-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_OpenTracing-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "OpenTracing_srcs",
  srcs = [
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTBridge.m",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTConfig.m",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTManager+Report.m",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTManager.m",
    "Heimdallr/Classes/OpenTracing/Common/Private/refactor/HMDOTManager2.m",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTSpan.m",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTSpanConfig.m",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTrace.m",
    "Heimdallr/Classes/OpenTracing/Common/Private/HMDOTTraceConfig+Tools.m",
    "Heimdallr/Classes/OpenTracing/Common/Public/HMDOTTraceConfig.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "OpenTracing_oc",
  enable_modules = 1,
  srcs = [
    "OpenTracing_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "OpenTracing_hdrs"
  ],
  pch = "pod_support/Headers/Private/OpenTracing-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":OpenTracing_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "OpenTracing",
  deps = [
    ":OpenTracing_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "OpenTracing_lib",
  deps = [
    ":OpenTracing"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MemoryGraph_private_hdrs",
  srcs = [
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryChecker.h",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphGenerator+Reportor.h",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphTool+Private.h",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphUploader.h",
    "Heimdallr/Classes/MemoryGraph/ToD/Private/HMDMemoryGraphUploader+HMDURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MemoryGraph_public_hdrs",
  srcs = [
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphConfig.h",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphGenerator.h",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphTool.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MemoryGraph_hdrs",
  srcs = [
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryChecker.h",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphGenerator+Reportor.h",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphTool+Private.h",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphUploader.h",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphConfig.h",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphGenerator.h",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphTool.h",
    "Heimdallr/Classes/MemoryGraph/ToD/Private/HMDMemoryGraphUploader+HMDURLProvider.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MemoryGraph_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDMemoryChecker.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphGenerator+Reportor.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphGenerator.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphTool+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphUploader+HMDURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDMemoryGraphUploader.h",
    "pod_support/Headers/Public/Heimdallr/HMDMemoryGraphConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDMemoryGraphGenerator.h",
    "pod_support/Headers/Public/Heimdallr/HMDMemoryGraphTool.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MemoryGraph_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MemoryGraph_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "MemoryGraph_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_MemoryGraph-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_MemoryGraph-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MemoryGraph_srcs",
  srcs = [
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryChecker.m",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphConfig.m",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphGenerator+Reportor.m",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphGenerator.m",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphTool+Private.m",
    "Heimdallr/Classes/MemoryGraph/Common/Public/HMDMemoryGraphTool.m",
    "Heimdallr/Classes/MemoryGraph/ToD/Private/HMDMemoryGraphUploader+HMDURLProvider.m",
    "Heimdallr/Classes/MemoryGraph/Common/Private/HMDMemoryGraphUploader.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MemoryGraph_oc",
  enable_modules = 1,
  srcs = [
    "MemoryGraph_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "MemoryGraph_hdrs"
  ],
  pch = "pod_support/Headers/Private/MemoryGraph-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MemoryGraphCapture//:MemoryGraphCapture_objc_interface",
    "@MemoryGraphCapture//:MemoryGraphCapture_swift_interface",
    ":MemoryGraph_objc_interface",
    "@MemoryGraphCapture//:MemoryGraphCapture_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MemoryGraph",
  deps = [
    ":MemoryGraph_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "MemoryGraph_lib",
  deps = [
    ":MemoryGraph"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMallocHook_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMallocHook_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMallocHook/Common/Public/HMDMallocHookHelper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMallocHook_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMallocHook/Common/Public/HMDMallocHookHelper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMallocHook_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDMallocHookHelper.h",
    "pod_support/Headers/Public/Heimdallr/HMDMallocHookHelper.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDMallocHook_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDMallocHook_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDMallocHook_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDMallocHook-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDMallocHook-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMallocHook_srcs",
  srcs = [
    "Heimdallr/Classes/HMDMallocHook/Common/Public/HMDMallocHookHelper.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDMallocHook_oc",
  enable_modules = 1,
  srcs = [
    "HMDMallocHook_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDMallocHook_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDMallocHook-prefix.pch",
  sdk_dylibs = [
    "c++"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDMallocHook_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDMallocHook",
  deps = [
    ":HMDMallocHook_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDMallocHook_lib",
  deps = [
    ":HMDMallocHook"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AutoReleaseProtection_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDKStingerExchangeManager.h",
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDTTKAutoReleaseProtection.h",
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDTTKAutoReleaseProtectionConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AutoReleaseProtection_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AutoReleaseProtection_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDKStingerExchangeManager.h",
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDTTKAutoReleaseProtection.h",
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDTTKAutoReleaseProtectionConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AutoReleaseProtection_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "AutoReleaseProtection_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "AutoReleaseProtection_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "AutoReleaseProtection_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_AutoReleaseProtection-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_AutoReleaseProtection-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "AutoReleaseProtection_srcs",
  srcs = [
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDKStingerExchangeManager.m",
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDTTKAutoReleaseProtection.m",
    "Heimdallr/Classes/HMDTTKAutoReleaseProtection/Common/Private/HMDTTKAutoReleaseProtectionConfig.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "AutoReleaseProtection_oc",
  enable_modules = 1,
  srcs = [
    "AutoReleaseProtection_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "AutoReleaseProtection_hdrs"
  ],
  pch = "pod_support/Headers/Private/AutoReleaseProtection-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@Stinger//:Stinger_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    "@Stinger//:Stinger_swift_interface",
    ":AutoReleaseProtection_objc_interface",
    "@BDFishhook//:BDFishhook_module_map",
    "@Stinger//:Stinger_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "AutoReleaseProtection",
  deps = [
    ":AutoReleaseProtection_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "AutoReleaseProtection_lib",
  deps = [
    ":AutoReleaseProtection"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UIFrozen_private_hdrs",
  srcs = [
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenDefine.h",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenDetectProtocol.h",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenRecord.h",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UIFrozen_public_hdrs",
  srcs = [
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenConfig.h",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenGestureRecognizerMonitor.h",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UIFrozen_hdrs",
  srcs = [
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenDefine.h",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenDetectProtocol.h",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenRecord.h",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenTracker.h",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenConfig.h",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenGestureRecognizerMonitor.h",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UIFrozen_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenDefine.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenDetectProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenGestureRecognizerMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDUIFrozenTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDUIFrozenConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDUIFrozenGestureRecognizerMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDUIFrozenManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "UIFrozen_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "UIFrozen_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "UIFrozen_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_UIFrozen-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_UIFrozen-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "UIFrozen_srcs",
  srcs = [
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenConfig.m",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenGestureRecognizerMonitor.m",
    "Heimdallr/Classes/UIFrozen/Common/Public/HMDUIFrozenManager.m",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenRecord.m",
    "Heimdallr/Classes/UIFrozen/Common/Private/HMDUIFrozenTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "UIFrozen_oc",
  enable_modules = 1,
  srcs = [
    "UIFrozen_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "UIFrozen_hdrs"
  ],
  pch = "pod_support/Headers/Private/UIFrozen-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":UIFrozen_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "UIFrozen",
  deps = [
    ":UIFrozen_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "UIFrozen_lib",
  deps = [
    ":UIFrozen"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WatchdogProtect_private_hdrs",
  srcs = [
    "Heimdallr/Classes/WatchdogProtect/Common/Private/DynamicProtect/HMDWPDynamicProtect.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWPCapture.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWPUtility.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectDefine.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectDetectProtocol.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectManager+Private.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectRecord.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectTracker.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/NSUserDefault/HMDWPNSUserDefault.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/UIApplication/UIApplication+HMDWatchdogProtect.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/UIPasteboard/HMDWPUIPasteboard.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/YYCache/HMDWPYYCache.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WatchdogProtect_public_hdrs",
  srcs = [
    "Heimdallr/Classes/WatchdogProtect/Common/Public/HMDWatchdogProtectConfig.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Public/HMDWatchdogProtectManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WatchdogProtect_hdrs",
  srcs = [
    "Heimdallr/Classes/WatchdogProtect/Common/Private/DynamicProtect/HMDWPDynamicProtect.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWPCapture.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWPUtility.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectDefine.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectDetectProtocol.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectManager+Private.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectRecord.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectTracker.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/NSUserDefault/HMDWPNSUserDefault.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/UIApplication/UIApplication+HMDWatchdogProtect.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/UIPasteboard/HMDWPUIPasteboard.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/YYCache/HMDWPYYCache.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Public/HMDWatchdogProtectConfig.h",
    "Heimdallr/Classes/WatchdogProtect/Common/Public/HMDWatchdogProtectManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WatchdogProtect_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDWPCapture.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPDynamicProtect.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPNSUserDefault.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPUIPasteboard.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPUtility.h",
    "pod_support/Headers/Private/Heimdallr/HMDWPYYCache.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectDefine.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectDetectProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectManager+Private.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDWatchdogProtectTracker.h",
    "pod_support/Headers/Private/Heimdallr/UIApplication+HMDWatchdogProtect.h",
    "pod_support/Headers/Public/Heimdallr/HMDWatchdogProtectConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDWatchdogProtectManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WatchdogProtect_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WatchdogProtect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WatchdogProtect_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_WatchdogProtect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_WatchdogProtect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WatchdogProtect_srcs",
  srcs = [
    "Heimdallr/Classes/WatchdogProtect/Common/Public/HMDWatchdogProtectConfig.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Public/HMDWatchdogProtectManager.mm",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectRecord.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWatchdogProtectTracker.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWPCapture.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/DynamicProtect/HMDWPDynamicProtect.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/NSUserDefault/HMDWPNSUserDefault.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/UIPasteboard/HMDWPUIPasteboard.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/HMDWPUtility.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/YYCache/HMDWPYYCache.m",
    "Heimdallr/Classes/WatchdogProtect/Common/Private/UIApplication/UIApplication+HMDWatchdogProtect.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WatchdogProtect_oc",
  enable_modules = 1,
  srcs = [
    "WatchdogProtect_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "WatchdogProtect_hdrs"
  ],
  pch = "pod_support/Headers/Private/WatchdogProtect-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Stinger//:Stinger_objc_interface",
    "@Stinger//:Stinger_swift_interface",
    ":WatchdogProtect_objc_interface",
    "@Stinger//:Stinger_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WatchdogProtect",
  deps = [
    ":WatchdogProtect_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WatchdogProtect_lib",
  deps = [
    ":WatchdogProtect"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ClassCoverage_private_hdrs",
  srcs = [
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageChecker+Encoder.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageChecker.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageConfig.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageDefine.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageUploader.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ClassCoverage_public_hdrs",
  srcs = [
    "Heimdallr/Classes/ClassCoverage/Common/Public/HMDClassCoverageManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ClassCoverage_hdrs",
  srcs = [
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageChecker+Encoder.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageChecker.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageConfig.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageDefine.h",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageUploader.h",
    "Heimdallr/Classes/ClassCoverage/Common/Public/HMDClassCoverageManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ClassCoverage_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDClassCoverageChecker+Encoder.h",
    "pod_support/Headers/Private/Heimdallr/HMDClassCoverageChecker.h",
    "pod_support/Headers/Private/Heimdallr/HMDClassCoverageConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDClassCoverageDefine.h",
    "pod_support/Headers/Private/Heimdallr/HMDClassCoverageManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDClassCoverageUploader.h",
    "pod_support/Headers/Public/Heimdallr/HMDClassCoverageManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ClassCoverage_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ClassCoverage_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "ClassCoverage_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_ClassCoverage-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_ClassCoverage-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ClassCoverage_srcs",
  srcs = [
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageChecker+Encoder.m",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageChecker.mm",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageConfig.m",
    "Heimdallr/Classes/ClassCoverage/Common/Public/HMDClassCoverageManager.m",
    "Heimdallr/Classes/ClassCoverage/Common/Private/HMDClassCoverageUploader.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ClassCoverage_oc",
  enable_modules = 1,
  srcs = [
    "ClassCoverage_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "ClassCoverage_hdrs"
  ],
  pch = "pod_support/Headers/Private/ClassCoverage-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":ClassCoverage_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ClassCoverage",
  deps = [
    ":ClassCoverage_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "ClassCoverage_lib",
  deps = [
    ":ClassCoverage"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkTraffic_private_hdrs",
  srcs = [
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficDefinedKey.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+CustomReport.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+NetworkCollect.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+Privated.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitorRecord+Report.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficCollector/HMDNetworkTrafficCollector.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficCollector/HMDTTNetPushTrafficCollector.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficFreqRequestTool.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficSourceUsageModel.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficUsageModel+Report.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficUsageStatistics.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/Utilities/HMDNetworkTraffic.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkTraffic_public_hdrs",
  srcs = [
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDNetTrafficMonitor+TrafficConsume.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDNetTrafficMonitor.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDSmartNetTrafficMonitor.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Records/HMDNetTrafficMonitorRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkTraffic_hdrs",
  srcs = [
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficDefinedKey.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+CustomReport.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+NetworkCollect.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+Privated.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitorRecord+Report.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficCollector/HMDNetworkTrafficCollector.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficCollector/HMDTTNetPushTrafficCollector.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficFreqRequestTool.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficSourceUsageModel.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficUsageModel+Report.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficUsageStatistics.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/Utilities/HMDNetworkTraffic.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDNetTrafficMonitor+TrafficConsume.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDNetTrafficMonitor.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDSmartNetTrafficMonitor.h",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Records/HMDNetTrafficMonitorRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkTraffic_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficDefinedKey.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficFreqRequestTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitor+CustomReport.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitor+NetworkCollect.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitor+Privated.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitor+TrafficConsume.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitorRecord+Report.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficMonitorRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficSourceUsageModel.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficUsageModel+Report.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetTrafficUsageStatistics.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkTraffic.h",
    "pod_support/Headers/Private/Heimdallr/HMDNetworkTrafficCollector.h",
    "pod_support/Headers/Private/Heimdallr/HMDSmartNetTrafficMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDTTNetPushTrafficCollector.h",
    "pod_support/Headers/Public/Heimdallr/HMDNetTrafficMonitor+TrafficConsume.h",
    "pod_support/Headers/Public/Heimdallr/HMDNetTrafficMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDNetTrafficMonitorRecord.h",
    "pod_support/Headers/Public/Heimdallr/HMDSmartNetTrafficMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkTraffic_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkTraffic_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "NetworkTraffic_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_NetworkTraffic-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_NetworkTraffic-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "NetworkTraffic_srcs",
  srcs = [
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficFreqRequestTool.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+CustomReport.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitor+NetworkCollect.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDNetTrafficMonitor+TrafficConsume.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Modules/HMDNetTrafficMonitor.mm",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/HMDNetTrafficMonitorRecord+Report.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Public/Records/HMDNetTrafficMonitorRecord.mm",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficSourceUsageModel.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficUsageModel+Report.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficConsume/HMDNetTrafficUsageStatistics.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/Utilities/HMDNetworkTraffic.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficCollector/HMDNetworkTrafficCollector.m",
    "Heimdallr/Classes/NetworkTraffic/Common/Private/TrafficCollector/HMDTTNetPushTrafficCollector.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "NetworkTraffic_oc",
  enable_modules = 1,
  srcs = [
    "NetworkTraffic_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "NetworkTraffic_hdrs"
  ],
  pch = "pod_support/Headers/Private/NetworkTraffic-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":NetworkTraffic_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "NetworkTraffic",
  deps = [
    ":NetworkTraffic_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "NetworkTraffic_lib",
  deps = [
    ":NetworkTraffic"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GPUUsage_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GPUUsage_public_hdrs",
  srcs = [
    "Heimdallr/Classes/GPUUsage/Common/Public/HMDGPUMonitor.h",
    "Heimdallr/Classes/GPUUsage/Common/Public/HMDGPUUsage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GPUUsage_hdrs",
  srcs = [
    "Heimdallr/Classes/GPUUsage/Common/Public/HMDGPUMonitor.h",
    "Heimdallr/Classes/GPUUsage/Common/Public/HMDGPUUsage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GPUUsage_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDGPUMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDGPUUsage.h",
    "pod_support/Headers/Public/Heimdallr/HMDGPUMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDGPUUsage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "GPUUsage_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "GPUUsage_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "GPUUsage_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_GPUUsage-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_GPUUsage-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "GPUUsage_srcs",
  srcs = [
    "Heimdallr/Classes/GPUUsage/Common/Public/HMDGPUMonitor.m",
    "Heimdallr/Classes/GPUUsage/Common/Public/HMDGPUUsage.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "GPUUsage_oc",
  enable_modules = 1,
  srcs = [
    "GPUUsage_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "GPUUsage_hdrs"
  ],
  pch = "pod_support/Headers/Private/GPUUsage-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":GPUUsage_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "GPUUsage",
  deps = [
    ":GPUUsage_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "GPUUsage_lib",
  deps = [
    ":GPUUsage"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUFrequency_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUFrequency_public_hdrs",
  srcs = [
    "Heimdallr/Classes/CPUFrequency/Common/Public/HMDCPUFreqMonitor.h",
    "Heimdallr/Classes/CPUFrequency/Common/Public/HMDCPUFreqTool.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUFrequency_hdrs",
  srcs = [
    "Heimdallr/Classes/CPUFrequency/Common/Public/HMDCPUFreqMonitor.h",
    "Heimdallr/Classes/CPUFrequency/Common/Public/HMDCPUFreqTool.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUFrequency_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CPUFrequency_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CPUFrequency_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CPUFrequency_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_CPUFrequency-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_CPUFrequency-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CPUFrequency_srcs",
  srcs = [
    "Heimdallr/Classes/CPUFrequency/Common/Public/HMDCPUFreqMonitor.m",
    "Heimdallr/Classes/CPUFrequency/Common/Public/HMDCPUFreqTool.c"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CPUFrequency_oc",
  enable_modules = 1,
  srcs = [
    "CPUFrequency_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CPUFrequency_hdrs"
  ],
  pch = "pod_support/Headers/Private/CPUFrequency-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":CPUFrequency_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CPUFrequency",
  deps = [
    ":CPUFrequency_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CPUFrequency_lib",
  deps = [
    ":CPUFrequency"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMetricKit_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMetricKit/Common/Private/HMDMetricKitRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMetricKit_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetrickitConfig.h",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetricKitSegmentRenameFix.h",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetricKitTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMetricKit_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMetricKit/Common/Private/HMDMetricKitRecord.h",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetricKitSegmentRenameFix.h",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetricKitTracker.h",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetrickitConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMetricKit_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDMetricKitRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDMetricKitSegmentRenameFix.h",
    "pod_support/Headers/Private/Heimdallr/HMDMetricKitTracker.h",
    "pod_support/Headers/Private/Heimdallr/HMDMetrickitConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDMetricKitSegmentRenameFix.h",
    "pod_support/Headers/Public/Heimdallr/HMDMetricKitTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDMetrickitConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDMetricKit_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDMetricKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDMetricKit_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDMetricKit-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDMetricKit-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMetricKit_srcs",
  srcs = [
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetrickitConfig.m",
    "Heimdallr/Classes/HMDMetricKit/Common/Private/HMDMetricKitRecord.m",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetricKitSegmentRenameFix.m",
    "Heimdallr/Classes/HMDMetricKit/Common/Public/HMDMetricKitTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDMetricKit_oc",
  enable_modules = 1,
  srcs = [
    "HMDMetricKit_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDMetricKit_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDMetricKit-prefix.pch",
  weak_sdk_frameworks = [
    "MetricKit"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDMetricKit_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDMetricKit",
  deps = [
    ":HMDMetricKit_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDMetricKit_lib",
  deps = [
    ":HMDMetricKit"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDFDMonitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDFDMonitor/Common/Private/HMDFDRecord.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDFDMonitor_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDFDMonitor/Common/Public/HMDFDConfig.h",
    "Heimdallr/Classes/HMDFDMonitor/Common/Public/HMDFDTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDFDMonitor_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDFDMonitor/Common/Private/HMDFDRecord.h",
    "Heimdallr/Classes/HMDFDMonitor/Common/Public/HMDFDConfig.h",
    "Heimdallr/Classes/HMDFDMonitor/Common/Public/HMDFDTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDFDMonitor_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDFDConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDFDRecord.h",
    "pod_support/Headers/Private/Heimdallr/HMDFDTracker.h",
    "pod_support/Headers/Public/Heimdallr/HMDFDConfig.h",
    "pod_support/Headers/Public/Heimdallr/HMDFDTracker.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDFDMonitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDFDMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDFDMonitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDFDMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDFDMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDFDMonitor_srcs",
  srcs = [
    "Heimdallr/Classes/HMDFDMonitor/Common/Public/HMDFDConfig.m",
    "Heimdallr/Classes/HMDFDMonitor/Common/Private/HMDFDRecord.m",
    "Heimdallr/Classes/HMDFDMonitor/Common/Public/HMDFDTracker.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDFDMonitor_oc",
  enable_modules = 1,
  srcs = [
    "HMDFDMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDFDMonitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDFDMonitor-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    ":HMDFDMonitor_objc_interface",
    "@BDFishhook//:BDFishhook_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDFDMonitor",
  deps = [
    ":HMDFDMonitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDFDMonitor_lib",
  deps = [
    ":HMDFDMonitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCrashPrevent_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCrashPrevent_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPrevent.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachException/HMDCrashPreventMachException.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachException/HMDCrashPreventMachExceptionDefinition.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachRestartable/HMDCrashPreventMachRestartable.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachRestartable/HMDCrashPreventMachRestartableDefinition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCrashPrevent_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPrevent.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachException/HMDCrashPreventMachException.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachException/HMDCrashPreventMachExceptionDefinition.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachRestartable/HMDCrashPreventMachRestartable.h",
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPreventMachRestartable/HMDCrashPreventMachRestartableDefinition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCrashPrevent_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDCrashPrevent.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashPreventMachException.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashPreventMachExceptionDefinition.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashPreventMachRestartable.h",
    "pod_support/Headers/Private/Heimdallr/HMDCrashPreventMachRestartableDefinition.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashPrevent.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashPreventMachException.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashPreventMachExceptionDefinition.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashPreventMachRestartable.h",
    "pod_support/Headers/Public/Heimdallr/HMDCrashPreventMachRestartableDefinition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDCrashPrevent_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDCrashPrevent_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDCrashPrevent_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDCrashPrevent-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDCrashPrevent-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDCrashPrevent_srcs",
  srcs = [
    "Heimdallr/Classes/HMDCrashPrevent/Common/Public/HMDCrashPrevent.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDCrashPrevent_oc",
  enable_modules = 1,
  srcs = [
    "HMDCrashPrevent_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDCrashPrevent_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDCrashPrevent-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@FrameRecover//:FrameRecover_objc_interface",
    "@FrameRecover//:FrameRecover_swift_interface",
    ":HMDCrashPrevent_objc_interface",
    "@FrameRecover//:FrameRecover_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDCrashPrevent",
  deps = [
    ":HMDCrashPrevent_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDCrashPrevent_lib",
  deps = [
    ":HMDCrashPrevent"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDThreadMonitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorInfo.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorPluginProtocol.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorTool.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/Runloop/HMDSubThreadRunloopMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadCount/HMDThreadCountMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadCount/HMDThreadSamplingMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadInversion/HMDThreadInversionMonitorPlugin.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDThreadMonitor_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDThreadMonitor/Common/Public/HMDThreadMonitor.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Public/HMDThreadMonitorConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDThreadMonitor_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorInfo.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorPluginProtocol.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorTool.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/Runloop/HMDSubThreadRunloopMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadCount/HMDThreadCountMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadCount/HMDThreadSamplingMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadInversion/HMDThreadInversionMonitorPlugin.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Public/HMDThreadMonitor.h",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Public/HMDThreadMonitorConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDThreadMonitor_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDSubThreadRunloopMonitorPlugin.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadCountMonitorPlugin.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadInversionMonitorPlugin.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadMonitor.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadMonitorConfig.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadMonitorInfo.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadMonitorPluginProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadMonitorTool.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadSamplingMonitorPlugin.h",
    "pod_support/Headers/Public/Heimdallr/HMDThreadMonitor.h",
    "pod_support/Headers/Public/Heimdallr/HMDThreadMonitorConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDThreadMonitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDThreadMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDThreadMonitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDThreadMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDThreadMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDThreadMonitor_srcs",
  srcs = [
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/Runloop/HMDSubThreadRunloopMonitorPlugin.mm",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadCount/HMDThreadCountMonitorPlugin.m",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadInversion/HMDThreadInversionMonitorPlugin.mm",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Public/HMDThreadMonitor.m",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Public/HMDThreadMonitorConfig.m",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorInfo.m",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/HMDThreadMonitorTool.m",
    "Heimdallr/Classes/HMDThreadMonitor/Common/Private/ThreadCount/HMDThreadSamplingMonitorPlugin.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDThreadMonitor_oc",
  enable_modules = 1,
  srcs = [
    "HMDThreadMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDThreadMonitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDThreadMonitor-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    ":HMDThreadMonitor_objc_interface",
    "@BDFishhook//:BDFishhook_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDThreadMonitor",
  deps = [
    ":HMDThreadMonitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDThreadMonitor_lib",
  deps = [
    ":HMDThreadMonitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchOptimizer_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDDispatchNode.hpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDDyld.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDGetImages.hpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDQoSMockerConfig.hpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosCollector.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosMocker.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosOptimizer.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosWorkerProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchOptimizer_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Public/HMDLaunchOptimizer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchOptimizer_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDDispatchNode.hpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDDyld.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDGetImages.hpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDQoSMockerConfig.hpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosCollector.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosMocker.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosOptimizer.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosWorkerProtocol.h",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Public/HMDLaunchOptimizer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchOptimizer_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDDispatchNode.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDDyld.h",
    "pod_support/Headers/Private/Heimdallr/HMDGetImages.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDLaunchOptimizer.h",
    "pod_support/Headers/Private/Heimdallr/HMDQoSMockerConfig.hpp",
    "pod_support/Headers/Private/Heimdallr/HMDThreadQosCollector.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadQosMocker.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadQosOptimizer.h",
    "pod_support/Headers/Private/Heimdallr/HMDThreadQosWorkerProtocol.h",
    "pod_support/Headers/Public/Heimdallr/HMDLaunchOptimizer.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchOptimizer_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchOptimizer_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDLaunchOptimizer_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchOptimizer-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDLaunchOptimizer-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDLaunchOptimizer_srcs",
  srcs = [
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDDispatchNode.cpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDDyld.mm",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDGetImages.cpp",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Public/HMDLaunchOptimizer.m",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDQoSMockerConfig.mm",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosCollector.mm",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosMocker.mm",
    "Heimdallr/Classes/HMDLaunchOptimizer/Common/Private/HMDThreadQosOptimizer.mm"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDLaunchOptimizer_oc",
  enable_modules = 1,
  srcs = [
    "HMDLaunchOptimizer_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDLaunchOptimizer_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDLaunchOptimizer-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    ":HMDLaunchOptimizer_objc_interface",
    "@BDFishhook//:BDFishhook_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDLaunchOptimizer",
  deps = [
    ":HMDLaunchOptimizer_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDLaunchOptimizer_lib",
  deps = [
    ":HMDLaunchOptimizer"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStabilityTest_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDStabilityTest/Common/Private/HMDInjectedInfo+StabilityTest.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStabilityTest_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStabilityTest_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDStabilityTest/Common/Private/HMDInjectedInfo+StabilityTest.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStabilityTest_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDStabilityTest_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDStabilityTest_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDStabilityTest_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDStabilityTest-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDStabilityTest-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDStabilityTest_srcs",
  srcs = [
    "Heimdallr/Classes/HMDStabilityTest/Common/Private/HMDInjectedInfo+StabilityTest.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDStabilityTest_oc",
  enable_modules = 1,
  srcs = [
    "HMDStabilityTest_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDStabilityTest_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDStabilityTest-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDStabilityTest_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDStabilityTest",
  deps = [
    ":HMDStabilityTest_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDStabilityTest_lib",
  deps = [
    ":HMDStabilityTest"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMainThreadDispatch_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDKStingerHookPool/HMDKStingerHookPool.h",
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDKStingerHookPool/HMDOCMethod.h",
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDMainThreadDispatch.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMainThreadDispatch_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMainThreadDispatch_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDKStingerHookPool/HMDKStingerHookPool.h",
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDKStingerHookPool/HMDOCMethod.h",
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDMainThreadDispatch.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMainThreadDispatch_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDMainThreadDispatch_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDMainThreadDispatch_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDMainThreadDispatch_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDMainThreadDispatch-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDMainThreadDispatch-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDMainThreadDispatch_srcs",
  srcs = [
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDKStingerHookPool/HMDKStingerHookPool.m",
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDMainThreadDispatch.m",
    "Heimdallr/Classes/HMDMainThreadDispatch/Common/Private/HMDKStingerHookPool/HMDOCMethod.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDMainThreadDispatch_oc",
  enable_modules = 1,
  srcs = [
    "HMDMainThreadDispatch_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDMainThreadDispatch_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDMainThreadDispatch-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Stinger//:Stinger_objc_interface",
    "@Stinger//:Stinger_swift_interface",
    ":HMDMainThreadDispatch_objc_interface",
    "@Stinger//:Stinger_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDMainThreadDispatch",
  deps = [
    ":HMDMainThreadDispatch_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDMainThreadDispatch_lib",
  deps = [
    ":HMDMainThreadDispatch"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDPowerMonitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitor+Private.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitorDataListener.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitorDelegate.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitorSession+Private.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Internal/HDMPowerMonitorInternalSession.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Internal/HMDPowerMonitorDataCollector.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Utility/HMDPowerLogUtility.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Utility/NSDictionary+HMDPL.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDPowerMonitor_public_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/HMDPowerMonitor.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/HMDPowerMonitorConfig.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Record/HMDPowerMonitorRecord.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Session/HMDPowerMonitorSession.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Session/HMDPowerMonitorSessionConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDPowerMonitor_hdrs",
  srcs = [
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitor+Private.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitorDataListener.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitorDelegate.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/HMDPowerMonitorSession+Private.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Internal/HDMPowerMonitorInternalSession.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Internal/HMDPowerMonitorDataCollector.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Utility/HMDPowerLogUtility.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Utility/NSDictionary+HMDPL.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/HMDPowerMonitor.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/HMDPowerMonitorConfig.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Record/HMDPowerMonitorRecord.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Session/HMDPowerMonitorSession.h",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Session/HMDPowerMonitorSessionConfig.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDPowerMonitor_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDPowerMonitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDPowerMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HMDPowerMonitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDPowerMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_HMDPowerMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HMDPowerMonitor_srcs",
  srcs = [
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Internal/HDMPowerMonitorInternalSession.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Utility/HMDPowerLogUtility.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/HMDPowerMonitor.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/HMDPowerMonitorConfig.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Internal/HMDPowerMonitorDataCollector.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Record/HMDPowerMonitorRecord.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Session/HMDPowerMonitorSession.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Public/Session/HMDPowerMonitorSessionConfig.m",
    "Heimdallr/Classes/HMDPowerMonitor/Common/Private/Utility/NSDictionary+HMDPL.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HMDPowerMonitor_oc",
  enable_modules = 1,
  srcs = [
    "HMDPowerMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HMDPowerMonitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/HMDPowerMonitor-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":HMDPowerMonitor_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HMDPowerMonitor",
  deps = [
    ":HMDPowerMonitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HMDPowerMonitor_lib",
  deps = [
    ":HMDPowerMonitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PrivateServices_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "PrivateServices_hdrs"
  ],
  pch = "pod_support/Headers/Private/PrivateServices-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":PrivateServices_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices",
  deps = [
    ":PrivateServices_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PrivateServices_lib",
  deps = [
    ":PrivateServices"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_DebugLogger_private_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/DebugLogger/Common/HMDDebugLogger.h",
    "Heimdallr/Classes/PrivateServices/DebugLogger/Common/HMDDebugLoggerProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_DebugLogger_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_DebugLogger_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/DebugLogger/Common/HMDDebugLogger.h",
    "Heimdallr/Classes/PrivateServices/DebugLogger/Common/HMDDebugLoggerProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_DebugLogger_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDDebugLogger.h",
    "pod_support/Headers/Private/Heimdallr/HMDDebugLoggerProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_DebugLogger_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_DebugLogger_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PrivateServices_DebugLogger_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_DebugLogger-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_DebugLogger-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_DebugLogger_srcs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/DebugLogger/Common/HMDDebugLogger.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_DebugLogger_oc",
  enable_modules = 1,
  srcs = [
    "PrivateServices_DebugLogger_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "PrivateServices_DebugLogger_hdrs"
  ],
  pch = "pod_support/Headers/Private/PrivateServices_DebugLogger-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":PrivateServices_DebugLogger_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_DebugLogger",
  deps = [
    ":PrivateServices_DebugLogger_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PrivateServices_DebugLogger_lib",
  deps = [
    ":PrivateServices_DebugLogger"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Disaster_private_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/Disaster/Common/HMDServerStateChecker.h",
    "Heimdallr/Classes/PrivateServices/Disaster/Common/HMDServerStateDefinition.h",
    "Heimdallr/Classes/PrivateServices/Disaster/Common/HMDServerStateService.h",
    "Heimdallr/Classes/PrivateServices/Disaster/ToD/HMDServerStateManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Disaster_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Disaster_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/Disaster/Common/HMDServerStateChecker.h",
    "Heimdallr/Classes/PrivateServices/Disaster/Common/HMDServerStateDefinition.h",
    "Heimdallr/Classes/PrivateServices/Disaster/Common/HMDServerStateService.h",
    "Heimdallr/Classes/PrivateServices/Disaster/ToD/HMDServerStateManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Disaster_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDServerStateChecker.h",
    "pod_support/Headers/Private/Heimdallr/HMDServerStateDefinition.h",
    "pod_support/Headers/Private/Heimdallr/HMDServerStateManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDServerStateService.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_Disaster_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_Disaster_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PrivateServices_Disaster_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_Disaster-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_Disaster-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Disaster_srcs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/Disaster/ToD/HMDServerStateChecker+HMD.m",
    "Heimdallr/Classes/PrivateServices/Disaster/ToD/HMDServerStateManager.m",
    "Heimdallr/Classes/PrivateServices/Disaster/ToD/HMDServerStateService+HMD.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_Disaster_oc",
  enable_modules = 1,
  srcs = [
    "PrivateServices_Disaster_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "PrivateServices_Disaster_hdrs"
  ],
  pch = "pod_support/Headers/Private/PrivateServices_Disaster-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":PrivateServices_Disaster_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_Disaster",
  deps = [
    ":PrivateServices_Disaster_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PrivateServices_Disaster_lib",
  deps = [
    ":PrivateServices_Disaster"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Monitor_private_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/Monitor/Common/HMDMonitorService.h",
    "Heimdallr/Classes/PrivateServices/Monitor/Common/HMDMonitorServiceProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Monitor_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Monitor_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/Monitor/Common/HMDMonitorService.h",
    "Heimdallr/Classes/PrivateServices/Monitor/Common/HMDMonitorServiceProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Monitor_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDMonitorService.h",
    "pod_support/Headers/Private/Heimdallr/HMDMonitorServiceProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_Monitor_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_Monitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PrivateServices_Monitor_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_Monitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_Monitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_Monitor_srcs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/Monitor/Common/HMDMonitorService.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_Monitor_oc",
  enable_modules = 1,
  srcs = [
    "PrivateServices_Monitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "PrivateServices_Monitor_hdrs"
  ],
  pch = "pod_support/Headers/Private/PrivateServices_Monitor-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":PrivateServices_Monitor_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_Monitor",
  deps = [
    ":PrivateServices_Monitor_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PrivateServices_Monitor_lib",
  deps = [
    ":PrivateServices_Monitor"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_URLSettings_private_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLManager.h",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLProvider.h",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLSettings.h",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLSettingsProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_URLSettings_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_URLSettings_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLManager.h",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLProvider.h",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLSettings.h",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLSettingsProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_URLSettings_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDURLManager.h",
    "pod_support/Headers/Private/Heimdallr/HMDURLProvider.h",
    "pod_support/Headers/Private/Heimdallr/HMDURLSettings.h",
    "pod_support/Headers/Private/Heimdallr/HMDURLSettingsProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_URLSettings_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_URLSettings_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PrivateServices_URLSettings_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_URLSettings-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_URLSettings-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_URLSettings_srcs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/URLSettings/ToD/HMDDefaultURLSettings.m",
    "Heimdallr/Classes/PrivateServices/URLSettings/Common/HMDURLManager.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_URLSettings_oc",
  enable_modules = 1,
  srcs = [
    "PrivateServices_URLSettings_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "PrivateServices_URLSettings_hdrs"
  ],
  pch = "pod_support/Headers/Private/PrivateServices_URLSettings-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":PrivateServices_URLSettings_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_URLSettings",
  deps = [
    ":PrivateServices_URLSettings_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PrivateServices_URLSettings_lib",
  deps = [
    ":PrivateServices_URLSettings"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_ZipArchive_private_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/ZipArchive/Common/HMDZipArchiveProtocol.h",
    "Heimdallr/Classes/PrivateServices/ZipArchive/Common/HMDZipArchiveService.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_ZipArchive_public_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_ZipArchive_hdrs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/ZipArchive/Common/HMDZipArchiveProtocol.h",
    "Heimdallr/Classes/PrivateServices/ZipArchive/Common/HMDZipArchiveService.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_ZipArchive_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/Heimdallr/HMDZipArchiveProtocol.h",
    "pod_support/Headers/Private/Heimdallr/HMDZipArchiveService.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_ZipArchive_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_ZipArchive_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PrivateServices_ZipArchive_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_ZipArchive-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_PrivateServices_ZipArchive-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PrivateServices_ZipArchive_srcs",
  srcs = [
    "Heimdallr/Classes/PrivateServices/ZipArchive/Common/HMDZipArchiveService.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PrivateServices_ZipArchive_oc",
  enable_modules = 1,
  srcs = [
    "PrivateServices_ZipArchive_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "PrivateServices_ZipArchive_hdrs"
  ],
  pch = "pod_support/Headers/Private/PrivateServices_ZipArchive-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@SSZipArchive//:SSZipArchive_objc_interface",
    "@SSZipArchive//:SSZipArchive_swift_interface",
    ":PrivateServices_ZipArchive_objc_interface",
    "@SSZipArchive//:SSZipArchive_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PrivateServices_ZipArchive",
  deps = [
    ":PrivateServices_ZipArchive_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PrivateServices_ZipArchive_lib",
  deps = [
    ":PrivateServices_ZipArchive"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_private_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_public_hdrs",
  srcs = [
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.dynamic.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.exception.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.image.main.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.memory.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.meta.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.sdk_info.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.vmmap.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectoryTest.h",
    "Heimdallr/Tests/src/OpenTracing/Public/HMDOTManager+HMDUnitTest.h",
    "Heimdallr/Tests/src/UITracker/Private/Extend/Aspects.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_hdrs",
  srcs = [
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.dynamic.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.exception.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.image.main.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.memory.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.meta.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.sdk_info.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectory.vmmap.inc",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectoryTest.h",
    "Heimdallr/Tests/src/OpenTracing/Public/HMDOTManager+HMDUnitTest.h",
    "Heimdallr/Tests/src/UITracker/Private/Extend/Aspects.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Tests_swift_interface",
  deps = [
    ":Tests_swift"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Tests_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Tests_module_map",
  module_map = "pod_support/Headers/Public/Heimdallr/Heimdallr_Tests-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/Heimdallr/Heimdallr_Tests-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_swift_srcs",
  srcs = [
    "Heimdallr/Tests/src/Utility/Public/ARC/HMDISAHookOptimizationTestSwift.swift"
  ],
  visibility = [
    "//visibility:public"
  ]
)
swift_library(
  name = "Tests_swift",
  module_name = "Heimdallr",
  srcs = [
    "Tests_swift_srcs"
  ],
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_public_interface",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@OCMock//:OCMock_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    "@OCMock//:OCMock_swift_interface",
    "@BDFishhook//:BDFishhook_module_map",
    "@OCMock//:OCMock_module_map",
    ":Tests_module_map",
    ":Tests_objc_interface"
  ],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ) + [
    "-DCOCOAPODS",
    "-suppress-warnings",
    "-import-underlying-module",
    "-Xcc",
    "-fobjc-weak",
    "-Xcc",
    "-stdlib=libc++",
    "-Xcc",
    "-DCOCOAPODS=1",
    "-Xcc",
    "-fdiagnostics-show-note-include-stack",
    "-Xcc",
    "-fno-common",
    "-Xcc",
    "-fmessage-length=0",
    "-Xcc",
    "-fpascal-strings",
    "-Xcc",
    "-fstrict-aliasing",
    "-Xcc",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Xcc",
    "-I.",
    "-Xcc",
    "-Wno-nullability-completeness",
    "-Xcc",
    "-Wno-nonnull",
    "-Xcc",
    "-Wno-nullability",
    "-Xcc",
    "-Wno-incomplete-umbrella"
  ],
  generates_header = True,
  generated_header_name = "Heimdallr-Swift.h",
  features = [
    "swift.no_generated_module_map",
    "swift.opt_uses_wmo",
    "swift.opt_uses_osize"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Tests_srcs",
  srcs = [
    "Heimdallr/Tests/src/UITracker/Private/Extend/Aspects.m",
    "Heimdallr/Tests/src/BDFishhook/BDFishhookTests.m",
    "Heimdallr/Tests/src/HeimdallrDemoTests.m",
    "Heimdallr/Tests/src/Utility/Public/ARC/HeimdallrUtilitiesTest.m",
    "Heimdallr/Tests/src/Utility/Public/ARC/HMDAnalyzerTests.m",
    "Heimdallr/Tests/src/Utility/Private/ARC/HMDAttributesTests.m",
    "Heimdallr/Tests/src/BootingProtect/HMDBootingProtectionTests.m",
    "Heimdallr/Tests/src/Config/Private/HMDConfigManagerTest.m",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/Detect/Internal/Signal/HMDCrashDetectFatalSignal_stack_chk_failed_test.m",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashDirectory/HMDCrashDirectoryTest.m",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashlogProcessor/HMDCrashInfoLoaderTest.m",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/HMDCrashKitTest.m",
    "Heimdallr/Tests/src/CrashDetector/HMDCrashTrackerTest.m",
    "Heimdallr/Tests/src/Utility/Public/ARC/HMDISAHookOptimizationTest.m",
    "Heimdallr/Tests/src/Protect/Private/ARC/KVO/HMDKVOProtectTest.m",
    "Heimdallr/Tests/src/HMDMainThreadDispatch/HMDMainThreadDispatchTest.m",
    "Heimdallr/Tests/src/Network/HMDNetworkSpeedManagerTests.m",
    "Heimdallr/Tests/src/Protect/Private/ARC/KVO/HMDOCObjectAnalyzerTest.m",
    "Heimdallr/Tests/src/OpenTracing/Public/HMDOTBridgeTest.m",
    "Heimdallr/Tests/src/OpenTracing/Private/HMDOTManagerTest.m",
    "Heimdallr/Tests/src/OpenTracing/Public/HMDOTranceTest.m",
    "Heimdallr/Tests/src/OpenTracing/Public/HMDOTSpanTest.m",
    "Heimdallr/Tests/src/Protect/Public/HMDProtectCaptureTest.m",
    "Heimdallr/Tests/src/ProtectCustomCatch/HMDProtectCatchTests.m",
    "Heimdallr/Tests/src/Protect/Private/MRC/Containers/HMDProtectContainersTest.m",
    "Heimdallr/Tests/src/Protect/HMDProtectorShowAbilityTest.m",
    "Heimdallr/Tests/src/Protect/Public/HMDProtectorTest.m",
    "Heimdallr/Tests/src/Protect/Private/ARC/UnrecognizedSelector/HMDProtectUnrecognizedSelectorTest.m",
    "Heimdallr/Tests/src/UITracker/Private/UIManager/HMDUITrackerTests.m",
    "Heimdallr/Tests/src/Utility/Public/ARC/HMDUITrackerToolTest.m",
    "Heimdallr/Tests/src/Utility/Private/ARC/HMDUSELForwarderAssemblyTest.m",
    "Heimdallr/Tests/src/Utility/Private/ARC/HMDUserDefaultsTest.m",
    "Heimdallr/Tests/src/WatchdogProtect/Public/HMDWatchdogProtectManagerTest.m",
    "Heimdallr/Tests/src/WatchdogProtect/Private/HMDWatchdogProtectTrackerTest.m",
    "Heimdallr/Tests/src/Watchdog/HMDWatchdogTest.m",
    "Heimdallr/Tests/src/Protect/Private/ARC/Weak/HMDWeakRetainDeallocatingTests.m",
    "Heimdallr/Tests/src/WatchdogProtect/Private/DynamicProtect/HMDWPDynamicProtectFeatureTest.m",
    "Heimdallr/Tests/src/WatchdogProtect/Private/HMDWPUtilityTest.m",
    "Heimdallr/Tests/src/Utility/Public/ARC/NSDate+HMDAccurateTest.m",
    "Heimdallr/Tests/src/CrashCapture/Private/MDCrashKit/CrashlogProcessor/Model/NSString+HMDCrashTest.m",
    "Heimdallr/Tests/src/UITracker/Private/Extend/UIViewController+HMDUITrackerHookConfilictTest.m",
    "Heimdallr/Tests/src/UITracker/Private/Extend/UIViewController+HMDUITrackerHookPairTest.m",
    "Heimdallr/Tests/src/UITracker/Private/Extend/UIViewController+HMDUITrackerTest.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Tests_oc",
  enable_modules = 1,
  srcs = [
    "Tests_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Tests_hdrs"
  ],
  pch = "pod_support/Headers/Private/Tests-prefix.pch",
  deps = [
    ":Heimdallr_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":Heimdallr_private_includes",
    ":Heimdallr_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDFishhook//:BDFishhook_objc_interface",
    "@OCMock//:OCMock_objc_interface",
    "@BDFishhook//:BDFishhook_swift_interface",
    "@OCMock//:OCMock_swift_interface",
    ":Tests_swift",
    ":Tests_objc_interface",
    "@BDFishhook//:BDFishhook_module_map",
    "@OCMock//:OCMock_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-fno-c++-static-destructors",
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Tests",
  deps = [
    ":Tests_oc",
    ":Tests_swift"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Tests_lib",
  deps = [
    ":Tests"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lark_Heimdallr_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@Heimdallr//:Heimdallr_objc_interface", "@Heimdallr//:ALog_objc_interface", "@Heimdallr//:BootingProtect_objc_interface", "@Heimdallr//:CPUException_objc_interface", "@Heimdallr//:ClassCoverage_objc_interface", "@Heimdallr//:CloudCommand_objc_interface", "@Heimdallr//:Core_objc_interface", "@Heimdallr//:CrashCapture_objc_interface", "@Heimdallr//:CrashDetector_objc_interface", "@Heimdallr//:Dart_objc_interface", "@Heimdallr//:DeviceInfo_objc_interface", "@Heimdallr//:GPUUsage_objc_interface", "@Heimdallr//:GWPASan_objc_interface", "@Heimdallr//:HMDANR_objc_interface", "@Heimdallr//:HMDAPPExitReason_objc_interface", "@Heimdallr//:HMDAlogProtocol_objc_interface", "@Heimdallr//:HMDCaptureBacktrace_objc_interface", "@Heimdallr//:HMDConfig_objc_interface", "@Heimdallr//:HMDCoreDump_objc_interface", "@Heimdallr//:HMDCrashPrevent_objc_interface", "@Heimdallr//:HMDDomestic_objc_interface", "@Heimdallr//:HMDFDMonitor_objc_interface", "@Heimdallr//:HMDLaunchOptimizer_objc_interface", "@Heimdallr//:HMDLaunchTracing_objc_interface", "@Heimdallr//:HMDMallocHook_objc_interface", "@Heimdallr//:HMDMetricKit_objc_interface", "@Heimdallr//:HMDOOMCrash_objc_interface", "@Heimdallr//:HMDSession_objc_interface", "@Heimdallr//:HMDSlardarMalloc_objc_interface", "@Heimdallr//:HMDSlardarMalloc_HMDTracker_objc_interface", "@Heimdallr//:HMDSlardarMalloc_NanoOptimize_objc_interface", "@Heimdallr//:HMDSlardarMalloc_ScalableOptimize_objc_interface", "@Heimdallr//:HMDStart_objc_interface", "@Heimdallr//:HMDStore_objc_interface", "@Heimdallr//:HMDThreadMonitor_objc_interface", "@Heimdallr//:HMDWatchDog_objc_interface", "@Heimdallr//:HTTPRequestTracker_objc_interface", "@Heimdallr//:Log_objc_interface", "@Heimdallr//:Mach_objc_interface", "@Heimdallr//:MemoryGraph_objc_interface", "@Heimdallr//:Monitors_objc_interface", "@Heimdallr//:Network_objc_interface", "@Heimdallr//:NetworkTraffic_objc_interface", "@Heimdallr//:OpenTracing_objc_interface", "@Heimdallr//:PrivateServices_DebugLogger_objc_interface", "@Heimdallr//:PrivateServices_Disaster_objc_interface", "@Heimdallr//:PrivateServices_Monitor_objc_interface", "@Heimdallr//:PrivateServices_URLSettings_objc_interface", "@Heimdallr//:PrivateServices_ZipArchive_objc_interface", "@Heimdallr//:Protect_objc_interface", "@Heimdallr//:ProtectCustomCatch_objc_interface", "@Heimdallr//:Runloop_objc_interface", "@Heimdallr//:TTMonitor_objc_interface", "@Heimdallr//:TTNet_objc_interface", "@Heimdallr//:UIFrozen_objc_interface", "@Heimdallr//:UITracker_objc_interface", "@Heimdallr//:Upload_objc_interface", "@Heimdallr//:UserException_objc_interface", "@Heimdallr//:Utility_objc_interface", "@Heimdallr//:WatchdogProtect_objc_interface", "@Heimdallr//:Zombie_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_Heimdallr",
  target_name = "Lark",
  module_name = "Heimdallr",
  public_hdrs = ["@Heimdallr//:Heimdallr_root_public_hdrs", "@Heimdallr//:ALog_public_hdrs", "@Heimdallr//:BootingProtect_public_hdrs", "@Heimdallr//:CPUException_public_hdrs", "@Heimdallr//:ClassCoverage_public_hdrs", "@Heimdallr//:CloudCommand_public_hdrs", "@Heimdallr//:Core_public_hdrs", "@Heimdallr//:CrashCapture_public_hdrs", "@Heimdallr//:CrashDetector_public_hdrs", "@Heimdallr//:Dart_public_hdrs", "@Heimdallr//:DeviceInfo_public_hdrs", "@Heimdallr//:GPUUsage_public_hdrs", "@Heimdallr//:GWPASan_public_hdrs", "@Heimdallr//:HMDANR_public_hdrs", "@Heimdallr//:HMDAPPExitReason_public_hdrs", "@Heimdallr//:HMDAlogProtocol_public_hdrs", "@Heimdallr//:HMDCaptureBacktrace_public_hdrs", "@Heimdallr//:HMDConfig_public_hdrs", "@Heimdallr//:HMDCoreDump_public_hdrs", "@Heimdallr//:HMDCrashPrevent_public_hdrs", "@Heimdallr//:HMDDomestic_public_hdrs", "@Heimdallr//:HMDFDMonitor_public_hdrs", "@Heimdallr//:HMDLaunchOptimizer_public_hdrs", "@Heimdallr//:HMDLaunchTracing_public_hdrs", "@Heimdallr//:HMDMallocHook_public_hdrs", "@Heimdallr//:HMDMetricKit_public_hdrs", "@Heimdallr//:HMDOOMCrash_public_hdrs", "@Heimdallr//:HMDSession_public_hdrs", "@Heimdallr//:HMDSlardarMalloc_public_hdrs", "@Heimdallr//:HMDSlardarMalloc_HMDTracker_public_hdrs", "@Heimdallr//:HMDSlardarMalloc_NanoOptimize_public_hdrs", "@Heimdallr//:HMDSlardarMalloc_ScalableOptimize_public_hdrs", "@Heimdallr//:HMDStart_public_hdrs", "@Heimdallr//:HMDStore_public_hdrs", "@Heimdallr//:HMDThreadMonitor_public_hdrs", "@Heimdallr//:HMDWatchDog_public_hdrs", "@Heimdallr//:HTTPRequestTracker_public_hdrs", "@Heimdallr//:Log_public_hdrs", "@Heimdallr//:Mach_public_hdrs", "@Heimdallr//:MemoryGraph_public_hdrs", "@Heimdallr//:Monitors_public_hdrs", "@Heimdallr//:Network_public_hdrs", "@Heimdallr//:NetworkTraffic_public_hdrs", "@Heimdallr//:OpenTracing_public_hdrs", "@Heimdallr//:PrivateServices_DebugLogger_public_hdrs", "@Heimdallr//:PrivateServices_Disaster_public_hdrs", "@Heimdallr//:PrivateServices_Monitor_public_hdrs", "@Heimdallr//:PrivateServices_URLSettings_public_hdrs", "@Heimdallr//:PrivateServices_ZipArchive_public_hdrs", "@Heimdallr//:Protect_public_hdrs", "@Heimdallr//:ProtectCustomCatch_public_hdrs", "@Heimdallr//:Runloop_public_hdrs", "@Heimdallr//:TTMonitor_public_hdrs", "@Heimdallr//:TTNet_public_hdrs", "@Heimdallr//:UIFrozen_public_hdrs", "@Heimdallr//:UITracker_public_hdrs", "@Heimdallr//:Upload_public_hdrs", "@Heimdallr//:UserException_public_hdrs", "@Heimdallr//:Utility_public_hdrs", "@Heimdallr//:WatchdogProtect_public_hdrs", "@Heimdallr//:Zombie_public_hdrs"],
  private_hdrs = ["@Heimdallr//:Heimdallr_root_private_hdrs", "@Heimdallr//:ALog_private_hdrs", "@Heimdallr//:BootingProtect_private_hdrs", "@Heimdallr//:CPUException_private_hdrs", "@Heimdallr//:ClassCoverage_private_hdrs", "@Heimdallr//:CloudCommand_private_hdrs", "@Heimdallr//:Core_private_hdrs", "@Heimdallr//:CrashCapture_private_hdrs", "@Heimdallr//:CrashDetector_private_hdrs", "@Heimdallr//:Dart_private_hdrs", "@Heimdallr//:DeviceInfo_private_hdrs", "@Heimdallr//:GPUUsage_private_hdrs", "@Heimdallr//:GWPASan_private_hdrs", "@Heimdallr//:HMDANR_private_hdrs", "@Heimdallr//:HMDAPPExitReason_private_hdrs", "@Heimdallr//:HMDAlogProtocol_private_hdrs", "@Heimdallr//:HMDCaptureBacktrace_private_hdrs", "@Heimdallr//:HMDConfig_private_hdrs", "@Heimdallr//:HMDCoreDump_private_hdrs", "@Heimdallr//:HMDCrashPrevent_private_hdrs", "@Heimdallr//:HMDDomestic_private_hdrs", "@Heimdallr//:HMDFDMonitor_private_hdrs", "@Heimdallr//:HMDLaunchOptimizer_private_hdrs", "@Heimdallr//:HMDLaunchTracing_private_hdrs", "@Heimdallr//:HMDMallocHook_private_hdrs", "@Heimdallr//:HMDMetricKit_private_hdrs", "@Heimdallr//:HMDOOMCrash_private_hdrs", "@Heimdallr//:HMDSession_private_hdrs", "@Heimdallr//:HMDSlardarMalloc_private_hdrs", "@Heimdallr//:HMDSlardarMalloc_HMDTracker_private_hdrs", "@Heimdallr//:HMDSlardarMalloc_NanoOptimize_private_hdrs", "@Heimdallr//:HMDSlardarMalloc_ScalableOptimize_private_hdrs", "@Heimdallr//:HMDStart_private_hdrs", "@Heimdallr//:HMDStore_private_hdrs", "@Heimdallr//:HMDThreadMonitor_private_hdrs", "@Heimdallr//:HMDWatchDog_private_hdrs", "@Heimdallr//:HTTPRequestTracker_private_hdrs", "@Heimdallr//:Log_private_hdrs", "@Heimdallr//:Mach_private_hdrs", "@Heimdallr//:MemoryGraph_private_hdrs", "@Heimdallr//:Monitors_private_hdrs", "@Heimdallr//:Network_private_hdrs", "@Heimdallr//:NetworkTraffic_private_hdrs", "@Heimdallr//:OpenTracing_private_hdrs", "@Heimdallr//:PrivateServices_DebugLogger_private_hdrs", "@Heimdallr//:PrivateServices_Disaster_private_hdrs", "@Heimdallr//:PrivateServices_Monitor_private_hdrs", "@Heimdallr//:PrivateServices_URLSettings_private_hdrs", "@Heimdallr//:PrivateServices_ZipArchive_private_hdrs", "@Heimdallr//:Protect_private_hdrs", "@Heimdallr//:ProtectCustomCatch_private_hdrs", "@Heimdallr//:Runloop_private_hdrs", "@Heimdallr//:TTMonitor_private_hdrs", "@Heimdallr//:TTNet_private_hdrs", "@Heimdallr//:UIFrozen_private_hdrs", "@Heimdallr//:UITracker_private_hdrs", "@Heimdallr//:Upload_private_hdrs", "@Heimdallr//:UserException_private_hdrs", "@Heimdallr//:Utility_private_hdrs", "@Heimdallr//:WatchdogProtect_private_hdrs", "@Heimdallr//:Zombie_private_hdrs"],
  srcs = ["@Heimdallr//:ALog_srcs", "@Heimdallr//:BootingProtect_srcs", "@Heimdallr//:CPUException_srcs", "@Heimdallr//:ClassCoverage_srcs", "@Heimdallr//:CloudCommand_srcs", "@Heimdallr//:Core_srcs", "@Heimdallr//:CrashCapture_srcs", "@Heimdallr//:CrashDetector_srcs", "@Heimdallr//:Dart_srcs", "@Heimdallr//:DeviceInfo_srcs", "@Heimdallr//:GPUUsage_srcs", "@Heimdallr//:GWPASan_srcs", "@Heimdallr//:HMDANR_srcs", "@Heimdallr//:HMDAPPExitReason_srcs", "@Heimdallr//:HMDAlogProtocol_srcs", "@Heimdallr//:HMDCaptureBacktrace_srcs", "@Heimdallr//:HMDConfig_srcs", "@Heimdallr//:HMDCoreDump_srcs", "@Heimdallr//:HMDCrashPrevent_srcs", "@Heimdallr//:HMDDomestic_srcs", "@Heimdallr//:HMDFDMonitor_srcs", "@Heimdallr//:HMDLaunchOptimizer_srcs", "@Heimdallr//:HMDLaunchTracing_srcs", "@Heimdallr//:HMDMallocHook_srcs", "@Heimdallr//:HMDMetricKit_srcs", "@Heimdallr//:HMDOOMCrash_srcs", "@Heimdallr//:HMDSession_srcs", "@Heimdallr//:HMDSlardarMalloc_HMDTracker_srcs", "@Heimdallr//:HMDSlardarMalloc_NanoOptimize_srcs", "@Heimdallr//:HMDSlardarMalloc_ScalableOptimize_srcs", "@Heimdallr//:HMDStart_srcs", "@Heimdallr//:HMDStore_srcs", "@Heimdallr//:HMDThreadMonitor_srcs", "@Heimdallr//:HMDWatchDog_srcs", "@Heimdallr//:HTTPRequestTracker_srcs", "@Heimdallr//:Log_srcs", "@Heimdallr//:Mach_srcs", "@Heimdallr//:MemoryGraph_srcs", "@Heimdallr//:Monitors_srcs", "@Heimdallr//:NetworkTraffic_srcs", "@Heimdallr//:Network_srcs", "@Heimdallr//:OpenTracing_srcs", "@Heimdallr//:PrivateServices_DebugLogger_srcs", "@Heimdallr//:PrivateServices_Disaster_srcs", "@Heimdallr//:PrivateServices_Monitor_srcs", "@Heimdallr//:PrivateServices_URLSettings_srcs", "@Heimdallr//:PrivateServices_ZipArchive_srcs", "@Heimdallr//:ProtectCustomCatch_srcs", "@Heimdallr//:Protect_srcs", "@Heimdallr//:Runloop_srcs", "@Heimdallr//:TTMonitor_srcs", "@Heimdallr//:TTNet_srcs", "@Heimdallr//:UIFrozen_srcs", "@Heimdallr//:UITracker_srcs", "@Heimdallr//:Upload_srcs", "@Heimdallr//:UserException_srcs", "@Heimdallr//:Utility_srcs", "@Heimdallr//:WatchdogProtect_srcs", "@Heimdallr//:Zombie_srcs"],
  non_arc_srcs = ["@Heimdallr//:Protect_non_arc_srcs", "@Heimdallr//:Utility_non_arc_srcs", "@Heimdallr//:Zombie_non_arc_srcs"],
  deps = ["@Heimdallr//:Heimdallr_Core_script_0"],
  pod_deps = ["BDALog", "BDAlogProtocol", "AWECloudCommand", "Hermas", "TTReachability", "BDFishhook", "HMDGWPASan", "FrameRecover", "FMDB", "MemoryGraphCapture", "BDDataDecorator", "SSZipArchive", "Stinger", "BDNetworkTag", "TTNetworkManager", "TTMacroManager"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DHeimdallr_POD_VERSION=@\\\"34338756_0.8.45.0-rc.2-Lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "Heimdallr_copts", []),
  cxxopts = ["-fno-c++-static-destructors", "-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "Heimdallr_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = [],
  weak_sdk_frameworks = ["MetricKit"],
  sdk_dylibs = ["c++", "c++abi", "z"],
  data = ["@Heimdallr//:Core_resource_group"],
  features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "Heimdallr_features", []),
  cxx_features = [] + getattr(defs_external_objc_library, "common_cxx_features", []) 
    + getattr(defs_external_objc_library, "Heimdallr_cpp_features", []),
  objc_features = [] + getattr(defs_external_objc_library, "common_objc_features", []) 
    + getattr(defs_external_objc_library, "Heimdallr_objc_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "Heimdallr_features", []),
  link_dynamic = getattr(defs_external_objc_library, "Heimdallr_dynamic", False),
  tags = getattr(defs_external_objc_library, "Heimdallr_tags", []),
  pch = "pod_support/Headers/Private/Lark_Heimdallr-prefix.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("Heimdallr", {}),
  visibility = ["//visibility:public"],
)