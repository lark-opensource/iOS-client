load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "BDJSBridgeAuthManager_pod_hdrs",
  srcs = [
    ":BDJSBridgeAuthManager_root_pod_hdrs",
    ":Core_pod_hdrs",
    ":CN_pod_hdrs",
    ":Debug_pod_hdrs",
    ":Rename_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "BDJSBridgeAuthManager_private_includes",
  include = [
    "external/BDJSBridgeAuthManager/pod_support/Headers/Private/BDJSBridgeAuthManager/"
  ],
  deps = [],
  external_name = "BDJSBridgeAuthManager"
)
gen_includes(
  name = "BDJSBridgeAuthManager_public_includes",
  include = [
    "external/BDJSBridgeAuthManager/pod_support/Headers/Public/BDJSBridgeAuthManager/"
  ],
  deps = [],
  external_name = "BDJSBridgeAuthManager"
)
filegroup(
  name = "_BDJSBridgeAuthManager_hdrs",
  srcs = [
    ":BDJSBridgeAuthManager_root_hdrs",
    ":Core_hdrs",
    ":CN_hdrs",
    ":Debug_hdrs",
    ":Rename_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "BDJSBridgeAuthManager_xcode_hmapsource",
  hdrs = [
    ":BDJSBridgeAuthManager_root_hdrs",
    ":CN_hdrs",
    ":Core_hdrs",
    ":Rename_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "BDJSBridgeAuthManager_xcode_hmap",
  dep = ":BDJSBridgeAuthManager_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/BDJSBridgeAuthManager/*-bitsky-generated.modulemap", "pod_support/Headers/Public/BDJSBridgeAuthManager/*-bitsky-generated-umbrella.h"]))
gen_includes(
  name = "BDJSBridgeAuthManager_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "BDJSBridgeAuthManager",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "BDJSBridgeAuthManager_xcode_hmap_includes",
  include = [],
  include_files = [
    ":BDJSBridgeAuthManager_xcode_hmap"
  ],
  external_name = "BDJSBridgeAuthManager",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BDJSBridgeAuthManager_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "BDJSBridgeAuthManager_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "BDJSBridgeAuthManager_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "BDJSBridgeAuthManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "BDJSBridgeAuthManager_module_map",
  module_map = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "BDJSBridgeAuthManager_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "BDJSBridgeAuthManager_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":BDJSBridgeAuthManager_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":BDJSBridgeAuthManager_private_includes",
    ":BDJSBridgeAuthManager_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":BDJSBridgeAuthManager_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DBDJSBridgeAuthManager_POD_VERSION=@\\\"9999_1.4.2\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "BDJSBridgeAuthManager",
  deps = [
    ":BDJSBridgeAuthManager_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "BDJSBridgeAuthManager_lib",
  deps = [
    ":BDJSBridgeAuthManager"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/Core/IESBridgeAuthManager.h",
    "BDJSBridgeAuthManager/Classes/Core/IESBridgeAuthModel.h",
    "BDJSBridgeAuthManager/Classes/Core/TTNetworkManager+IESWKAddition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/BDJSBridgeAuthManager/IESBridgeAuthManager.h",
    "pod_support/Headers/Private/BDJSBridgeAuthManager/IESBridgeAuthModel.h",
    "pod_support/Headers/Private/BDJSBridgeAuthManager/TTNetworkManager+IESWKAddition.h",
    "pod_support/Headers/Public/BDJSBridgeAuthManager/IESBridgeAuthManager.h",
    "pod_support/Headers/Public/BDJSBridgeAuthManager/IESBridgeAuthModel.h",
    "pod_support/Headers/Public/BDJSBridgeAuthManager/TTNetworkManager+IESWKAddition.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_srcs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/Core/IESBridgeAuthManager.m",
    "BDJSBridgeAuthManager/Classes/Core/IESBridgeAuthModel.m",
    "BDJSBridgeAuthManager/Classes/Core/TTNetworkManager+IESWKAddition.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [
    "Core_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":BDJSBridgeAuthManager_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":BDJSBridgeAuthManager_private_includes",
    ":BDJSBridgeAuthManager_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAssert//:BDAssert_objc_interface",
    "@Godzippa//:Godzippa_objc_interface",
    "@Heimdallr//:UserException_objc_interface",
    "@TTNetworkManager//:TTNetworkManager_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    "@BDAssert//:BDAssert_swift_interface",
    "@Godzippa//:Godzippa_swift_interface",
    "@Heimdallr//:UserException_swift_interface",
    "@TTNetworkManager//:TTNetworkManager_swift_interface",
    ":Core_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map",
    "@BDAssert//:BDAssert_module_map",
    "@Godzippa//:Godzippa_module_map",
    "@Heimdallr//:UserException_module_map",
    "@TTNetworkManager//:TTNetworkManager_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DBDJSBridgeAuthManager_POD_VERSION=@\\\"9999_1.4.2\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CN_hdrs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/CN/IESBridgeAuthManager+CN.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CN_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/BDJSBridgeAuthManager/IESBridgeAuthManager+CN.h",
    "pod_support/Headers/Public/BDJSBridgeAuthManager/IESBridgeAuthManager+CN.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CN_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CN_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CN_module_map",
  module_map = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_CN-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_CN-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CN_srcs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/CN/IESBridgeAuthManager+CN.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CN_oc",
  enable_modules = 1,
  srcs = [
    "CN_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CN_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":BDJSBridgeAuthManager_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":BDJSBridgeAuthManager_private_includes",
    ":BDJSBridgeAuthManager_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":CN_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DBDJSBridgeAuthManager_POD_VERSION=@\\\"9999_1.4.2\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CN",
  deps = [
    ":CN_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CN_lib",
  deps = [
    ":CN"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_hdrs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/Debug/IESBridgeAuthManager+BDJSBridgeAuthDebug.h",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthDebugRowPlugin.h",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthDebugViewController.h",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthInfoDiffViewController.h",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthInfoViewController.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Debug_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Debug_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Debug_module_map",
  module_map = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Debug-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Debug-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_srcs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/Debug/IESBridgeAuthManager+BDJSBridgeAuthDebug.m",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthDebugRowPlugin.m",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthDebugViewController.m",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthInfoDiffViewController.m",
    "BDJSBridgeAuthManager/Classes/Debug/TTBridgeAuthInfoViewController.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Debug_oc",
  enable_modules = 1,
  srcs = [
    "Debug_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Debug_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":BDJSBridgeAuthManager_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":BDJSBridgeAuthManager_private_includes",
    ":BDJSBridgeAuthManager_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@ByteDanceKit//:ByteDanceKit_objc_interface",
    "@TTDebugCore//:TTDebugCore_objc_interface",
    "@ByteDanceKit//:ByteDanceKit_swift_interface",
    "@TTDebugCore//:TTDebugCore_swift_interface",
    ":Debug_objc_interface",
    "@ByteDanceKit//:ByteDanceKit_module_map",
    "@TTDebugCore//:TTDebugCore_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DBDJSBridgeAuthManager_POD_VERSION=@\\\"9999_1.4.2\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Debug",
  deps = [
    ":Debug_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Debug_lib",
  deps = [
    ":Debug"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Rename_hdrs",
  srcs = [
    "BDJSBridgeAuthManager/Classes/Rename/BDJSBridgeAuthManager_Rename.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Rename_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Rename.h",
    "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Rename.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Rename_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Rename_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Rename_module_map",
  module_map = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Rename-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/BDJSBridgeAuthManager/BDJSBridgeAuthManager_Rename-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Rename_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Rename_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":BDJSBridgeAuthManager_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":BDJSBridgeAuthManager_private_includes",
    ":BDJSBridgeAuthManager_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Rename_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DBDJSBridgeAuthManager_POD_VERSION=@\\\"9999_1.4.2\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Rename",
  deps = [
    ":Rename_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Rename_lib",
  deps = [
    ":Rename"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_BDJSBridgeAuthManager_module_map",
  module_map = "@BDJSBridgeAuthManager//:pod_support/Headers/Public/BDJSBridgeAuthManager/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@BDJSBridgeAuthManager//:pod_support/Headers/Public/BDJSBridgeAuthManager/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_BDJSBridgeAuthManager_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@BDJSBridgeAuthManager//:CN_objc_interface", "@BDJSBridgeAuthManager//:Core_objc_interface", "@BDJSBridgeAuthManager//:Rename_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_BDJSBridgeAuthManager",
  target_name = "Lark",
  module_name = "BDJSBridgeAuthManager",
  hdrs = ["@BDJSBridgeAuthManager//:CN_pod_hdrs", "@BDJSBridgeAuthManager//:Core_pod_hdrs", "@BDJSBridgeAuthManager//:Rename_pod_hdrs"],
  srcs = ["@BDJSBridgeAuthManager//:CN_srcs", "@BDJSBridgeAuthManager//:Core_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = ["BDAlogProtocol", "BDAssert", "Godzippa", "Heimdallr", "TTNetworkManager"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DBDJSBridgeAuthManager_POD_VERSION=@\\\"9999_1.4.2\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "BDJSBridgeAuthManager_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "BDJSBridgeAuthManager_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = [],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = [],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "BDJSBridgeAuthManager_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "BDJSBridgeAuthManager_features", []),
  link_dynamic = getattr(defs_external_objc_library, "BDJSBridgeAuthManager_dynamic", False),
  tags = getattr(defs_external_objc_library, "BDJSBridgeAuthManager_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("BDJSBridgeAuthManager", {}),
  visibility = ["//visibility:public"],
)