load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "DVEFoundationKit_pod_hdrs",
  srcs = [
    ":DVEFoundationKit_root_pod_hdrs",
    ":Core_pod_hdrs",
    ":Adapter_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "DVEFoundationKit_private_includes",
  include = [
    "external/DVEFoundationKit/pod_support/Headers/Private/DVEFoundationKit/"
  ],
  deps = [],
  external_name = "DVEFoundationKit"
)
gen_includes(
  name = "DVEFoundationKit_public_includes",
  include = [
    "external/DVEFoundationKit/pod_support/Headers/Public/DVEFoundationKit/"
  ],
  deps = [],
  external_name = "DVEFoundationKit"
)
filegroup(
  name = "_DVEFoundationKit_hdrs",
  srcs = [
    ":DVEFoundationKit_root_hdrs",
    ":Core_hdrs",
    ":Adapter_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "DVEFoundationKit_xcode_hmapsource",
  hdrs = [
    ":DVEFoundationKit_root_hdrs",
    ":Adapter_hdrs",
    ":Core_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "DVEFoundationKit_xcode_hmap",
  dep = ":DVEFoundationKit_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/DVEFoundationKit/*-bitsky-generated.modulemap", "pod_support/Headers/Public/DVEFoundationKit/*-bitsky-generated-umbrella.h"]))
objc_import(
  name = "DVEFoundationKit_Core_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libDVEFoundationKit_Core_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "DVEFoundationKit_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "DVEFoundationKit",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "DVEFoundationKit_xcode_hmap_includes",
  include = [],
  include_files = [
    ":DVEFoundationKit_xcode_hmap"
  ],
  external_name = "DVEFoundationKit",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DVEFoundationKit_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "DVEFoundationKit_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "DVEFoundationKit_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "DVEFoundationKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "DVEFoundationKit_module_map",
  module_map = "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationKit-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationKit-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "DVEFoundationKit_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "DVEFoundationKit_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  deps = [
    ":DVEFoundationKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":DVEFoundationKit_private_includes",
    ":DVEFoundationKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":DVEFoundationKit_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DDVEFoundationKit_POD_VERSION=@\\\"9999_0.0.0.77-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "DVEFoundationKit",
  deps = [
    ":DVEFoundationKit_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "DVEFoundationKit_lib",
  deps = [
    ":DVEFoundationKit"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [
    "Core/Category/AVAsset+DVE.h",
    "Core/Category/CMTime+DVE.h",
    "Core/Category/NSArray+DVE.h",
    "Core/Category/NSData+DVE.h",
    "Core/Category/NSDictionary+DVE.h",
    "Core/Category/NSString+DVE.h",
    "Core/Macro/DVEMacros.h",
    "Core/NLE/DVETargetIndex.h",
    "Core/NLE/NLEModel_OC+DVE.h",
    "Core/NLE/NLENode_OC+DVE.h",
    "Core/NLE/NLEResourceAV_OC+DVE.h",
    "Core/NLE/NLEResourceNode_OC+DVE.h",
    "Core/NLE/NLESegmentAudio_OC+DVE.h",
    "Core/NLE/NLESegmentTransition_OC+DVE.h",
    "Core/NLE/NLESegment_OC+DVE.h",
    "Core/NLE/NLETimeSpaceNode_OC+DVE.h",
    "Core/NLE/NLETrackSlot_OC+DVE.h",
    "Core/NLE/NLETrack_OC+DVE.h",
    "Core/NLE/NLEVideoAnimation_OC+DVE.h",
    "Core/NLE/NLEVideoFrameModel_OC+DVE.h",
    "Core/ResourceManager/Common/Color/UIColor+DVE.h",
    "Core/ResourceManager/Common/Font/UIFont+DVE.h",
    "Core/ResourceManager/DVEColorMacro.h",
    "Core/ResourceManager/DVEFontMacro.h",
    "Core/ResourceManager/DVEImageMacro.h",
    "Core/ResourceManager/DVEStringMacro.h",
    "Core/ResourceManager/External/Basic/DVEConfig.h",
    "Core/ResourceManager/External/Layout/DVEUILayoutConfig.h",
    "Core/ResourceManager/External/Manager/DVECustomResourceProvider.h",
    "Core/ResourceManager/External/Protocol/DVEResourceManagerProtocol.h",
    "Core/UIKit/Category/UIBezierPath+DVE.h",
    "Core/UIKit/Category/UIImage+DVE.h",
    "Core/UIKit/Category/UIView+DVE.h",
    "Core/UIKit/Category/UIViewController+Private.h",
    "Core/UIKit/UIComponent/DVEButton.h",
    "Core/UIKit/UIComponent/DVEPlaceholderTextView.h",
    "Core/UIKit/Utils/DVEUIHelper.h",
    "Core/Utils/CGRectUtil.h",
    "Core/Utils/DVECommonDefine.h",
    "Core/Utils/DVEFileUtils.h",
    "Core/Utils/DVEGCDUtils.h",
    "Core/Utils/DVEScreenAdaptUtils.h",
    "Core/Utils/NSBundleUtil.h",
    "Core/Utils/iPadAdapter/DVEPadUIAdapter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/DVEFoundationKit/AVAsset+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/CGRectUtil.h",
    "pod_support/Headers/Private/DVEFoundationKit/CMTime+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEButton.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEColorMacro.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVECommonDefine.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEConfig.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVECustomResourceProvider.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEFileUtils.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEFontMacro.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEGCDUtils.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEImageMacro.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEMacros.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEPadUIAdapter.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEPlaceholderTextView.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEResourceManagerProtocol.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEScreenAdaptUtils.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEStringMacro.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVETargetIndex.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEUIHelper.h",
    "pod_support/Headers/Private/DVEFoundationKit/DVEUILayoutConfig.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLEModel_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLENode_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLEResourceAV_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLEResourceNode_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLESegmentAudio_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLESegmentTransition_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLESegment_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLETimeSpaceNode_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLETrackSlot_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLETrack_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLEVideoAnimation_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NLEVideoFrameModel_OC+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NSArray+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NSBundleUtil.h",
    "pod_support/Headers/Private/DVEFoundationKit/NSData+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NSDictionary+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/NSString+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/UIBezierPath+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/UIColor+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/UIFont+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/UIImage+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/UIView+DVE.h",
    "pod_support/Headers/Private/DVEFoundationKit/UIViewController+Private.h",
    "pod_support/Headers/Public/DVEFoundationKit/AVAsset+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/CGRectUtil.h",
    "pod_support/Headers/Public/DVEFoundationKit/CMTime+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEButton.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEColorMacro.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVECommonDefine.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEConfig.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVECustomResourceProvider.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEFileUtils.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEFontMacro.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEGCDUtils.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEImageMacro.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEMacros.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEPadUIAdapter.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEPlaceholderTextView.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEResourceManagerProtocol.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEScreenAdaptUtils.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEStringMacro.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVETargetIndex.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEUIHelper.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEUILayoutConfig.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLEModel_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLENode_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLEResourceAV_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLEResourceNode_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLESegmentAudio_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLESegmentTransition_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLESegment_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLETimeSpaceNode_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLETrackSlot_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLETrack_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLEVideoAnimation_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NLEVideoFrameModel_OC+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NSArray+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NSBundleUtil.h",
    "pod_support/Headers/Public/DVEFoundationKit/NSData+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NSDictionary+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/NSString+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/UIBezierPath+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/UIColor+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/UIFont+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/UIImage+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/UIView+DVE.h",
    "pod_support/Headers/Public/DVEFoundationKit/UIViewController+Private.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationKit_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationKit_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  deps = [
    ":DVEFoundationKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":DVEFoundationKit_private_includes",
    ":DVEFoundationKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":DVEFoundationKit_Core_VendoredLibraries",
    ":Core_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DDVEFoundationKit_POD_VERSION=@\\\"9999_0.0.0.77-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Adapter_hdrs",
  srcs = [
    "Adapter/DVEFoundationInject.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Adapter_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/DVEFoundationKit/DVEFoundationInject.h",
    "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationInject.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Adapter_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Adapter_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Adapter_module_map",
  module_map = "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationKit_Adapter-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/DVEFoundationKit/DVEFoundationKit_Adapter-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Adapter_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Adapter_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  deps = [
    ":DVEFoundationKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":DVEFoundationKit_private_includes",
    ":DVEFoundationKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@IESInject//:IESInject_objc_interface",
    "@NLEPlatform//:Adapter_objc_interface",
    "@IESInject//:IESInject_swift_interface",
    "@NLEPlatform//:Adapter_swift_interface",
    ":Adapter_objc_interface",
    "@IESInject//:IESInject_module_map",
    "@NLEPlatform//:Adapter_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DDVEFoundationKit_POD_VERSION=@\\\"9999_0.0.0.77-lark\\\"",
    "-DENABLE_TOCFOUNDATION=1",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Adapter",
  deps = [
    ":Adapter_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Adapter_lib",
  deps = [
    ":Adapter"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_DVEFoundationKit_module_map",
  module_map = "@DVEFoundationKit//:pod_support/Headers/Public/DVEFoundationKit/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@DVEFoundationKit//:pod_support/Headers/Public/DVEFoundationKit/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_DVEFoundationKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@DVEFoundationKit//:Adapter_objc_interface", "@DVEFoundationKit//:Core_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_DVEFoundationKit",
  target_name = "Lark",
  module_name = "DVEFoundationKit",
  hdrs = ["@DVEFoundationKit//:Adapter_pod_hdrs", "@DVEFoundationKit//:Core_pod_hdrs"],
  srcs = [],
  non_arc_srcs = [],
  deps = ["@DVEFoundationKit//:DVEFoundationKit_Core_VendoredLibraries"],
  pod_deps = ["IESInject", "NLEPlatform"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DDVEFoundationKit_POD_VERSION=@\\\"9999_0.0.0.77-lark\\\"",
    "-DENABLE_TOCFOUNDATION=1",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "DVEFoundationKit_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "DVEFoundationKit_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = ["UIKit", "Foundation", "JavaScriptCore"],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = [],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "DVEFoundationKit_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "DVEFoundationKit_features", []),
  link_dynamic = getattr(defs_external_objc_library, "DVEFoundationKit_dynamic", False),
  tags = getattr(defs_external_objc_library, "DVEFoundationKit_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("DVEFoundationKit", {}),
  visibility = ["//visibility:public"],
)