load('@build_bazel_rules_apple//apple:resources.bzl', 'apple_resource_bundle', 'gen_bundle_plist')
load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "IESWebViewMonitor_pod_hdrs",
  srcs = [
    ":IESWebViewMonitor_root_pod_hdrs",
    ":SettingModel_pod_hdrs",
    ":Core_pod_hdrs",
    ":Live_pod_hdrs",
    ":WKWebView_pod_hdrs",
    ":WKWebView_WebPerf_pod_hdrs",
    ":WKWebView_WebCore_pod_hdrs",
    ":WKWebView_WebBlankDetect_pod_hdrs",
    ":WKWebView_WebJSB_pod_hdrs",
    ":WKWebView_WebFalcon_pod_hdrs",
    ":Lynx_pod_hdrs",
    ":Lynx_LynxPerf_pod_hdrs",
    ":Lynx_LynxBlankDetect_pod_hdrs",
    ":Lynx_LynxJSB_pod_hdrs",
    ":HybridMonitor_pod_hdrs",
    ":CustomInterface_pod_hdrs",
    ":CustomInterface_WebInterface_pod_hdrs",
    ":CustomInterface_LynxInterface_pod_hdrs",
    ":CustomInterface_LynxInterface_LynxFECustomError_pod_hdrs",
    ":mPaaS_pod_hdrs",
    ":Debug_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "IESWebViewMonitor_private_includes",
  include = [
    "external/IESWebViewMonitor/pod_support/Headers/Private/IESWebViewMonitor/"
  ],
  deps = [],
  external_name = "IESWebViewMonitor"
)
gen_includes(
  name = "IESWebViewMonitor_public_includes",
  include = [
    "external/IESWebViewMonitor/pod_support/Headers/Public/IESWebViewMonitor/"
  ],
  deps = [],
  external_name = "IESWebViewMonitor"
)
filegroup(
  name = "_IESWebViewMonitor_hdrs",
  srcs = [
    ":IESWebViewMonitor_root_hdrs",
    ":SettingModel_hdrs",
    ":Core_hdrs",
    ":Live_hdrs",
    ":WKWebView_hdrs",
    ":WKWebView_WebPerf_hdrs",
    ":WKWebView_WebCore_hdrs",
    ":WKWebView_WebBlankDetect_hdrs",
    ":WKWebView_WebJSB_hdrs",
    ":WKWebView_WebFalcon_hdrs",
    ":Lynx_hdrs",
    ":Lynx_LynxPerf_hdrs",
    ":Lynx_LynxBlankDetect_hdrs",
    ":Lynx_LynxJSB_hdrs",
    ":HybridMonitor_hdrs",
    ":CustomInterface_hdrs",
    ":CustomInterface_WebInterface_hdrs",
    ":CustomInterface_LynxInterface_hdrs",
    ":CustomInterface_LynxInterface_LynxFECustomError_hdrs",
    ":mPaaS_hdrs",
    ":Debug_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "IESWebViewMonitor_xcode_hmapsource",
  hdrs = [
    ":IESWebViewMonitor_root_hdrs",
    ":Core_hdrs",
    ":CustomInterface_hdrs",
    ":CustomInterface_LynxInterface_hdrs",
    ":CustomInterface_LynxInterface_LynxFECustomError_hdrs",
    ":CustomInterface_WebInterface_hdrs",
    ":HybridMonitor_hdrs",
    ":Lynx_hdrs",
    ":Lynx_LynxBlankDetect_hdrs",
    ":Lynx_LynxJSB_hdrs",
    ":Lynx_LynxPerf_hdrs",
    ":SettingModel_hdrs",
    ":WKWebView_hdrs",
    ":WKWebView_WebBlankDetect_hdrs",
    ":WKWebView_WebCore_hdrs",
    ":WKWebView_WebFalcon_hdrs",
    ":WKWebView_WebJSB_hdrs",
    ":WKWebView_WebPerf_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "IESWebViewMonitor_xcode_hmap",
  dep = ":IESWebViewMonitor_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/IESWebViewMonitor/*-bitsky-generated.modulemap", "pod_support/Headers/Public/IESWebViewMonitor/*-bitsky-generated-umbrella.h"]))
gen_bundle_plist(
  name = "GEN_IESWebViewMonitor_Plist",
  bundle_name = "IESWebViewMonitor",
  minimum_os_version = define_minimum_os_version,
  bundle_version = "1.3.21",
  platform_type = select(
    {
      "//conditions:default": "ios",
      ":osxCase": "osx",
      ":tvosCase": "tvos",
      ":watchosCase": "watchos"
    }
  )
)
apple_resource_bundle(
  name = "IESWebViewMonitor_WKWebView_WebPerf_IESWebViewMonitor",
  bundle_name = "IESWebViewMonitor",
  infoplists = [
    ":GEN_IESWebViewMonitor_Plist"
  ],
  resources = [
    "IESWebViewMonitor/Assets/dom_monitor.js",
    "IESWebViewMonitor/Assets/webviewMonitor.strings",
    "IESWebViewMonitor/Assets/jssdk.js",
    "IESWebViewMonitor/Assets/jssdk_bridge.js"
  ],
  minimum_os_version = define_minimum_os_version,
  optimization = "space",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "IESWebViewMonitor_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "IESWebViewMonitor",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "IESWebViewMonitor_xcode_hmap_includes",
  include = [],
  include_files = [
    ":IESWebViewMonitor_xcode_hmap"
  ],
  external_name = "IESWebViewMonitor",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IESWebViewMonitor_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IESWebViewMonitor_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "IESWebViewMonitor_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "IESWebViewMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "IESWebViewMonitor_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "IESWebViewMonitor_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "IESWebViewMonitor_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":IESWebViewMonitor_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "IESWebViewMonitor",
  deps = [
    ":IESWebViewMonitor_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "IESWebViewMonitor_lib",
  deps = [
    ":IESWebViewMonitor"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SettingModel_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/SettingModel/IESLiveDefaultSettingModel.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SettingModel_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveDefaultSettingModel.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveDefaultSettingModel.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "SettingModel_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "SettingModel_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "SettingModel_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_SettingModel-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_SettingModel-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SettingModel_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/SettingModel/IESLiveDefaultSettingModel.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "SettingModel_oc",
  enable_modules = 1,
  srcs = [
    "SettingModel_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "SettingModel_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":SettingModel_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "SettingModel",
  deps = [
    ":SettingModel_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "SettingModel_lib",
  deps = [
    ":SettingModel"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/Core/BDApplicationStat.h",
    "IESWebViewMonitor/Classes/Core/BDHMJSBErrorModel.h",
    "IESWebViewMonitor/Classes/Core/BDHybridBaseMonitor.h",
    "IESWebViewMonitor/Classes/Core/BDHybridCoreReporter.h",
    "IESWebViewMonitor/Classes/Core/BDHybridMonitorDefines.h",
    "IESWebViewMonitor/Classes/Core/BDHybridMonitorWeakWrap.h",
    "IESWebViewMonitor/Classes/Core/BDMonitorThreadManager.h",
    "IESWebViewMonitor/Classes/Core/BDWMDeallocHelper.h",
    "IESWebViewMonitor/Classes/Core/IESLiveMonitorUtils.h",
    "IESWebViewMonitor/Classes/Core/IESMonitorSettingModelProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDApplicationStat.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDHMJSBErrorModel.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDHybridBaseMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDHybridCoreReporter.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDHybridMonitorDefines.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDHybridMonitorWeakWrap.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDMonitorThreadManager.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDWMDeallocHelper.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveMonitorUtils.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESMonitorSettingModelProtocol.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDApplicationStat.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHMJSBErrorModel.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHybridBaseMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHybridCoreReporter.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHybridMonitorDefines.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHybridMonitorWeakWrap.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDMonitorThreadManager.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWMDeallocHelper.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveMonitorUtils.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESMonitorSettingModelProtocol.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/Core/BDApplicationStat.m",
    "IESWebViewMonitor/Classes/Core/BDHMJSBErrorModel.m",
    "IESWebViewMonitor/Classes/Core/BDHybridBaseMonitor.m",
    "IESWebViewMonitor/Classes/Core/BDHybridCoreReporter.m",
    "IESWebViewMonitor/Classes/Core/BDHybridMonitorWeakWrap.m",
    "IESWebViewMonitor/Classes/Core/BDMonitorThreadManager.m",
    "IESWebViewMonitor/Classes/Core/BDWMDeallocHelper.m",
    "IESWebViewMonitor/Classes/Core/IESLiveMonitorUtils.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [
    "Core_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Heimdallr//:TTMonitor_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@Heimdallr//:TTMonitor_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Core_objc_interface",
    "@Heimdallr//:TTMonitor_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Live_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/Live/IESLiveWebViewMonitorLaunchTask.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Live_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Live_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Live_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Live_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Live-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Live-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Live_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/Live/IESLiveWebViewMonitorLaunchTask.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Live_oc",
  enable_modules = 1,
  srcs = [
    "Live_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Live_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@IESDI//:IESDI_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@IESDI//:IESDI_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Live_objc_interface",
    "@IESDI//:IESDI_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Live",
  deps = [
    ":Live_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Live_lib",
  deps = [
    ":Live"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WKWebView_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "WKWebView_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":WKWebView_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView",
  deps = [
    ":WKWebView_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WKWebView_lib",
  deps = [
    ":WKWebView"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebPerf_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/WebPerf/BDWebView+BDWebViewMonitor.h",
    "IESWebViewMonitor/Classes/WebPerf/BDWebViewDelegateRegister.h",
    "IESWebViewMonitor/Classes/WebPerf/BDWebViewGeneralReporter.h",
    "IESWebViewMonitor/Classes/WebPerf/BDWebViewMonitorFileProvider.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewEmptyMonitor.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewMonitor+Private.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewMonitor.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewMonitorSettingModel.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewNavigationMonitor.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewOfflineMonitor.h",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewPerformanceDictionary.h",
    "IESWebViewMonitor/Classes/WebPerf/IESWebViewCustomReporter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebPerf_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebView+BDWebViewMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebViewDelegateRegister.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebViewGeneralReporter.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebViewMonitorFileProvider.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewEmptyMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewMonitor+Private.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewMonitorSettingModel.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewNavigationMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewOfflineMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebViewPerformanceDictionary.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESWebViewCustomReporter.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebView+BDWebViewMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebViewDelegateRegister.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebViewGeneralReporter.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebViewMonitorFileProvider.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewEmptyMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewMonitor+Private.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewMonitorSettingModel.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewNavigationMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewOfflineMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebViewPerformanceDictionary.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewCustomReporter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebPerf_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebPerf_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WKWebView_WebPerf_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebPerf-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebPerf-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebPerf_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/WebPerf/BDWebView+BDWebViewMonitor.m",
    "IESWebViewMonitor/Classes/WebPerf/BDWebViewDelegateRegister.m",
    "IESWebViewMonitor/Classes/WebPerf/BDWebViewGeneralReporter.m",
    "IESWebViewMonitor/Classes/WebPerf/BDWebViewMonitorFileProvider.m",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewEmptyMonitor.m",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewMonitor.m",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewMonitorSettingModel.m",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewNavigationMonitor.m",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewOfflineMonitor.m",
    "IESWebViewMonitor/Classes/WebPerf/IESLiveWebViewPerformanceDictionary.m",
    "IESWebViewMonitor/Classes/WebPerf/IESWebViewCustomReporter.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebPerf_oc",
  enable_modules = 1,
  srcs = [
    "WKWebView_WebPerf_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "WKWebView_WebPerf_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":WKWebView_WebPerf_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  data = [
    ":IESWebViewMonitor_WKWebView_WebPerf_IESWebViewMonitor"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebPerf",
  deps = [
    ":WKWebView_WebPerf_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WKWebView_WebPerf_lib",
  deps = [
    ":WKWebView_WebPerf"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebCore_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/WebCore/IESLiveWKWebCoreTrigger.h",
    "IESWebViewMonitor/Classes/WebCore/IESLiveWebCoreTrigger.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebCore_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWKWebCoreTrigger.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLiveWebCoreTrigger.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWKWebCoreTrigger.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLiveWebCoreTrigger.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebCore_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebCore_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WKWebView_WebCore_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebCore-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebCore-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebCore_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/WebCore/IESLiveWebCoreTrigger.m",
    "IESWebViewMonitor/Classes/WebCore/IESLiveWKWebCoreTrigger.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebCore_oc",
  enable_modules = 1,
  srcs = [
    "WKWebView_WebCore_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "WKWebView_WebCore_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDWebCore//:BDWebCore_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDWebCore//:BDWebCore_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":WKWebView_WebCore_objc_interface",
    "@BDWebCore//:BDWebCore_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebCore",
  deps = [
    ":WKWebView_WebCore_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WKWebView_WebCore_lib",
  deps = [
    ":WKWebView_WebCore"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebBlankDetect_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/WebBlankDetect/BDWebViewBlankDetectListener.h",
    "IESWebViewMonitor/Classes/WebBlankDetect/UIViewController+BlankDetectMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebBlankDetect_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebViewBlankDetectListener.h",
    "pod_support/Headers/Private/IESWebViewMonitor/UIViewController+BlankDetectMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebViewBlankDetectListener.h",
    "pod_support/Headers/Public/IESWebViewMonitor/UIViewController+BlankDetectMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebBlankDetect_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebBlankDetect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WKWebView_WebBlankDetect_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebBlankDetect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebBlankDetect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebBlankDetect_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/WebBlankDetect/BDWebViewBlankDetectListener.m",
    "IESWebViewMonitor/Classes/WebBlankDetect/UIViewController+BlankDetectMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebBlankDetect_oc",
  enable_modules = 1,
  srcs = [
    "WKWebView_WebBlankDetect_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "WKWebView_WebBlankDetect_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDWebKit//:BlankDetect_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDWebKit//:BlankDetect_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":WKWebView_WebBlankDetect_objc_interface",
    "@BDWebKit//:BlankDetect_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebBlankDetect",
  deps = [
    ":WKWebView_WebBlankDetect_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WKWebView_WebBlankDetect_lib",
  deps = [
    ":WKWebView_WebBlankDetect"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebJSB_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/webJSB/BDHMJSBErrorModel+WebError.h",
    "IESWebViewMonitor/Classes/webJSB/BDWebViewJSBMonitor.h",
    "IESWebViewMonitor/Classes/webJSB/IESBridgeEngine+BDWMAdapter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebJSB_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDHMJSBErrorModel+WebError.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebViewJSBMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESBridgeEngine+BDWMAdapter.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHMJSBErrorModel+WebError.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebViewJSBMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESBridgeEngine+BDWMAdapter.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebJSB_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebJSB_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WKWebView_WebJSB_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebJSB-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebJSB-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebJSB_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/webJSB/BDHMJSBErrorModel+WebError.m",
    "IESWebViewMonitor/Classes/webJSB/BDWebViewJSBMonitor.m",
    "IESWebViewMonitor/Classes/webJSB/IESBridgeEngine+BDWMAdapter.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebJSB_oc",
  enable_modules = 1,
  srcs = [
    "WKWebView_WebJSB_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "WKWebView_WebJSB_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@IESJSBridgeCore//:Core_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@IESJSBridgeCore//:Core_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":WKWebView_WebJSB_objc_interface",
    "@IESJSBridgeCore//:Core_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebJSB",
  deps = [
    ":WKWebView_WebJSB_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WKWebView_WebJSB_lib",
  deps = [
    ":WKWebView_WebJSB"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebFalcon_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/WebFalcon/BDWebViewFalconMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebFalcon_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDWebViewFalconMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDWebViewFalconMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebFalcon_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebFalcon_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "WKWebView_WebFalcon_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebFalcon-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_WKWebView_WebFalcon-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "WKWebView_WebFalcon_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/WebFalcon/BDWebViewFalconMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "WKWebView_WebFalcon_oc",
  enable_modules = 1,
  srcs = [
    "WKWebView_WebFalcon_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "WKWebView_WebFalcon_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDWebKit//:Falcon_objc_interface",
    "@BDWebKit//:Offline_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDWebKit//:Falcon_swift_interface",
    "@BDWebKit//:Offline_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":WKWebView_WebFalcon_objc_interface",
    "@BDWebKit//:Falcon_module_map",
    "@BDWebKit//:Offline_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "WKWebView_WebFalcon",
  deps = [
    ":WKWebView_WebFalcon_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "WKWebView_WebFalcon_lib",
  deps = [
    ":WKWebView_WebFalcon"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lynx_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Lynx_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Lynx_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx",
  deps = [
    ":Lynx_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Lynx_lib",
  deps = [
    ":Lynx"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxPerf_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxPerf/IESLynxMonitor.h",
    "IESWebViewMonitor/Classes/LynxPerf/IESLynxMonitorConfig.h",
    "IESWebViewMonitor/Classes/LynxPerf/IESLynxPerformanceDictionary.h",
    "IESWebViewMonitor/Classes/LynxPerf/LynxView+Monitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxPerf_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/IESLynxMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLynxMonitorConfig.h",
    "pod_support/Headers/Private/IESWebViewMonitor/IESLynxPerformanceDictionary.h",
    "pod_support/Headers/Private/IESWebViewMonitor/LynxView+Monitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLynxMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLynxMonitorConfig.h",
    "pod_support/Headers/Public/IESWebViewMonitor/IESLynxPerformanceDictionary.h",
    "pod_support/Headers/Public/IESWebViewMonitor/LynxView+Monitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_LynxPerf_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_LynxPerf_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lynx_LynxPerf_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx_LynxPerf-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx_LynxPerf-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxPerf_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxPerf/IESLynxMonitor.m",
    "IESWebViewMonitor/Classes/LynxPerf/IESLynxMonitorConfig.m",
    "IESWebViewMonitor/Classes/LynxPerf/IESLynxPerformanceDictionary.m",
    "IESWebViewMonitor/Classes/LynxPerf/LynxView+Monitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_LynxPerf_oc",
  enable_modules = 1,
  srcs = [
    "Lynx_LynxPerf_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Lynx_LynxPerf_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Lynx//:Framework_objc_interface",
    "@Lynx//:JSRuntime_objc_interface",
    "@Lynx//:Native_objc_interface",
    "@Lynx//:ReleaseResource_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@Lynx//:Framework_swift_interface",
    "@Lynx//:JSRuntime_swift_interface",
    "@Lynx//:Native_swift_interface",
    "@Lynx//:ReleaseResource_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Lynx_LynxPerf_objc_interface",
    "@Lynx//:Framework_module_map",
    "@Lynx//:JSRuntime_module_map",
    "@Lynx//:Native_module_map",
    "@Lynx//:ReleaseResource_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_LynxPerf",
  deps = [
    ":Lynx_LynxPerf_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Lynx_LynxPerf_lib",
  deps = [
    ":Lynx_LynxPerf"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxBlankDetect_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxBlankDetect/BDLynxBlankDetect.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxBlankDetect_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxBlankDetect.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxBlankDetect.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_LynxBlankDetect_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_LynxBlankDetect_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lynx_LynxBlankDetect_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx_LynxBlankDetect-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx_LynxBlankDetect-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxBlankDetect_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxBlankDetect/BDLynxBlankDetect.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_LynxBlankDetect_oc",
  enable_modules = 1,
  srcs = [
    "Lynx_LynxBlankDetect_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Lynx_LynxBlankDetect_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Lynx_LynxBlankDetect_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_LynxBlankDetect",
  deps = [
    ":Lynx_LynxBlankDetect_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Lynx_LynxBlankDetect_lib",
  deps = [
    ":Lynx_LynxBlankDetect"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxJSB_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxJSB/BDHMJSBErrorModel+LynxError.h",
    "IESWebViewMonitor/Classes/LynxJSB/BDLynxBridge+BDLMAdapter.h",
    "IESWebViewMonitor/Classes/LynxJSB/BDLynxBridgeReceivedMessage+Timestamp.h",
    "IESWebViewMonitor/Classes/LynxJSB/BDLynxJSBMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxJSB_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDHMJSBErrorModel+LynxError.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxBridge+BDLMAdapter.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxBridgeReceivedMessage+Timestamp.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxJSBMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHMJSBErrorModel+LynxError.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxBridge+BDLMAdapter.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxBridgeReceivedMessage+Timestamp.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxJSBMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_LynxJSB_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_LynxJSB_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lynx_LynxJSB_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx_LynxJSB-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Lynx_LynxJSB-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Lynx_LynxJSB_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxJSB/BDHMJSBErrorModel+LynxError.m",
    "IESWebViewMonitor/Classes/LynxJSB/BDLynxBridge+BDLMAdapter.m",
    "IESWebViewMonitor/Classes/LynxJSB/BDLynxBridgeReceivedMessage+Timestamp.m",
    "IESWebViewMonitor/Classes/LynxJSB/BDLynxJSBMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Lynx_LynxJSB_oc",
  enable_modules = 1,
  srcs = [
    "Lynx_LynxJSB_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Lynx_LynxJSB_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Lynx//:BDLynxBridge_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@Lynx//:BDLynxBridge_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Lynx_LynxJSB_objc_interface",
    "@Lynx//:BDLynxBridge_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Lynx_LynxJSB",
  deps = [
    ":Lynx_LynxJSB_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Lynx_LynxJSB_lib",
  deps = [
    ":Lynx_LynxJSB"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HybridMonitor_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/HybridMonitor/BDHybridMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HybridMonitor_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDHybridMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDHybridMonitor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HybridMonitor_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HybridMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "HybridMonitor_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_HybridMonitor-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_HybridMonitor-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "HybridMonitor_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/HybridMonitor/BDHybridMonitor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "HybridMonitor_oc",
  enable_modules = 1,
  srcs = [
    "HybridMonitor_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "HybridMonitor_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@Heimdallr//:TTMonitor_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@Heimdallr//:TTMonitor_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":HybridMonitor_objc_interface",
    "@Heimdallr//:TTMonitor_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "HybridMonitor",
  deps = [
    ":HybridMonitor_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "HybridMonitor_lib",
  deps = [
    ":HybridMonitor"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CustomInterface_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "CustomInterface_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":CustomInterface_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface",
  deps = [
    ":CustomInterface_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CustomInterface_lib",
  deps = [
    ":CustomInterface"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_WebInterface_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/WebViewInterface/WKWebView+PublicInterface.h",
    "IESWebViewMonitor/Classes/WebViewInterface/WKWebViewConfiguration+PublicInterface.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_WebInterface_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/WKWebView+PublicInterface.h",
    "pod_support/Headers/Private/IESWebViewMonitor/WKWebViewConfiguration+PublicInterface.h",
    "pod_support/Headers/Public/IESWebViewMonitor/WKWebView+PublicInterface.h",
    "pod_support/Headers/Public/IESWebViewMonitor/WKWebViewConfiguration+PublicInterface.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_WebInterface_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_WebInterface_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CustomInterface_WebInterface_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface_WebInterface-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface_WebInterface-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_WebInterface_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/WebViewInterface/WKWebView+PublicInterface.m",
    "IESWebViewMonitor/Classes/WebViewInterface/WKWebViewConfiguration+PublicInterface.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_WebInterface_oc",
  enable_modules = 1,
  srcs = [
    "CustomInterface_WebInterface_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CustomInterface_WebInterface_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":CustomInterface_WebInterface_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_WebInterface",
  deps = [
    ":CustomInterface_WebInterface_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CustomInterface_WebInterface_lib",
  deps = [
    ":CustomInterface_WebInterface"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_LynxInterface_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxInterface/LynxView+PublicInterface.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_LynxInterface_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/LynxView+PublicInterface.h",
    "pod_support/Headers/Public/IESWebViewMonitor/LynxView+PublicInterface.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_LynxInterface_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_LynxInterface_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CustomInterface_LynxInterface_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface_LynxInterface-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface_LynxInterface-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_LynxInterface_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxInterface/LynxView+PublicInterface.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_LynxInterface_oc",
  enable_modules = 1,
  srcs = [
    "CustomInterface_LynxInterface_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CustomInterface_LynxInterface_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":CustomInterface_LynxInterface_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_LynxInterface",
  deps = [
    ":CustomInterface_LynxInterface_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CustomInterface_LynxInterface_lib",
  deps = [
    ":CustomInterface_LynxInterface"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_LynxInterface_LynxFECustomError_hdrs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxCustomError/BDLynxCustomErrorMonitor.h",
    "IESWebViewMonitor/Classes/LynxCustomError/BDLynxMonitorModule.h",
    "IESWebViewMonitor/Classes/LynxCustomError/BDLynxMonitorPool.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_LynxInterface_LynxFECustomError_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxCustomErrorMonitor.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxMonitorModule.h",
    "pod_support/Headers/Private/IESWebViewMonitor/BDLynxMonitorPool.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxCustomErrorMonitor.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxMonitorModule.h",
    "pod_support/Headers/Public/IESWebViewMonitor/BDLynxMonitorPool.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_LynxInterface_LynxFECustomError_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_LynxInterface_LynxFECustomError_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "CustomInterface_LynxInterface_LynxFECustomError_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface_LynxInterface_LynxFECustomError-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_CustomInterface_LynxInterface_LynxFECustomError-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CustomInterface_LynxInterface_LynxFECustomError_srcs",
  srcs = [
    "IESWebViewMonitor/Classes/LynxCustomError/BDLynxCustomErrorMonitor.m",
    "IESWebViewMonitor/Classes/LynxCustomError/BDLynxMonitorModule.m",
    "IESWebViewMonitor/Classes/LynxCustomError/BDLynxMonitorPool.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CustomInterface_LynxInterface_LynxFECustomError_oc",
  enable_modules = 1,
  srcs = [
    "CustomInterface_LynxInterface_LynxFECustomError_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "CustomInterface_LynxInterface_LynxFECustomError_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":CustomInterface_LynxInterface_LynxFECustomError_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "CustomInterface_LynxInterface_LynxFECustomError",
  deps = [
    ":CustomInterface_LynxInterface_LynxFECustomError_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "CustomInterface_LynxInterface_LynxFECustomError_lib",
  deps = [
    ":CustomInterface_LynxInterface_LynxFECustomError"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "mPaaS_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "mPaaS_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "mPaaS_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "mPaaS_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "mPaaS_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_mPaaS-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_mPaaS-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "mPaaS_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "mPaaS_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":mPaaS_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "mPaaS",
  deps = [
    ":mPaaS_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "mPaaS_lib",
  deps = [
    ":mPaaS"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_hdrs",
  srcs = [
    "IESWebViewMonitor/mPaaS/Debug/BDDebugFeedIESWebViewMonitor.h",
    "IESWebViewMonitor/mPaaS/Debug/BDDebugIESWebViewMonitorViewController.h",
    "IESWebViewMonitor/mPaaS/Debug/BDDebugTestWebView.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Debug_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Debug_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Debug_module_map",
  module_map = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Debug-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/IESWebViewMonitor/IESWebViewMonitor_Debug-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Debug_srcs",
  srcs = [
    "IESWebViewMonitor/mPaaS/Debug/BDDebugFeedIESWebViewMonitor.m",
    "IESWebViewMonitor/mPaaS/Debug/BDDebugIESWebViewMonitorViewController.m",
    "IESWebViewMonitor/mPaaS/Debug/BDDebugTestWebView.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Debug_oc",
  enable_modules = 1,
  srcs = [
    "Debug_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Debug_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":IESWebViewMonitor_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":IESWebViewMonitor_private_includes",
    ":IESWebViewMonitor_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@BDDebugTool//:BDDebugTool_objc_interface",
    "@BDStartUp//:BDStartUp_objc_interface",
    "@BDAlogProtocol//:BDAlogProtocol_objc_interface",
    "@BDDebugTool//:BDDebugTool_swift_interface",
    "@BDStartUp//:BDStartUp_swift_interface",
    "@BDAlogProtocol//:BDAlogProtocol_swift_interface",
    ":Debug_objc_interface",
    "@BDDebugTool//:BDDebugTool_module_map",
    "@BDStartUp//:BDStartUp_module_map",
    "@BDAlogProtocol//:BDAlogProtocol_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Debug",
  deps = [
    ":Debug_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Debug_lib",
  deps = [
    ":Debug"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_IESWebViewMonitor_module_map",
  module_map = "@IESWebViewMonitor//:pod_support/Headers/Public/IESWebViewMonitor/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@IESWebViewMonitor//:pod_support/Headers/Public/IESWebViewMonitor/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_IESWebViewMonitor_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@IESWebViewMonitor//:Core_objc_interface", "@IESWebViewMonitor//:CustomInterface_objc_interface", "@IESWebViewMonitor//:CustomInterface_LynxInterface_objc_interface", "@IESWebViewMonitor//:CustomInterface_LynxInterface_LynxFECustomError_objc_interface", "@IESWebViewMonitor//:CustomInterface_WebInterface_objc_interface", "@IESWebViewMonitor//:HybridMonitor_objc_interface", "@IESWebViewMonitor//:IESWebViewMonitor_objc_interface", "@IESWebViewMonitor//:Lynx_objc_interface", "@IESWebViewMonitor//:Lynx_LynxBlankDetect_objc_interface", "@IESWebViewMonitor//:Lynx_LynxJSB_objc_interface", "@IESWebViewMonitor//:Lynx_LynxPerf_objc_interface", "@IESWebViewMonitor//:SettingModel_objc_interface", "@IESWebViewMonitor//:WKWebView_objc_interface", "@IESWebViewMonitor//:WKWebView_WebBlankDetect_objc_interface", "@IESWebViewMonitor//:WKWebView_WebCore_objc_interface", "@IESWebViewMonitor//:WKWebView_WebFalcon_objc_interface", "@IESWebViewMonitor//:WKWebView_WebJSB_objc_interface", "@IESWebViewMonitor//:WKWebView_WebPerf_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_IESWebViewMonitor",
  target_name = "Lark",
  module_name = "IESWebViewMonitor",
  hdrs = ["@IESWebViewMonitor//:Core_pod_hdrs", "@IESWebViewMonitor//:CustomInterface_pod_hdrs", "@IESWebViewMonitor//:CustomInterface_LynxInterface_pod_hdrs", "@IESWebViewMonitor//:CustomInterface_LynxInterface_LynxFECustomError_pod_hdrs", "@IESWebViewMonitor//:CustomInterface_WebInterface_pod_hdrs", "@IESWebViewMonitor//:HybridMonitor_pod_hdrs", "@IESWebViewMonitor//:IESWebViewMonitor_root_pod_hdrs", "@IESWebViewMonitor//:Lynx_pod_hdrs", "@IESWebViewMonitor//:Lynx_LynxBlankDetect_pod_hdrs", "@IESWebViewMonitor//:Lynx_LynxJSB_pod_hdrs", "@IESWebViewMonitor//:Lynx_LynxPerf_pod_hdrs", "@IESWebViewMonitor//:SettingModel_pod_hdrs", "@IESWebViewMonitor//:WKWebView_pod_hdrs", "@IESWebViewMonitor//:WKWebView_WebBlankDetect_pod_hdrs", "@IESWebViewMonitor//:WKWebView_WebCore_pod_hdrs", "@IESWebViewMonitor//:WKWebView_WebFalcon_pod_hdrs", "@IESWebViewMonitor//:WKWebView_WebJSB_pod_hdrs", "@IESWebViewMonitor//:WKWebView_WebPerf_pod_hdrs"],
  srcs = ["@IESWebViewMonitor//:Core_srcs", "@IESWebViewMonitor//:CustomInterface_LynxInterface_LynxFECustomError_srcs", "@IESWebViewMonitor//:CustomInterface_LynxInterface_srcs", "@IESWebViewMonitor//:CustomInterface_WebInterface_srcs", "@IESWebViewMonitor//:HybridMonitor_srcs", "@IESWebViewMonitor//:Lynx_LynxBlankDetect_srcs", "@IESWebViewMonitor//:Lynx_LynxJSB_srcs", "@IESWebViewMonitor//:Lynx_LynxPerf_srcs", "@IESWebViewMonitor//:SettingModel_srcs", "@IESWebViewMonitor//:WKWebView_WebBlankDetect_srcs", "@IESWebViewMonitor//:WKWebView_WebCore_srcs", "@IESWebViewMonitor//:WKWebView_WebFalcon_srcs", "@IESWebViewMonitor//:WKWebView_WebJSB_srcs", "@IESWebViewMonitor//:WKWebView_WebPerf_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = ["Heimdallr", "BDAlogProtocol", "Lynx", "BDWebKit", "BDWebCore", "IESJSBridgeCore"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DIESWebViewMonitor_POD_VERSION=@\\\"9999_1.3.21-rc.18-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "IESWebViewMonitor_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "IESWebViewMonitor_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = [],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = ["@IESWebViewMonitor//:IESWebViewMonitor_WKWebView_WebPerf_IESWebViewMonitor"],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "IESWebViewMonitor_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "IESWebViewMonitor_features", []),
  link_dynamic = getattr(defs_external_objc_library, "IESWebViewMonitor_dynamic", False),
  tags = getattr(defs_external_objc_library, "IESWebViewMonitor_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("IESWebViewMonitor", {}),
  visibility = ["//visibility:public"],
)