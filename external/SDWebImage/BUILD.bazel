load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "SDWebImage_pod_hdrs",
  srcs = [
    ":SDWebImage_root_pod_hdrs",
    ":Core_pod_hdrs",
    ":MapKit_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "SDWebImage_private_includes",
  include = [
    "external/SDWebImage/pod_support/Headers/Private/SDWebImage/"
  ],
  deps = [],
  external_name = "SDWebImage"
)
gen_includes(
  name = "SDWebImage_public_includes",
  include = [
    "external/SDWebImage/pod_support/Headers/Public/SDWebImage/"
  ],
  deps = [],
  external_name = "SDWebImage"
)
filegroup(
  name = "_SDWebImage_hdrs",
  srcs = [
    ":SDWebImage_root_hdrs",
    ":Core_hdrs",
    ":MapKit_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "SDWebImage_xcode_hmapsource",
  hdrs = [
    ":SDWebImage_root_hdrs",
    ":Core_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "SDWebImage_xcode_hmap",
  dep = ":SDWebImage_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/SDWebImage/*-bitsky-generated.modulemap", "pod_support/Headers/Public/SDWebImage/*-bitsky-generated-umbrella.h"]))
gen_includes(
  name = "SDWebImage_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "SDWebImage",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "SDWebImage_xcode_hmap_includes",
  include = [],
  include_files = [
    ":SDWebImage_xcode_hmap"
  ],
  external_name = "SDWebImage",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SDWebImage_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SDWebImage_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "SDWebImage_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "SDWebImage_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "SDWebImage_module_map",
  module_map = "pod_support/Headers/Public/SDWebImage/SDWebImage-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/SDWebImage/SDWebImage-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "SDWebImage_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "SDWebImage_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "ImageIO"
  ],
  deps = [
    ":SDWebImage_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":SDWebImage_private_includes",
    ":SDWebImage_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":SDWebImage_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "SDWebImage",
  deps = [
    ":SDWebImage_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "SDWebImage_lib",
  deps = [
    ":SDWebImage"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [
    "SDWebImage/Core/NSButton+WebCache.h",
    "SDWebImage/Core/NSData+ImageContentType.h",
    "SDWebImage/Core/NSImage+Compatibility.h",
    "SDWebImage/Core/SDAnimatedImage.h",
    "SDWebImage/Core/SDAnimatedImagePlayer.h",
    "SDWebImage/Core/SDAnimatedImageRep.h",
    "SDWebImage/Core/SDAnimatedImageView+WebCache.h",
    "SDWebImage/Core/SDAnimatedImageView.h",
    "SDWebImage/Core/SDDiskCache.h",
    "SDWebImage/Core/SDGraphicsImageRenderer.h",
    "SDWebImage/Core/SDImageAPNGCoder.h",
    "SDWebImage/Core/SDImageAWebPCoder.h",
    "SDWebImage/Core/SDImageCache.h",
    "SDWebImage/Core/SDImageCacheConfig.h",
    "SDWebImage/Core/SDImageCacheDefine.h",
    "SDWebImage/Core/SDImageCachesManager.h",
    "SDWebImage/Core/SDImageCoder.h",
    "SDWebImage/Core/SDImageCoderHelper.h",
    "SDWebImage/Core/SDImageCodersManager.h",
    "SDWebImage/Core/SDImageFrame.h",
    "SDWebImage/Core/SDImageGIFCoder.h",
    "SDWebImage/Core/SDImageGraphics.h",
    "SDWebImage/Core/SDImageHEICCoder.h",
    "SDWebImage/Core/SDImageIOAnimatedCoder.h",
    "SDWebImage/Core/SDImageIOCoder.h",
    "SDWebImage/Core/SDImageLoader.h",
    "SDWebImage/Core/SDImageLoadersManager.h",
    "SDWebImage/Core/SDImageTransformer.h",
    "SDWebImage/Core/SDMemoryCache.h",
    "SDWebImage/Core/SDWebImageCacheKeyFilter.h",
    "SDWebImage/Core/SDWebImageCacheSerializer.h",
    "SDWebImage/Core/SDWebImageCompat.h",
    "SDWebImage/Core/SDWebImageDefine.h",
    "SDWebImage/Core/SDWebImageDownloader.h",
    "SDWebImage/Core/SDWebImageDownloaderConfig.h",
    "SDWebImage/Core/SDWebImageDownloaderDecryptor.h",
    "SDWebImage/Core/SDWebImageDownloaderOperation.h",
    "SDWebImage/Core/SDWebImageDownloaderRequestModifier.h",
    "SDWebImage/Core/SDWebImageDownloaderResponseModifier.h",
    "SDWebImage/Core/SDWebImageError.h",
    "SDWebImage/Core/SDWebImageIndicator.h",
    "SDWebImage/Core/SDWebImageManager.h",
    "SDWebImage/Core/SDWebImageOperation.h",
    "SDWebImage/Core/SDWebImageOptionsProcessor.h",
    "SDWebImage/Core/SDWebImagePrefetcher.h",
    "SDWebImage/Core/SDWebImageTransition.h",
    "SDWebImage/Core/UIButton+WebCache.h",
    "SDWebImage/Core/UIImage+ExtendedCacheData.h",
    "SDWebImage/Core/UIImage+ForceDecode.h",
    "SDWebImage/Core/UIImage+GIF.h",
    "SDWebImage/Core/UIImage+MemoryCacheCost.h",
    "SDWebImage/Core/UIImage+Metadata.h",
    "SDWebImage/Core/UIImage+MultiFormat.h",
    "SDWebImage/Core/UIImage+Transform.h",
    "SDWebImage/Core/UIImageView+HighlightedWebCache.h",
    "SDWebImage/Core/UIImageView+WebCache.h",
    "SDWebImage/Core/UIView+WebCache.h",
    "SDWebImage/Core/UIView+WebCacheOperation.h",
    "SDWebImage/Private/NSBezierPath+SDRoundedCorners.h",
    "SDWebImage/Private/SDAssociatedObject.h",
    "SDWebImage/Private/SDAsyncBlockOperation.h",
    "SDWebImage/Private/SDDeviceHelper.h",
    "SDWebImage/Private/SDDisplayLink.h",
    "SDWebImage/Private/SDFileAttributeHelper.h",
    "SDWebImage/Private/SDImageAssetManager.h",
    "SDWebImage/Private/SDImageCachesManagerOperation.h",
    "SDWebImage/Private/SDImageIOAnimatedCoderInternal.h",
    "SDWebImage/Private/SDInternalMacros.h",
    "SDWebImage/Private/SDWeakProxy.h",
    "SDWebImage/Private/SDWebImageTransitionInternal.h",
    "SDWebImage/Private/SDmetamacros.h",
    "SDWebImage/Private/UIColor+SDHexString.h",
    "WebImage/SDWebImage.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/SDWebImage/NSBezierPath+SDRoundedCorners.h",
    "pod_support/Headers/Private/SDWebImage/NSButton+WebCache.h",
    "pod_support/Headers/Private/SDWebImage/NSData+ImageContentType.h",
    "pod_support/Headers/Private/SDWebImage/NSImage+Compatibility.h",
    "pod_support/Headers/Private/SDWebImage/SDAnimatedImage.h",
    "pod_support/Headers/Private/SDWebImage/SDAnimatedImagePlayer.h",
    "pod_support/Headers/Private/SDWebImage/SDAnimatedImageRep.h",
    "pod_support/Headers/Private/SDWebImage/SDAnimatedImageView+WebCache.h",
    "pod_support/Headers/Private/SDWebImage/SDAnimatedImageView.h",
    "pod_support/Headers/Private/SDWebImage/SDAssociatedObject.h",
    "pod_support/Headers/Private/SDWebImage/SDAsyncBlockOperation.h",
    "pod_support/Headers/Private/SDWebImage/SDDeviceHelper.h",
    "pod_support/Headers/Private/SDWebImage/SDDiskCache.h",
    "pod_support/Headers/Private/SDWebImage/SDDisplayLink.h",
    "pod_support/Headers/Private/SDWebImage/SDFileAttributeHelper.h",
    "pod_support/Headers/Private/SDWebImage/SDGraphicsImageRenderer.h",
    "pod_support/Headers/Private/SDWebImage/SDImageAPNGCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageAWebPCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageAssetManager.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCache.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCacheConfig.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCacheDefine.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCachesManager.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCachesManagerOperation.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCoderHelper.h",
    "pod_support/Headers/Private/SDWebImage/SDImageCodersManager.h",
    "pod_support/Headers/Private/SDWebImage/SDImageFrame.h",
    "pod_support/Headers/Private/SDWebImage/SDImageGIFCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageGraphics.h",
    "pod_support/Headers/Private/SDWebImage/SDImageHEICCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageIOAnimatedCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageIOAnimatedCoderInternal.h",
    "pod_support/Headers/Private/SDWebImage/SDImageIOCoder.h",
    "pod_support/Headers/Private/SDWebImage/SDImageLoader.h",
    "pod_support/Headers/Private/SDWebImage/SDImageLoadersManager.h",
    "pod_support/Headers/Private/SDWebImage/SDImageTransformer.h",
    "pod_support/Headers/Private/SDWebImage/SDInternalMacros.h",
    "pod_support/Headers/Private/SDWebImage/SDMemoryCache.h",
    "pod_support/Headers/Private/SDWebImage/SDWeakProxy.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImage.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageCacheKeyFilter.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageCacheSerializer.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageCompat.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDefine.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDownloader.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDownloaderConfig.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDownloaderDecryptor.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDownloaderOperation.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDownloaderRequestModifier.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageDownloaderResponseModifier.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageError.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageIndicator.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageManager.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageOperation.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageOptionsProcessor.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImagePrefetcher.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageTransition.h",
    "pod_support/Headers/Private/SDWebImage/SDWebImageTransitionInternal.h",
    "pod_support/Headers/Private/SDWebImage/SDmetamacros.h",
    "pod_support/Headers/Private/SDWebImage/UIButton+WebCache.h",
    "pod_support/Headers/Private/SDWebImage/UIColor+SDHexString.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+ExtendedCacheData.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+ForceDecode.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+GIF.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+MemoryCacheCost.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+Metadata.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+MultiFormat.h",
    "pod_support/Headers/Private/SDWebImage/UIImage+Transform.h",
    "pod_support/Headers/Private/SDWebImage/UIImageView+HighlightedWebCache.h",
    "pod_support/Headers/Private/SDWebImage/UIImageView+WebCache.h",
    "pod_support/Headers/Private/SDWebImage/UIView+WebCache.h",
    "pod_support/Headers/Private/SDWebImage/UIView+WebCacheOperation.h",
    "pod_support/Headers/Public/SDWebImage/NSButton+WebCache.h",
    "pod_support/Headers/Public/SDWebImage/NSData+ImageContentType.h",
    "pod_support/Headers/Public/SDWebImage/NSImage+Compatibility.h",
    "pod_support/Headers/Public/SDWebImage/SDAnimatedImage.h",
    "pod_support/Headers/Public/SDWebImage/SDAnimatedImagePlayer.h",
    "pod_support/Headers/Public/SDWebImage/SDAnimatedImageRep.h",
    "pod_support/Headers/Public/SDWebImage/SDAnimatedImageView+WebCache.h",
    "pod_support/Headers/Public/SDWebImage/SDAnimatedImageView.h",
    "pod_support/Headers/Public/SDWebImage/SDDiskCache.h",
    "pod_support/Headers/Public/SDWebImage/SDGraphicsImageRenderer.h",
    "pod_support/Headers/Public/SDWebImage/SDImageAPNGCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageAWebPCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCache.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCacheConfig.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCacheDefine.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCachesManager.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCoderHelper.h",
    "pod_support/Headers/Public/SDWebImage/SDImageCodersManager.h",
    "pod_support/Headers/Public/SDWebImage/SDImageFrame.h",
    "pod_support/Headers/Public/SDWebImage/SDImageGIFCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageGraphics.h",
    "pod_support/Headers/Public/SDWebImage/SDImageHEICCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageIOAnimatedCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageIOCoder.h",
    "pod_support/Headers/Public/SDWebImage/SDImageLoader.h",
    "pod_support/Headers/Public/SDWebImage/SDImageLoadersManager.h",
    "pod_support/Headers/Public/SDWebImage/SDImageTransformer.h",
    "pod_support/Headers/Public/SDWebImage/SDMemoryCache.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImage.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageCacheKeyFilter.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageCacheSerializer.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageCompat.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDefine.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDownloader.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDownloaderConfig.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDownloaderDecryptor.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDownloaderOperation.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDownloaderRequestModifier.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageDownloaderResponseModifier.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageError.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageIndicator.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageManager.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageOperation.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageOptionsProcessor.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImagePrefetcher.h",
    "pod_support/Headers/Public/SDWebImage/SDWebImageTransition.h",
    "pod_support/Headers/Public/SDWebImage/UIButton+WebCache.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+ExtendedCacheData.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+ForceDecode.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+GIF.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+MemoryCacheCost.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+Metadata.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+MultiFormat.h",
    "pod_support/Headers/Public/SDWebImage/UIImage+Transform.h",
    "pod_support/Headers/Public/SDWebImage/UIImageView+HighlightedWebCache.h",
    "pod_support/Headers/Public/SDWebImage/UIImageView+WebCache.h",
    "pod_support/Headers/Public/SDWebImage/UIView+WebCache.h",
    "pod_support/Headers/Public/SDWebImage/UIView+WebCacheOperation.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/SDWebImage/SDWebImage_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/SDWebImage/SDWebImage_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_srcs",
  srcs = [
    "SDWebImage/Private/NSBezierPath+SDRoundedCorners.m",
    "SDWebImage/Core/NSButton+WebCache.m",
    "SDWebImage/Core/NSData+ImageContentType.m",
    "SDWebImage/Core/NSImage+Compatibility.m",
    "SDWebImage/Core/SDAnimatedImage.m",
    "SDWebImage/Core/SDAnimatedImagePlayer.m",
    "SDWebImage/Core/SDAnimatedImageRep.m",
    "SDWebImage/Core/SDAnimatedImageView+WebCache.m",
    "SDWebImage/Core/SDAnimatedImageView.m",
    "SDWebImage/Private/SDAssociatedObject.m",
    "SDWebImage/Private/SDAsyncBlockOperation.m",
    "SDWebImage/Private/SDDeviceHelper.m",
    "SDWebImage/Core/SDDiskCache.m",
    "SDWebImage/Private/SDDisplayLink.m",
    "SDWebImage/Private/SDFileAttributeHelper.m",
    "SDWebImage/Core/SDGraphicsImageRenderer.m",
    "SDWebImage/Core/SDImageAPNGCoder.m",
    "SDWebImage/Private/SDImageAssetManager.m",
    "SDWebImage/Core/SDImageAWebPCoder.m",
    "SDWebImage/Core/SDImageCache.m",
    "SDWebImage/Core/SDImageCacheConfig.m",
    "SDWebImage/Core/SDImageCacheDefine.m",
    "SDWebImage/Core/SDImageCachesManager.m",
    "SDWebImage/Private/SDImageCachesManagerOperation.m",
    "SDWebImage/Core/SDImageCoder.m",
    "SDWebImage/Core/SDImageCoderHelper.m",
    "SDWebImage/Core/SDImageCodersManager.m",
    "SDWebImage/Core/SDImageFrame.m",
    "SDWebImage/Core/SDImageGIFCoder.m",
    "SDWebImage/Core/SDImageGraphics.m",
    "SDWebImage/Core/SDImageHEICCoder.m",
    "SDWebImage/Core/SDImageIOAnimatedCoder.m",
    "SDWebImage/Core/SDImageIOCoder.m",
    "SDWebImage/Core/SDImageLoader.m",
    "SDWebImage/Core/SDImageLoadersManager.m",
    "SDWebImage/Core/SDImageTransformer.m",
    "SDWebImage/Private/SDInternalMacros.m",
    "SDWebImage/Core/SDMemoryCache.m",
    "SDWebImage/Private/SDWeakProxy.m",
    "SDWebImage/Core/SDWebImageCacheKeyFilter.m",
    "SDWebImage/Core/SDWebImageCacheSerializer.m",
    "SDWebImage/Core/SDWebImageCompat.m",
    "SDWebImage/Core/SDWebImageDefine.m",
    "SDWebImage/Core/SDWebImageDownloader.m",
    "SDWebImage/Core/SDWebImageDownloaderConfig.m",
    "SDWebImage/Core/SDWebImageDownloaderDecryptor.m",
    "SDWebImage/Core/SDWebImageDownloaderOperation.m",
    "SDWebImage/Core/SDWebImageDownloaderRequestModifier.m",
    "SDWebImage/Core/SDWebImageDownloaderResponseModifier.m",
    "SDWebImage/Core/SDWebImageError.m",
    "SDWebImage/Core/SDWebImageIndicator.m",
    "SDWebImage/Core/SDWebImageManager.m",
    "SDWebImage/Core/SDWebImageOperation.m",
    "SDWebImage/Core/SDWebImageOptionsProcessor.m",
    "SDWebImage/Core/SDWebImagePrefetcher.m",
    "SDWebImage/Core/SDWebImageTransition.m",
    "SDWebImage/Core/UIButton+WebCache.m",
    "SDWebImage/Private/UIColor+SDHexString.m",
    "SDWebImage/Core/UIImage+ExtendedCacheData.m",
    "SDWebImage/Core/UIImage+ForceDecode.m",
    "SDWebImage/Core/UIImage+GIF.m",
    "SDWebImage/Core/UIImage+MemoryCacheCost.m",
    "SDWebImage/Core/UIImage+Metadata.m",
    "SDWebImage/Core/UIImage+MultiFormat.m",
    "SDWebImage/Core/UIImage+Transform.m",
    "SDWebImage/Core/UIImageView+HighlightedWebCache.m",
    "SDWebImage/Core/UIImageView+WebCache.m",
    "SDWebImage/Core/UIView+WebCache.m",
    "SDWebImage/Core/UIView+WebCacheOperation.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [
    "Core_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "ImageIO"
  ],
  deps = [
    ":SDWebImage_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":SDWebImage_private_includes",
    ":SDWebImage_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Core_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MapKit_hdrs",
  srcs = [
    "SDWebImageMapKit/MapKit/MKAnnotationView+WebCache.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MapKit_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MapKit_swift_interface",
  deps = [],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MapKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "MapKit_module_map",
  module_map = "pod_support/Headers/Public/SDWebImage/SDWebImage_MapKit-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/SDWebImage/SDWebImage_MapKit-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "MapKit_srcs",
  srcs = [
    "SDWebImageMapKit/MapKit/MKAnnotationView+WebCache.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "MapKit_oc",
  enable_modules = 1,
  srcs = [
    "MapKit_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "MapKit_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "ImageIO",
    "MapKit"
  ],
  deps = [
    ":SDWebImage_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":SDWebImage_private_includes",
    ":SDWebImage_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":MapKit_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "MapKit",
  deps = [
    ":MapKit_oc"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "MapKit_lib",
  deps = [
    ":MapKit"
  ],
  minimum_os_version = "9.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_SDWebImage_module_map",
  module_map = "@SDWebImage//:pod_support/Headers/Public/SDWebImage/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@SDWebImage//:pod_support/Headers/Public/SDWebImage/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_SDWebImage_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@SDWebImage//:Core_objc_interface", "@SDWebImage//:SDWebImage_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_SDWebImage",
  target_name = "Lark",
  module_name = "SDWebImage",
  hdrs = ["@SDWebImage//:Core_pod_hdrs", "@SDWebImage//:SDWebImage_root_pod_hdrs"],
  srcs = ["@SDWebImage//:Core_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = [],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "SDWebImage_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "SDWebImage_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = ["ImageIO"],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = [],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "SDWebImage_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "SDWebImage_features", []),
  link_dynamic = getattr(defs_external_objc_library, "SDWebImage_dynamic", False),
  tags = getattr(defs_external_objc_library, "SDWebImage_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("SDWebImage", {}),
  visibility = ["//visibility:public"],
)