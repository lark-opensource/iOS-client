load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "VCPreloadStrategy_pod_hdrs",
  srcs = [
    ":VCPreloadStrategy_root_pod_hdrs",
    ":Core_pod_hdrs",
    ":Bridge_pod_hdrs",
    ":Extern_pod_hdrs",
    ":Base_pod_hdrs",
    ":Center_pod_hdrs",
    ":Settings_pod_hdrs",
    ":PlayRange_pod_hdrs",
    ":SmartTask_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "VCPreloadStrategy_private_includes",
  include = [
    "external/VCPreloadStrategy/pod_support/Headers/Private/VCPreloadStrategy/"
  ],
  deps = [],
  external_name = "VCPreloadStrategy"
)
gen_includes(
  name = "VCPreloadStrategy_public_includes",
  include = [
    "external/VCPreloadStrategy/pod_support/Headers/Public/VCPreloadStrategy/"
  ],
  deps = [],
  external_name = "VCPreloadStrategy"
)
filegroup(
  name = "_VCPreloadStrategy_hdrs",
  srcs = [
    ":VCPreloadStrategy_root_hdrs",
    ":Core_hdrs",
    ":Bridge_hdrs",
    ":Extern_hdrs",
    ":Base_hdrs",
    ":Center_hdrs",
    ":Settings_hdrs",
    ":PlayRange_hdrs",
    ":SmartTask_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "VCPreloadStrategy_xcode_hmapsource",
  hdrs = [
    ":VCPreloadStrategy_root_hdrs",
    ":Base_hdrs",
    ":Bridge_hdrs",
    ":Center_hdrs",
    ":Core_hdrs",
    ":Extern_hdrs",
    ":PlayRange_hdrs",
    ":Settings_hdrs",
    ":SmartTask_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "VCPreloadStrategy_xcode_hmap",
  dep = ":VCPreloadStrategy_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/VCPreloadStrategy/*-bitsky-generated.modulemap", "pod_support/Headers/Public/VCPreloadStrategy/*-bitsky-generated-umbrella.h"]))
objc_import(
  name = "VCPreloadStrategy_Bridge_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libVCPreloadStrategy_Bridge_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
objc_import(
  name = "VCPreloadStrategy_Base_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libVCPreloadStrategy_Base_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
objc_import(
  name = "VCPreloadStrategy_Center_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libVCPreloadStrategy_Center_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
objc_import(
  name = "VCPreloadStrategy_Settings_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libVCPreloadStrategy_Settings_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
objc_import(
  name = "VCPreloadStrategy_PlayRange_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libVCPreloadStrategy_PlayRange_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
objc_import(
  name = "VCPreloadStrategy_SmartTask_VendoredLibraries",
  archives = select(
    {
      "//conditions:default": [
        "ios-arch-iphone/libVCPreloadStrategy_SmartTask_awesome_ios.a"
      ]
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "VCPreloadStrategy_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "VCPreloadStrategy",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "VCPreloadStrategy_xcode_hmap_includes",
  include = [],
  include_files = [
    ":VCPreloadStrategy_xcode_hmap"
  ],
  external_name = "VCPreloadStrategy",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "VCPreloadStrategy_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "VCPreloadStrategy_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "VCPreloadStrategy_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "VCPreloadStrategy_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "VCPreloadStrategy_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "VCPreloadStrategy_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "VCPreloadStrategy_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "VCPreloadStrategy",
  deps = [
    ":VCPreloadStrategy_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "VCPreloadStrategy_lib",
  deps = [
    ":VCPreloadStrategy"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Core_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Core-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Core-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Core_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":Core_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Core",
  deps = [
    ":Core_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Core_lib",
  deps = [
    ":Core"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Bridge_hdrs",
  srcs = [
    "ios/bridge/VCUtilBridge.h",
    "ios/bridge/VCVodStrategyBridge.h",
    "ios/bridge/VCVodStrategyManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Bridge_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/VCUtilBridge.h",
    "pod_support/Headers/Private/VCPreloadStrategy/VCVodStrategyBridge.h",
    "pod_support/Headers/Private/VCPreloadStrategy/VCVodStrategyManager.h",
    "pod_support/Headers/Public/VCPreloadStrategy/VCVodStrategyManager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Bridge_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Bridge_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Bridge_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Bridge-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Bridge-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Bridge_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Bridge_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_Bridge_VendoredLibraries",
    ":Bridge_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Bridge",
  deps = [
    ":Bridge_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Bridge_lib",
  deps = [
    ":Bridge"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Extern_hdrs",
  srcs = [
    "extern/json/json/json-forwards.h",
    "extern/json/json/json.h",
    "extern/player/av_load_control.h",
    "extern/player/av_player_event.h",
    "extern/player/av_player_event_base.h",
    "extern/player/av_player_interface.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Extern_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/av_load_control.h",
    "pod_support/Headers/Private/VCPreloadStrategy/av_player_event.h",
    "pod_support/Headers/Private/VCPreloadStrategy/av_player_event_base.h",
    "pod_support/Headers/Private/VCPreloadStrategy/av_player_interface.h",
    "pod_support/Headers/Private/VCPreloadStrategy/json-forwards.h",
    "pod_support/Headers/Private/VCPreloadStrategy/json.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Extern_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Extern_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Extern_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Extern-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Extern-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Extern_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Extern_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":Extern_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Extern",
  deps = [
    ":Extern_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Extern_lib",
  deps = [
    ":Extern"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Base_hdrs",
  srcs = [
    "sources/base/apple/cf_reference_util.h",
    "sources/base/apple/message_loop_darwin.h",
    "sources/base/message_loop.h",
    "sources/base/message_loop_impl.h",
    "sources/base/message_loop_task_queue.h",
    "sources/base/message_task.h",
    "sources/base/message_task_runner.h",
    "sources/base/thread_local.h",
    "sources/base/unique_fd.h",
    "sources/base/vc_base.h",
    "sources/base/vc_json.h",
    "sources/base/vc_lru_cache.h",
    "sources/base/vc_object.h",
    "sources/base/vc_shared_mutex.h",
    "sources/base/vc_time_util.h",
    "sources/base/vc_unique_object.h",
    "sources/base/vc_utils.h",
    "sources/base/wait_event.h",
    "sources/imodule/vc_context.h",
    "sources/imodule/vc_coordinator.h",
    "sources/imodule/vc_executor.h",
    "sources/imodule/vc_iexecutor.h",
    "sources/imodule/vc_imodule.h",
    "sources/imodule/vc_istrategy.h",
    "sources/imodule/vc_log.h",
    "sources/imodule/vc_message.h",
    "sources/imodule/vc_module.h",
    "sources/imodule/vc_module_factory.h",
    "sources/imodule/vc_strategy_result.h",
    "sources/interface/vc_play_buffer_interface.h",
    "sources/interface/vc_play_range_interface.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Base_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/cf_reference_util.h",
    "pod_support/Headers/Private/VCPreloadStrategy/message_loop.h",
    "pod_support/Headers/Private/VCPreloadStrategy/message_loop_darwin.h",
    "pod_support/Headers/Private/VCPreloadStrategy/message_loop_impl.h",
    "pod_support/Headers/Private/VCPreloadStrategy/message_loop_task_queue.h",
    "pod_support/Headers/Private/VCPreloadStrategy/message_task.h",
    "pod_support/Headers/Private/VCPreloadStrategy/message_task_runner.h",
    "pod_support/Headers/Private/VCPreloadStrategy/thread_local.h",
    "pod_support/Headers/Private/VCPreloadStrategy/unique_fd.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_base.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_context.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_coordinator.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_executor.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_iexecutor.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_imodule.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_istrategy.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_json.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_log.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_lru_cache.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_message.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_module.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_module_factory.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_object.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_buffer_interface.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_range_interface.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_shared_mutex.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_strategy_result.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_time_util.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_unique_object.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_utils.h",
    "pod_support/Headers/Private/VCPreloadStrategy/wait_event.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Base_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Base_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Base_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Base-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Base-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Base_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Base_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_Base_VendoredLibraries",
    ":Base_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Base",
  deps = [
    ":Base_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Base_lib",
  deps = [
    ":Base"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Center_hdrs",
  srcs = [
    "sources/center/event/vc_event_log_keys.h",
    "sources/center/event/vc_event_log_manager.h",
    "sources/center/feature/vc_feature.h",
    "sources/center/feature/vc_feature_define.h",
    "sources/center/feature/vc_feature_produce.h",
    "sources/center/feature/vc_feature_supplier.h",
    "sources/center/feature/vc_feature_supplier_interface.h",
    "sources/center/feature/vc_play_feature.h",
    "sources/center/feature/vc_vod_server_feature.h",
    "sources/center/portrait/vc_iportrait_supplier.h",
    "sources/center/portrait/vc_portrait_supplier.h",
    "sources/center/vc_algorithm_param.h",
    "sources/center/vc_app_info.h",
    "sources/center/vc_common_thread.h",
    "sources/center/vc_define.h",
    "sources/center/vc_device_info.h",
    "sources/center/vc_dubbed_audio_info.h",
    "sources/center/vc_dynamic_config_handler.h",
    "sources/center/vc_event_listener.h",
    "sources/center/vc_exception.h",
    "sources/center/vc_info.h",
    "sources/center/vc_keys.h",
    "sources/center/vc_loader_info.h",
    "sources/center/vc_loader_info_handler.h",
    "sources/center/vc_manager.h",
    "sources/center/vc_media_dynamic_info.h",
    "sources/center/vc_media_info.h",
    "sources/center/vc_media_segment.h",
    "sources/center/vc_net_simple.h",
    "sources/center/vc_play_record.h",
    "sources/center/vc_play_task.h",
    "sources/center/vc_player_context_wrapper.h",
    "sources/center/vc_player_info.h",
    "sources/center/vc_player_manager.h",
    "sources/center/vc_priority_task_info.h",
    "sources/center/vc_representation_info.h",
    "sources/center/vc_scene.h",
    "sources/center/vc_scene_manager.h",
    "sources/center/vc_state_supplier.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Center_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/vc_algorithm_param.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_app_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_common_thread.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_define.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_device_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_dubbed_audio_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_dynamic_config_handler.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_event_listener.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_event_log_keys.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_event_log_manager.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_exception.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_feature.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_feature_define.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_feature_produce.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_feature_supplier.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_feature_supplier_interface.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_iportrait_supplier.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_keys.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_loader_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_loader_info_handler.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_manager.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_media_dynamic_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_media_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_media_segment.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_net_simple.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_feature.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_record.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_task.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_player_context_wrapper.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_player_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_player_manager.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_portrait_supplier.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_priority_task_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_representation_info.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_scene.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_scene_manager.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_state_supplier.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_vod_server_feature.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_event_log_keys.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_event_log_manager.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_feature.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_feature_define.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_feature_produce.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_feature_supplier.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_feature_supplier_interface.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_iportrait_supplier.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_play_feature.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_portrait_supplier.h",
    "pod_support/Headers/Public/VCPreloadStrategy/vc_vod_server_feature.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Center_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Center_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Center_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Center-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Center-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Center_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Center_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_Center_VendoredLibraries",
    ":Center_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Center",
  deps = [
    ":Center_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Center_lib",
  deps = [
    ":Center"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Settings_hdrs",
  srcs = [
    "sources/settings/vc_player_option.h",
    "sources/settings/vc_setting_key.h",
    "sources/settings/vc_settings.h",
    "sources/settings/vc_settings_store.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Settings_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/vc_player_option.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_setting_key.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_settings.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_settings_store.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Settings_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Settings_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Settings_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Settings-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_Settings-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Settings_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "Settings_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_Settings_VendoredLibraries",
    ":Settings_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Settings",
  deps = [
    ":Settings_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Settings_lib",
  deps = [
    ":Settings"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PlayRange_hdrs",
  srcs = [
    "sources/play/vc_play_range.h",
    "sources/play/vc_play_range_st.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "PlayRange_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_range.h",
    "pod_support/Headers/Private/VCPreloadStrategy/vc_play_range_st.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PlayRange_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PlayRange_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "PlayRange_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_PlayRange-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_PlayRange-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "PlayRange_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "PlayRange_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_PlayRange_VendoredLibraries",
    ":PlayRange_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-DVCMODULE_PLAY_RANGE",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "PlayRange",
  deps = [
    ":PlayRange_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "PlayRange_lib",
  deps = [
    ":PlayRange"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SmartTask_hdrs",
  srcs = [
    "sources/smartTask/vc_smart_task_manager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "SmartTask_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/VCPreloadStrategy/vc_smart_task_manager.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "SmartTask_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "SmartTask_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "SmartTask_module_map",
  module_map = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_SmartTask-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/VCPreloadStrategy/VCPreloadStrategy_SmartTask-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "SmartTask_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "SmartTask_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  sdk_frameworks = [
    "UIKit",
    "Foundation",
    "JavaScriptCore"
  ],
  sdk_dylibs = [
    "stdc++"
  ],
  deps = [
    ":VCPreloadStrategy_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":VCPreloadStrategy_private_includes",
    ":VCPreloadStrategy_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_swift_interface",
    ":VCPreloadStrategy_SmartTask_VendoredLibraries",
    ":SmartTask_objc_interface",
    "@MDLMediaDataLoader//:MDLMediaDataLoader_module_map"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=c++17",
    "-fno-c++-static-destructors",
    "-fno-exceptions"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "SmartTask",
  deps = [
    ":SmartTask_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "SmartTask_lib",
  deps = [
    ":SmartTask"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_VCPreloadStrategy_module_map",
  module_map = "@VCPreloadStrategy//:pod_support/Headers/Public/VCPreloadStrategy/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@VCPreloadStrategy//:pod_support/Headers/Public/VCPreloadStrategy/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_VCPreloadStrategy_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@VCPreloadStrategy//:Base_objc_interface", "@VCPreloadStrategy//:Bridge_objc_interface", "@VCPreloadStrategy//:Center_objc_interface", "@VCPreloadStrategy//:Core_objc_interface", "@VCPreloadStrategy//:Extern_objc_interface", "@VCPreloadStrategy//:PlayRange_objc_interface", "@VCPreloadStrategy//:Settings_objc_interface", "@VCPreloadStrategy//:SmartTask_objc_interface", "@VCPreloadStrategy//:VCPreloadStrategy_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_library")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_library(
  name = "Lark_VCPreloadStrategy",
  target_name = "Lark",
  module_name = "VCPreloadStrategy",
  hdrs = ["@VCPreloadStrategy//:Base_pod_hdrs", "@VCPreloadStrategy//:Bridge_pod_hdrs", "@VCPreloadStrategy//:Center_pod_hdrs", "@VCPreloadStrategy//:Core_pod_hdrs", "@VCPreloadStrategy//:Extern_pod_hdrs", "@VCPreloadStrategy//:PlayRange_pod_hdrs", "@VCPreloadStrategy//:Settings_pod_hdrs", "@VCPreloadStrategy//:SmartTask_pod_hdrs", "@VCPreloadStrategy//:VCPreloadStrategy_root_pod_hdrs"],
  srcs = [],
  non_arc_srcs = [],
  deps = ["@VCPreloadStrategy//:VCPreloadStrategy_Base_VendoredLibraries", "@VCPreloadStrategy//:VCPreloadStrategy_Bridge_VendoredLibraries", "@VCPreloadStrategy//:VCPreloadStrategy_Center_VendoredLibraries", "@VCPreloadStrategy//:VCPreloadStrategy_PlayRange_VendoredLibraries", "@VCPreloadStrategy//:VCPreloadStrategy_Settings_VendoredLibraries", "@VCPreloadStrategy//:VCPreloadStrategy_SmartTask_VendoredLibraries"],
  pod_deps = ["MDLMediaDataLoader"],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-D__IOS__",
    "-DVCPreloadStrategy_POD_VERSION=@\\\"9999_1.108.2-lark\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-DVCMODULE_PLAY_RANGE",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "VCPreloadStrategy_copts", []),
  cxxopts = ["-std=c++17", "-fno-c++-static-destructors", "-fno-exceptions", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "VCPreloadStrategy_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = ["UIKit", "Foundation", "JavaScriptCore"],
  weak_sdk_frameworks = [],
  sdk_dylibs = ["stdc++"],
  data = [],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "VCPreloadStrategy_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "VCPreloadStrategy_features", []),
  link_dynamic = getattr(defs_external_objc_library, "VCPreloadStrategy_dynamic", False),
  tags = getattr(defs_external_objc_library, "VCPreloadStrategy_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("VCPreloadStrategy", {}),
  visibility = ["//visibility:public"],
)