load('@build_bazel_rules_apple//apple:ios.bzl', 'ios_static_framework')
load(
  "@rules_pods//BazelExtensions:extensions.bzl",
  "gen_includes",
  "module_map",
  "gen_hmapsource",
  "gen_hmap",
  "run_script_phase",
  "objc_package",
  "resource_provider",
  "uniq_filegroup"
)
load('@main_project//.bitsky/common:bitsky_common.bzl', 'defs_package_features', 'defs_external_objc_library', 'defs_external_swift_library', 'defs_extension_objc_library', 'defs_extension_swift_library', 'define_minimum_os_version')
package(features = defs_package_features)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
load(
  "@bazel_skylib//lib:selects.bzl",
  "selects"
)
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "iosCase",
  values = {
    "apple_platform_type": "ios"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
config_setting(
  name = "x86_64",
  values = {
    "ios_multi_cpus": "x86_64"
  }
)
config_setting(
  name = "i386",
  values = {
    "ios_multi_cpus": "i386"
  }
)
config_setting(
  name = "armv7",
  values = {
    "ios_multi_cpus": "armv7"
  }
)
config_setting(
  name = "arm64",
  values = {
    "ios_multi_cpus": "arm64"
  }
)
config_setting(
  name = "sim_arm64",
  values = {
    "ios_multi_cpus": "sim_arm64"
  }
)
selects.config_setting_group(
  name = "sim_archs",
  match_any = [
    ":x86_64",
    ":i386",
    ":sim_arm64"
  ]
)
selects.config_setting_group(
  name = "x86",
  match_any = [
    ":x86_64",
    ":i386"
  ]
)
selects.config_setting_group(
  name = "arm",
  match_any = [
    ":arm64",
    ":armv7"
  ]
)
selects.config_setting_group(
  name = "iosDevice",
  match_all = [
    ":arm",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "iosSimulator",
  match_all = [
    ":sim_archs",
    ":iosCase"
  ]
)
selects.config_setting_group(
  name = "watchosDevice",
  match_all = [
    ":arm",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "watchosSimulator",
  match_all = [
    ":x86",
    ":watchosCase"
  ]
)
selects.config_setting_group(
  name = "tvosDevice",
  match_all = [
    ":arm",
    ":tvosCase"
  ]
)
selects.config_setting_group(
  name = "tvosSimulator",
  match_all = [
    ":x86",
    ":tvosCase"
  ]
)
filegroup(
  name = "ZstdDecompressKit_pod_hdrs",
  srcs = [
    ":ZstdDecompressKit_root_pod_hdrs",
    ":Decompress_pod_hdrs",
    ":Compress_pod_hdrs",
    ":libcommon_pod_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)

gen_includes(
  name = "ZstdDecompressKit_private_includes",
  include = [
    "external/ZstdDecompressKit/pod_support/Headers/Private/ZstdDecompressKit/"
  ],
  deps = [],
  external_name = "ZstdDecompressKit"
)
gen_includes(
  name = "ZstdDecompressKit_public_includes",
  include = [
    "external/ZstdDecompressKit/pod_support/Headers/Public/ZstdDecompressKit/"
  ],
  deps = [],
  external_name = "ZstdDecompressKit"
)
filegroup(
  name = "_ZstdDecompressKit_hdrs",
  srcs = [
    ":ZstdDecompressKit_root_hdrs",
    ":Decompress_hdrs",
    ":Compress_hdrs",
    ":libcommon_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
gen_hmapsource(
  name = "ZstdDecompressKit_xcode_hmapsource",
  hdrs = [
    ":ZstdDecompressKit_root_hdrs",
    ":Compress_hdrs",
    ":Decompress_hdrs",
    ":libcommon_hdrs"
  ],
  namespace = False,
  visibility = [
    "//visibility:public"
  ]
)
gen_hmap(
  name = "ZstdDecompressKit_xcode_hmap",
  dep = ":ZstdDecompressKit_xcode_hmapsource",
  visibility = [
    "//visibility:public"
  ]
)
exports_files(glob(["pod_support/Headers/Public/ZstdDecompressKit/*-bitsky-generated.modulemap", "pod_support/Headers/Public/ZstdDecompressKit/*-bitsky-generated-umbrella.h"]))
gen_includes(
  name = "ZstdDecompressKit_custom_includes",
  include = [
    "external/Protobuf/objectivec"
  ],
  include_files = [],
  external_name = "ZstdDecompressKit",
  visibility = [
    "//visibility:public"
  ]
)
gen_includes(
  name = "ZstdDecompressKit_xcode_hmap_includes",
  include = [],
  include_files = [
    ":ZstdDecompressKit_xcode_hmap"
  ],
  external_name = "ZstdDecompressKit",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ZstdDecompressKit_root_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "ZstdDecompressKit_root_pod_hdrs",
  srcs = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ZstdDecompressKit_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ZstdDecompressKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "ZstdDecompressKit_module_map",
  module_map = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "ZstdDecompressKit_oc",
  enable_modules = 1,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [
    "ZstdDecompressKit_root_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":ZstdDecompressKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":ZstdDecompressKit_private_includes",
    ":ZstdDecompressKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":ZstdDecompressKit_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DZstdDecompressKit_POD_VERSION=@\\\"9999_1.0.3\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "ZstdDecompressKit",
  deps = [
    ":ZstdDecompressKit_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "ZstdDecompressKit_lib",
  deps = [
    ":ZstdDecompressKit"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Decompress_hdrs",
  srcs = [
    "ios/zstdlib/Classes/decompress/NSData+ZstdDecompression.h",
    "ios/zstdlib/Classes/decompress/ZstdDecompression.h",
    "ios/zstdlib/Classes/decompress/ZstdDecompressor.h",
    "ios/zstdlib/Classes/decompress/ZstdKitDecompress.h",
    "lib/decompress/zstd_ddict.h",
    "lib/decompress/zstd_decompress_block.h",
    "lib/decompress/zstd_decompress_internal.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Decompress_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/ZstdDecompressKit/NSData+ZstdDecompression.h",
    "pod_support/Headers/Private/ZstdDecompressKit/ZstdDecompression.h",
    "pod_support/Headers/Private/ZstdDecompressKit/ZstdDecompressor.h",
    "pod_support/Headers/Private/ZstdDecompressKit/ZstdKitDecompress.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_ddict.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_decompress_block.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_decompress_internal.h",
    "pod_support/Headers/Public/ZstdDecompressKit/NSData+ZstdDecompression.h",
    "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompression.h",
    "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressor.h",
    "pod_support/Headers/Public/ZstdDecompressKit/ZstdKitDecompress.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Decompress_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Decompress_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Decompress_module_map",
  module_map = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit_Decompress-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit_Decompress-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Decompress_srcs",
  srcs = [
    "lib/decompress/huf_decompress.c",
    "ios/zstdlib/Classes/decompress/NSData+ZstdDecompression.m",
    "lib/decompress/zstd_ddict.c",
    "lib/decompress/zstd_decompress.c",
    "lib/decompress/zstd_decompress_block.c",
    "ios/zstdlib/Classes/decompress/ZstdDecompression.c",
    "ios/zstdlib/Classes/decompress/ZstdDecompressor.m"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Decompress_oc",
  enable_modules = 1,
  srcs = [
    "Decompress_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Decompress_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":ZstdDecompressKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":ZstdDecompressKit_private_includes",
    ":ZstdDecompressKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Decompress_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DZstdDecompressKit_POD_VERSION=@\\\"9999_1.0.3\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Decompress",
  deps = [
    ":Decompress_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Decompress_lib",
  deps = [
    ":Decompress"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Compress_hdrs",
  srcs = [
    "ios/zstdlib/Classes/compress/NSData+ZstdCompression.h",
    "ios/zstdlib/Classes/compress/ZstdCompression.h",
    "ios/zstdlib/Classes/compress/ZstdCompressor.h",
    "lib/compress/hist.h",
    "lib/compress/zstd_compress_internal.h",
    "lib/compress/zstd_compress_literals.h",
    "lib/compress/zstd_compress_sequences.h",
    "lib/compress/zstd_compress_superblock.h",
    "lib/compress/zstd_cwksp.h",
    "lib/compress/zstd_double_fast.h",
    "lib/compress/zstd_fast.h",
    "lib/compress/zstd_lazy.h",
    "lib/compress/zstd_ldm.h",
    "lib/compress/zstd_ldm_geartab.h",
    "lib/compress/zstd_opt.h",
    "lib/compress/zstdmt_compress.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Compress_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/ZstdDecompressKit/NSData+ZstdCompression.h",
    "pod_support/Headers/Private/ZstdDecompressKit/ZstdCompression.h",
    "pod_support/Headers/Private/ZstdDecompressKit/ZstdCompressor.h",
    "pod_support/Headers/Private/ZstdDecompressKit/hist.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_compress_internal.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_compress_literals.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_compress_sequences.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_compress_superblock.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_cwksp.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_double_fast.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_fast.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_lazy.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_ldm.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_ldm_geartab.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_opt.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstdmt_compress.h",
    "pod_support/Headers/Public/ZstdDecompressKit/NSData+ZstdCompression.h",
    "pod_support/Headers/Public/ZstdDecompressKit/ZstdCompression.h",
    "pod_support/Headers/Public/ZstdDecompressKit/ZstdCompressor.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Compress_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Compress_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Compress_module_map",
  module_map = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit_Compress-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit_Compress-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Compress_srcs",
  srcs = [
    "lib/compress/fse_compress.c",
    "lib/compress/hist.c",
    "lib/compress/huf_compress.c",
    "ios/zstdlib/Classes/compress/NSData+ZstdCompression.m",
    "lib/compress/zstd_compress.c",
    "lib/compress/zstd_compress_literals.c",
    "lib/compress/zstd_compress_sequences.c",
    "lib/compress/zstd_compress_superblock.c",
    "lib/compress/zstd_double_fast.c",
    "lib/compress/zstd_fast.c",
    "lib/compress/zstd_lazy.c",
    "lib/compress/zstd_ldm.c",
    "lib/compress/zstd_opt.c",
    "ios/zstdlib/Classes/compress/ZstdCompression.c",
    "ios/zstdlib/Classes/compress/ZstdCompressor.m",
    "lib/compress/zstdmt_compress.c"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Compress_oc",
  enable_modules = 1,
  srcs = [
    "Compress_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "Compress_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":ZstdDecompressKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":ZstdDecompressKit_private_includes",
    ":ZstdDecompressKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":Compress_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DZstdDecompressKit_POD_VERSION=@\\\"9999_1.0.3\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "Compress",
  deps = [
    ":Compress_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "Compress_lib",
  deps = [
    ":Compress"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "libcommon_hdrs",
  srcs = [
    "lib/common/bitstream.h",
    "lib/common/compiler.h",
    "lib/common/cpu.h",
    "lib/common/debug.h",
    "lib/common/error_private.h",
    "lib/common/fse.h",
    "lib/common/huf.h",
    "lib/common/mem.h",
    "lib/common/pool.h",
    "lib/common/threading.h",
    "lib/common/xxhash.h",
    "lib/common/zstd_deps.h",
    "lib/common/zstd_internal.h",
    "lib/common/zstd_trace.h",
    "lib/zdict.h",
    "lib/zstd.h",
    "lib/zstd_errors.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "libcommon_pod_hdrs",
  srcs = [
    "pod_support/Headers/Private/ZstdDecompressKit/bitstream.h",
    "pod_support/Headers/Private/ZstdDecompressKit/compiler.h",
    "pod_support/Headers/Private/ZstdDecompressKit/cpu.h",
    "pod_support/Headers/Private/ZstdDecompressKit/debug.h",
    "pod_support/Headers/Private/ZstdDecompressKit/error_private.h",
    "pod_support/Headers/Private/ZstdDecompressKit/fse.h",
    "pod_support/Headers/Private/ZstdDecompressKit/huf.h",
    "pod_support/Headers/Private/ZstdDecompressKit/mem.h",
    "pod_support/Headers/Private/ZstdDecompressKit/pool.h",
    "pod_support/Headers/Private/ZstdDecompressKit/threading.h",
    "pod_support/Headers/Private/ZstdDecompressKit/xxhash.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zdict.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_deps.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_errors.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_internal.h",
    "pod_support/Headers/Private/ZstdDecompressKit/zstd_trace.h",
    "pod_support/Headers/Public/ZstdDecompressKit/zdict.h",
    "pod_support/Headers/Public/ZstdDecompressKit/zstd.h",
    "pod_support/Headers/Public/ZstdDecompressKit/zstd_errors.h"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "libcommon_swift_interface",
  deps = [],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "libcommon_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  copts = select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "libcommon_module_map",
  module_map = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit_libcommon-bazel-generated.modulemap",
  umbrella_hdr = "pod_support/Headers/Public/ZstdDecompressKit/ZstdDecompressKit_libcommon-bazel-generated-umbrella.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "libcommon_srcs",
  srcs = [
    "lib/common/debug.c",
    "lib/common/entropy_common.c",
    "lib/common/error_private.c",
    "lib/common/fse_decompress.c",
    "lib/common/pool.c",
    "lib/common/threading.c",
    "lib/common/xxhash.c",
    "lib/common/zstd_common.c"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "libcommon_oc",
  enable_modules = 1,
  srcs = [
    "libcommon_srcs"
  ],
  non_arc_srcs = [],
  hdrs = [
    "libcommon_hdrs"
  ],
  pch = "@rules_pods//BazelExtensions:common.pch",
  deps = [
    ":ZstdDecompressKit_xcode_hmap_includes",
    "@PodHeaders//:PodHeaders_namespace_interface",
    ":ZstdDecompressKit_private_includes",
    ":ZstdDecompressKit_custom_includes",
    "@PodHeaders//:PodHeaders_public_interface",
    "@PodHeaders//:PodHeaders_global_objc_interface",
    ":libcommon_objc_interface"
  ],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DZstdDecompressKit_POD_VERSION=@\\\"9999_1.0.3\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
    "-I."
  ] + select(
    {
      "//conditions:default": [],
      ":release": []
    }
  ),
  cxxopts = [
    "-std=gnu++14"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_package(
  name = "libcommon",
  deps = [
    ":libcommon_oc"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
ios_static_framework(
  name = "libcommon_lib",
  deps = [
    ":libcommon"
  ],
  minimum_os_version = "8.0",
  visibility = [
    "//visibility:public"
  ]
)
module_map(
  name = "Lark_ZstdDecompressKit_module_map",
  module_map = "@ZstdDecompressKit//:pod_support/Headers/Public/ZstdDecompressKit/Lark-bitsky-generated.modulemap",
  umbrella_hdr = "@ZstdDecompressKit//:pod_support/Headers/Public/ZstdDecompressKit/Lark-bitsky-generated-umbrella.h",
  visibility = ["//visibility:public"],
)
objc_library(
  name = "Lark_ZstdDecompressKit_objc_interface",
  enable_modules = 0,
  srcs = [],
  non_arc_srcs = [],
  hdrs = [],
  deps = ["@ZstdDecompressKit//:Compress_objc_interface", "@ZstdDecompressKit//:Decompress_objc_interface", "@ZstdDecompressKit//:ZstdDecompressKit_objc_interface", "@ZstdDecompressKit//:libcommon_objc_interface"],
  copts = [],
  visibility = ["//visibility:public"],
)
load("@build_bazel_rules_bitsky//rules:framework.bzl", "bitsky_framework")
load("@main_project//.bitsky/common:bitsky_common.bzl", "defs_xcconfigs")
bitsky_framework(
  name = "Lark_ZstdDecompressKit",
  target_name = "Lark",
  module_name = "ZstdDecompressKit",
  hdrs = ["@ZstdDecompressKit//:Compress_pod_hdrs", "@ZstdDecompressKit//:Decompress_pod_hdrs", "@ZstdDecompressKit//:ZstdDecompressKit_root_pod_hdrs", "@ZstdDecompressKit//:libcommon_pod_hdrs"],
  srcs = ["@ZstdDecompressKit//:Compress_srcs", "@ZstdDecompressKit//:Decompress_srcs", "@ZstdDecompressKit//:libcommon_srcs"],
  non_arc_srcs = [],
  deps = [],
  pod_deps = [],
  per_label_options = [],
  copts = [
    "-fobjc-weak",
    "-Wno-unused-command-line-argument",
    "-Wnon-modular-include-in-framework-module",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-non-modular-include-in-framework-module",
    "-Wno-error=non-modular-include-in-framework-module",
    "-DZstdDecompressKit_POD_VERSION=@\\\"9999_1.0.3\\\"",
    "-Wno-documentation",
    "-Wno-nullability-completeness",
  ] + select({
      "//conditions:default": [],
      ":release": ["-Os",]
    }) 
    + getattr(defs_external_objc_library, "common_copts", [])
    + getattr(defs_external_objc_library, "ZstdDecompressKit_copts", []),
  cxxopts = ["-std=gnu++14", ] + getattr(defs_external_objc_library, "common_cxxopts", []) 
    + getattr(defs_external_objc_library, "ZstdDecompressKit_cxxopts", []),
  swift_copts = [],
  sdk_frameworks = [],
  weak_sdk_frameworks = [],
  sdk_dylibs = [],
  data = [],
  objc_features = [] + getattr(defs_external_objc_library, "common_features", []) 
    + getattr(defs_external_objc_library, "ZstdDecompressKit_features", []),
  swift_features = [] + getattr(defs_external_swift_library, "common_features", []) 
    + getattr(defs_external_swift_library, "ZstdDecompressKit_features", []),
  link_dynamic = getattr(defs_external_objc_library, "ZstdDecompressKit_dynamic", False),
  tags = getattr(defs_external_objc_library, "ZstdDecompressKit_tags", []),
  pch = "@rules_pods//BazelExtensions:common.pch",
  xcconfig_by_build_setting = defs_xcconfigs.get("ZstdDecompressKit", {}),
  visibility = ["//visibility:public"],
)