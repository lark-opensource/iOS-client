// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: meego_rust.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

#if DEBUG || ALPHA
extension MeegoRust_Proto_DataType: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "OF_BOOL"),
    1: .same(proto: "OF_INT"),
    2: .same(proto: "OF_DOUBLE"),
    3: .same(proto: "OF_STRING"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_MeegoDb: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "handle"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustConfigMeegoDbParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "path"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustGetMeegoDbParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "scope"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustGetMeegoDbReturn: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "ret"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustGetMeegoDbError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustCloseMeegoDbParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "scope"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustCloseMeegoDbError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_MeegoDbScope: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "memory"),
    2: .same(proto: "global"),
    3: .same(proto: "user"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_MeegoDbError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "database"),
    2: .same(proto: "handle"),
    3: .same(proto: "io"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_DataValue: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "of_bool"),
    2: .standard(proto: "of_int"),
    3: .standard(proto: "of_double"),
    4: .standard(proto: "of_string"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustKvGetParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "data_type"),
    2: .same(proto: "db"),
    3: .same(proto: "domain"),
    4: .same(proto: "key"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustKvGetReturn: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "ret"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustKvGetError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustKvSetParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "is_async"),
    2: .same(proto: "db"),
    3: .same(proto: "domain"),
    4: .same(proto: "key"),
    5: .same(proto: "value"),
    6: .standard(proto: "expired_millis"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_RustKvSetError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackAddParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "db"),
    2: .standard(proto: "lark_scene"),
    3: .standard(proto: "meego_scene"),
    4: .same(proto: "action"),
    5: .standard(proto: "timestamp_millis"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackAddError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackCountParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "db"),
    2: .standard(proto: "lark_scene"),
    3: .standard(proto: "meego_scene"),
    4: .same(proto: "action"),
    5: .standard(proto: "after_time_stamp_millis"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackCountReturn: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "ret"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackCountError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackDeleteParams: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "db"),
    2: .standard(proto: "before_time_stamp_millis"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto_UserTrackDeleteError: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "err"),
  ]
}
#endif

#if DEBUG || ALPHA
extension MeegoRust_Proto___molten_ffi_placeholder: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()
}
#endif
