#!/bin/sh
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

ROOTDIR=$(pwd)

# 执行xunique未安装
echo "step 1: Uniquify and sort project.pbxpro..."
if ! type xunique >/dev/null 2>&1; then
    echo 'xunique未安装';
else
    xunique "$ROOTDIR"/Lark.xcodeproj/project.pbxproj
fi

echo "step 2: Pod version check..."
ruby "$ROOTDIR"/hooks/check_pods.rb "$ROOTDIR"
RESULT=$?
if [ $RESULT -eq 0 ]; then
    echo "没有发现 pods 问题"
else
    exit $RESULT
fi

echo "3. generate config"
if [[ -n $(git diff --name-only --cached | grep ".podspec$") ]]; then
    echo "
    由于修改了podspec文件，需要刷新组件列表，可能会花费几秒钟。
    若以下文件发生变更请提交变更。
    
    - .bits/bits_components.yaml
    - modules.json
    "
    swift ./scripts/Tool/Sources/Tool/main.swift .
fi

# echo "step 3: Swiftlint check..."
# #Path to swiftlint

# BASE_DIR=`cd $(dirname $0); cd ..; pwd -P`
# SWIFT_LINT="${BASE_DIR}/Pods/SwiftLint/swiftlint"
# echo $BASE_DIR $SWIFT_LINT
# EXCLUDE=':!Modules'

# for SUB_DIR in "." "Modules/Messenger" "Modules/Security" "Modules/SpaceKit"
# do
#     echo "Path: ${SUB_DIR}"
#     #if $SWIFT_LINT >/dev/null 2>&1; then
#     count=0
#     ##### Check for modified files in unstaged/Staged area #####
#     for file_path in $(git diff --name-only --cached -- "${BASE_DIR}/${SUB_DIR}" ${EXCLUDE} | grep ".swift$"); do
#         # check file exist
#         if [ -e "$file_path" ]; then
#             export SCRIPT_INPUT_FILE_$count=$file_path
#             count=$((count + 1))
#         fi
#     done

#     ##### Make the count avilable as global variable #####
#     export SCRIPT_INPUT_FILE_COUNT=$count

#     echo "${SUB_DIR} 被修改的swift文件数量：${SCRIPT_INPUT_FILE_COUNT}"

#     ##### Lint files or exit if no files found for lintint #####
#     if [ "$count" -ne 0 ]; then
#         if [[ -e "${SWIFT_LINT}" ]]; then
#             echo "Found lintable files! Linting..."
#             $SWIFT_LINT autocorrect --use-script-input-files
#             $SWIFT_LINT lint --use-script-input-files "${BASE_DIR}/${SUB_DIR}/.swiftlint.yml" #--reporter json
#         else
#             echo "没有找到swiflint文件，请在工程目录下执行pod install 安装swiftlint"
#             exit -1
#         fi
#     else
#         echo "${GREEN}No files to lint!${NC}"
#     fi

#     RESULT+=$?

#     if [ $RESULT -eq 0 ]; then
#         echo ""
#         echo "没有发现lint问题"
#     else
#         if [[ -e "${SWIFT_LINT}" ]]; then
#             $SWIFT_LINT autocorrect --use-script-input-files #尝试自动修复部分问题
#             echo "发现了一些swiftlint问题，如果是'todo'问题请加上todo过期时间，可参考https://realm.github.io/SwiftLint/todo.html"
#         else
#             echo "没有找到swiflint文件，请在工程目录下执行pod install 安装swiftlint"
#             exit -1
#         fi
#     fi
#     EXCLUDE="" # 循环一次以后重置为空
# done
exit $RESULT
