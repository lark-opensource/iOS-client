load './AutoGenerated/BasePodfile'

# 建议使用 `lark_demo` 来进行配置。See more: http://py/ios-lark-demo

# 删除本地残留的 .eescaffold 避免影响 eesc 工作
`eesc_dir=$(git rev-parse --show-toplevel)/Modules/LarKRVC/.eescaffold; ([[ -e $eesc_dir ]] && rm -rf $eesc_dir)`

### demo configuration
lark_demo.use_strict_lock!
lark_demo.disable_swiftlint!
lark_demo.config_binary(strategy: :all) do
  %w[
    # 将使用源码编译的 Pods 放在本数组中
    EENavigator
    OPFoundation
    EEMicroAppSDK
    LarkHTTP
    ByteViewNetwork
    LarkRVC
    LarkSensitivityControl
    LarkStorage
  ].each { |v| source v }
end

lark_demo.base_setup

target 'LarkRVCDemo' do
  lark_demo.use_if_pods!
  pod 'LarkNavigation'
  pod 'LarkQRCode'
  pod 'LarkAccount'
  pod 'RxSwift'
  pod 'RxCocoa'
  pod 'LarkRVC', :path => '../Libs/LarkRVC'
  pod 'LarkMessengerInterface'
  pod 'LarkForward'
  pod 'LarkMine'
  pod 'LarkSDK'
  pod 'PassportDebug'
  pod 'LarkSensitivityControl'
  pod 'LarkStorage'
end

# @param installer [Pod::Installer]
pre_install do |installer|
  lark_demo.base_pre_install installer
end

# @param installer [Pod::Installer]
post_install do |installer|
  lark_demo.base_post_install installer
end

lark_demo.base_flush
