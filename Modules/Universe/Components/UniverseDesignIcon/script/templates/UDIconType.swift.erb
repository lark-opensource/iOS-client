//
// Generated by FetchIcon.rb
//
// Resource version: <%= version %>
// Update time: <%= Time.now.strftime("%Y/%m/%d %H:%M") %>
//

import Foundation

// swiftlint:disable file_length
public enum UDIconType: String, CaseIterable {
<%# ignore numerous minor requests -- focus on iconNameHash %>
<% iconNameHash.keys.sort.each do |iconName| %>
    case <%= iconName %>
<% end %>
}

// MARK: - Deprecated Icons

public extension UDIconType {
<% deprecatedIconHash.keys.sort.each do |deprecatedName| %>

    @available(*, deprecated, renamed: "<%= deprecatedIconHash[deprecatedName] %>")
    static var <%= deprecatedName %>: UDIconType {
        return .<%= deprecatedIconHash[deprecatedName] %>
    }
<% end %>
}

public extension UDIconType {

    var figmaName: String? {
        return UDIconType.iconMap[self]
    }

    init?(named typeName: String) {
        switch typeName {
<% deprecatedIconHash.keys.sort.each do |deprecatedName| %>
        case "<%= deprecatedName %>": self = .<%= deprecatedIconHash[deprecatedName] %>
<% end %>
        default: self.init(rawValue: typeName)
        }
    }

    // IconType 和 Icon 在 UD 官网的命名
    // 具体映射关系如下： cloudDownloadOutlined : "icon_cloud-download_outlined"
    private static var iconMap: [UDIconType: String] = [
<% figmaNameMap.keys.sort.each do |iconKey| %>
        .<%= iconKey %>: "<%= figmaNameMap[iconKey] %>",
<% end %>
    ]
}

// swiftlint:enable file_length