//
//  OpenPluginGetVideoInfoModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 27843
//
//  类型声明默认为internal, 如需被外部Module引用, 请在上行添加
//  /** anycode-lint-ignore */
//  public
//  /** anycode-lint-ignore */

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginGetVideoInfoRequest
final class OpenPluginGetVideoInfoRequest: OpenAPIBaseParams {
    
    /// description: 视频的路径，支持小程序文件系统（用户目录、临时目录、包目录）下的路径
    /// 示例值：ttfile://temp/test-video.mp4
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "src",
            validChecker: OpenAPIValidChecker.length(0.nextUp...))
    var src: String
    
    /// description: 是否支持网络路径，私有属性。即使设置值为true，也需要在开平配置当前app_id的白名单才可使用。
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "isSupportNetworkURL",
            defaultValue: false)
    var isSupportNetworkURL: Bool
    
    override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_src, _isSupportNetworkURL]
    }
}

// MARK: - OpenPluginGetVideoInfoResponse
final class OpenPluginGetVideoInfoResponse: OpenAPIBaseResult {
    
    /// description: 视频格式
    let type: String
    
    /// description: 视频长度，单位s
    let duration: Double
    
    /// description: 视频大小，单位 kB
    let size: Int
    
    /// description: 视频的长，单位 px
    let height: Int
    
    /// description: 视频的宽，单位 px
    let width: Int
    
    /// description: 视频本地文件路径
    let path: String?
    
    init(type: String, duration: Double, size: Int, height: Int, width: Int, path: String?) {
        self.type = type
        self.duration = duration
        self.size = size
        self.height = height
        self.width = width
        self.path = path
        super.init()
    }
    
    override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["type"] = type
        result["duration"] = duration
        result["size"] = size
        result["height"] = height
        result["width"] = width
        result["path"] = path
        return result
    }
}
