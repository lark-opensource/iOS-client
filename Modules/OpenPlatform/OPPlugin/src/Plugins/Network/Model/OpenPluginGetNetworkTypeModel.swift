//
//  OpenPluginGetNetworkTypeModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 29204
//
//  类型声明默认为internal, 如需被外部Module引用, 请在上行添加
//  /** anycode-lint-ignore */
//  public
//  /** anycode-lint-ignore */

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginGetNetworkTypeResponse
final class OpenPluginGetNetworkTypeResponse: OpenAPIBaseResult {
    
    /// description: 网络类型，可能的取值包括 none、 wifi、 2g、 3g、 4g、5g、unknown。 PC端仅支持 connected 和 none 两种类型
    /// networkType = none 可选的值：none
    /// networkType = wifi 可选的值：wifi
    /// networkType = 2g 可选的值：2g
    /// networkType = 3g 可选的值：3g
    /// networkType = 4g 可选的值：4g
    /// networkType = 5g 可选的值：5g
    /// networkType = unknown 可选的值：unknown
    /// networkType = connected 可选的值：connected
    /// networkType = mobile 可选的值：mobile
    let networkType: NetworkTypeEnum
    
    init(networkType: NetworkTypeEnum) {
        self.networkType = networkType
        super.init()
    }
    
    override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["networkType"] = networkType.rawValue
        return result
    }

    // MARK: NetworkTypeEnum
    enum NetworkTypeEnum: String, OpenAPIEnum {

        /// description: 可选的值：none
        case none = "none"

        /// description: 可选的值：wifi
        case wifi = "wifi"

        /// description: 可选的值：2g
        case twoG = "2g"

        /// description: 可选的值：3g
        case threeG = "3g"

        /// description: 可选的值：4g
        case fourG = "4g"

        /// description: 可选的值：5g
        case fiveG = "5g"

        /// description: 可选的值：unknown
        case unknown = "unknown"

        /// description: 可选的值：connected
        case connected = "connected"

        /// description: 可选的值：mobile
        case mobile = "mobile"

    }
}
