//
//  OpenPluginGetMenuButtonBoundingClientRectAPI.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE on 2023/6/27 07:14:25
//

import Foundation
import LarkOpenAPIModel
import OPPluginManagerAdapter
import TTMicroApp
import LarkOpenPluginManager
import LarkContainer

// MARK: - OpenPluginGetMenuButtonBoundingClientRectAPI
final class OpenPluginGetMenuButtonBoundingClientRectAPI: OpenBasePlugin {
    
    func getMenuButtonBoundingClientRect(
        params: OpenAPIBaseParams,
        context: OpenAPIContext,
        gadgetContext: GadgetAPIContext) -> OpenAPIBaseResponse<OpenPluginGetMenuButtonBoundingClientRectResponse> {
            guard let task = BDPTaskManager.shared().getTaskWith(gadgetContext.uniqueID) else {
                let errMsg = "cannot find task with uniqueID: \(gadgetContext.uniqueID)"
                context.apiTrace.error(errMsg)
                return .failure(error: .init(errno: OpenAPICommonErrno.internalError)
                    .setMonitorMessage(errMsg))
            }
            
            guard let toolBarRect = task.containerVC?.getToolBarRect() else {
                let errMsg = "cannot find containerVC of task with uniqueID: \(gadgetContext.uniqueID)"
                context.apiTrace.error(errMsg)
                return .failure(error: .init(errno: OpenAPICommonErrno.internalError)
                    .setMonitorMessage(errMsg))
            }
            
            return .success(data: .init(
                width: toolBarRect.width,
                height: toolBarRect.height,
                left: toolBarRect.left,
                top: toolBarRect.top,
                right: toolBarRect.right,
                bottom: toolBarRect.bottom))
    }
    
    required init(resolver: UserResolver) {
        super.init(resolver: resolver)
        registerInstanceSyncHandlerGadget(
            for: "getMenuButtonBoundingClientRect", 
            pluginType: Self.self, 
            resultType: OpenPluginGetMenuButtonBoundingClientRectResponse.self) { (this, params, context, gadgetContext) in
            this.getMenuButtonBoundingClientRect(params: params, context: context, gadgetContext: gadgetContext)
        }
    }
}
