//
//  OpenPluginGetConnectedWifiModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 24012
//

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginGetConnectedWifiRequest
final class OpenPluginGetConnectedWifiRequest: OpenAPIBaseParams {
    
    /// description: 缓存超时时间，单位秒。每次成功获取Wi-Fi信息后将其缓存，并记下时间戳。如果下次调用，缓存数据在 cacheTimeout 之内，则返回缓存数据。如果 cacheTimeout  <= 0 或 > 60s，则不使用缓存。
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "cacheTimeout",
            defaultValue: 0)
    public var cacheTimeout: Int
    
    public override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_cacheTimeout];
    }
}

// MARK: - OpenPluginGetConnectedWifiResponse
final class OpenPluginGetConnectedWifiResponse: OpenAPIBaseResult {
    
    /// description: Wi-Fi 的 BSSID
    public let BSSID: String
    
    /// description: Wi-Fi 的 SSID
    public let SSID: String
    
    /// description: Wi-Fi 是否安全（iOS 端：暂不支持）
    public let secure: Bool?
    
    /// description: Wi-Fi 信号强度（iOS 端：暂不支持）
    public let signalStrength: Double?
    
    public init(BSSID: String, SSID: String, secure: Bool?, signalStrength: Double?) {
        self.BSSID = BSSID
        self.SSID = SSID
        self.secure = secure
        self.signalStrength = signalStrength
        super.init()
    }
    
    public override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["BSSID"] = BSSID
        result["SSID"] = SSID
        result["secure"] = secure
        result["signalStrength"] = signalStrength
        return result
    }
}
