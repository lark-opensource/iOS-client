//
//  OpenPluginRequestAccessModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 28943
//
//  类型声明默认为internal, 如需被外部Module引用, 请在上行添加
//  /** anycode-lint-ignore */
//  public
//  /** anycode-lint-ignore */

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginRequestAccessRequest
final class OpenPluginRequestAccessRequest: OpenAPIBaseParams {
    
    /// description: 授予应用权限列表
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "scopeList")
    var scopeList: [String]
    
    /// description: 用来维护请求和回调状态的附加字符串， 在授权完成回调时会附加此参数，应用可以根据此字符串来判断上下文关系。详见https://open.feishu.cn/document/server-docs/authentication-management/login-state-management/obtain-code
    @OpenAPIOptionalParam(
            jsonKey: "state")
    var state: String?
    
    /// description: 应用ID ( 网页应用必须传 )
    @OpenAPIOptionalParam(
            jsonKey: "appID")
    var appID: String?
    
    override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_scopeList, _state, _appID]
    }
}

// MARK: - OpenPluginRequestAccessResponse
final class OpenPluginRequestAccessResponse: OpenAPIBaseResult {
    
    /// description: 临时登录凭证，有效期 3 分钟，只能使用一次
    let code: String
    
    /// description: 一方登录命中标识
    let firstPartyLoginOptEnabled: Bool?
    
    /// description: 用来维护请求和回调状态的附加字符串， 在授权完成回调时会附加此参数，应用可以根据此字符串来判断上下文关系。详见https://open.feishu.cn/document/server-docs/authentication-management/login-state-management/obtain-code
    let state: String?
    
    init(code: String, firstPartyLoginOptEnabled: Bool?, state: String?) {
        self.code = code
        self.firstPartyLoginOptEnabled = firstPartyLoginOptEnabled
        self.state = state
        super.init()
    }
    
    override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["code"] = code
        result["firstPartyLoginOptEnabled"] = firstPartyLoginOptEnabled
        result["state"] = state
        return result
    }
}
