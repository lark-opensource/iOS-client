//
//  OpenPluginUploadFileToCloudModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 26286
//

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginUploadFileToCloudRequest
final class OpenPluginUploadFileToCloudRequest: OpenAPIBaseParams {

    /// description: 需要上传的本地文件路径
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "filePath")
    public var filePath: String

    /// description: 上传后的文件名称，如果不传，则使用本地文件名称
    @OpenAPIOptionalParam(
            jsonKey: "fileName")
    public var fileName: String?

    /// description: 文件上传后所在的挂载空间
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "mountPoint",
            validChecker: OpenAPIValidChecker.length(0.nextUp...))
    public var mountPoint: String

    /// description: 文件上传后所在的文件夹Token
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "mountNodePoint")
    public var mountNodePoint: String

    /// description: 额外字段，允许开发者传入用作额外的业务后端校验
    @OpenAPIOptionalParam(
            jsonKey: "extra")
    public var extra: [AnyHashable: Any]?

    /// description:
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "taskID")
    public var taskID: String

    public override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_filePath, _fileName, _mountPoint, _mountNodePoint, _extra, _taskID]
    }
}

// MARK: - OpenPluginUploadFileToCloudResponse
final class OpenPluginUploadFileToCloudResponse: OpenAPIBaseResult {

    /// description: 上传后的文件名称
    public let fileName: String

    /// description: 文件Token，下载/预览文件的唯一凭证
    public let fileToken: String

    public init(fileName: String, fileToken: String) {
        self.fileName = fileName
        self.fileToken = fileToken
        super.init()
    }

    public override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["fileName"] = fileName
        result["fileToken"] = fileToken
        return result
    }
}
