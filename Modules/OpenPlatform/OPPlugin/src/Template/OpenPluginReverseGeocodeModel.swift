//
//  OpenPluginReverseGeocodeModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 30919
//
//  类型声明默认为internal, 如需被外部Module引用, 请在上行添加
//  /** anycode-lint-ignore */
//  public
//  /** anycode-lint-ignore */

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginReverseGeocodeRequest
final class OpenPluginReverseGeocodeRequest: OpenAPIBaseParams {
    
    /// description: 纬度，范围为 -90~90，正数表示北，负数表示南
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "latitude",
            validChecker: OpenAPIValidChecker.range(-90...90))
    var latitude: Double
    
    /// description: 经度，范围为 -180~180，正数表示东，负数表示西
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "longitude",
            validChecker: OpenAPIValidChecker.range(-180...180))
    var longitude: Double
    
    /// description: 是否需要返回更多逆地理编码信息，如POI、AOI等
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "needExtendedInfo",
            defaultValue: false)
    var needExtendedInfo: Bool
    
    override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_latitude, _longitude, _needExtendedInfo]
    }
}

// MARK: - OpenPluginReverseGeocodeResponse
final class OpenPluginReverseGeocodeResponse: OpenAPIBaseResult {
    
    /// description: 国家
    let country: String
    
    /// description: 省/直辖市
    let province: String
    
    /// description: 市
    let city: String
    
    /// description: 区
    let district: String
    
    /// description: 乡/镇/街道
    let township: String
    
    /// description: 社区
    let neighborhood: String
    
    /// description: 建筑
    let building: String
    
    /// description: 地址
    let address: String
    
    /// description: aois 列表
    let aois: [AoisItem]?
    
    /// description: pois 列表
    let pois: [PoisItem]?
    
    /// description: 门牌信息
    let streetNumberInfo: StreetNumberInfoObject?
    
    init(country: String, province: String, city: String, district: String, township: String, neighborhood: String, building: String, address: String, aois: [AoisItem]?, pois: [PoisItem]?, streetNumberInfo: StreetNumberInfoObject?) {
        self.country = country
        self.province = province
        self.city = city
        self.district = district
        self.township = township
        self.neighborhood = neighborhood
        self.building = building
        self.address = address
        self.aois = aois
        self.pois = pois
        self.streetNumberInfo = streetNumberInfo
        super.init()
    }
    
    override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["country"] = country
        result["province"] = province
        result["city"] = city
        result["district"] = district
        result["township"] = township
        result["neighborhood"] = neighborhood
        result["building"] = building
        result["address"] = address
        result["aois"] = aois?.map({ $0.toJSONDict() })
        result["pois"] = pois?.map({ $0.toJSONDict() })
        result["streetNumberInfo"] = streetNumberInfo?.toJSONDict()
        return result
    }

    // MARK: AoisItem
    final class AoisItem: OpenAPIBaseResult {

        /// description: AOI的行政区划代码
        let adCode: String

        /// description: AOI覆盖区域面积，单位平方米
        let aoiArea: Double

        /// description: AOI的中心点该点纬度
        let latitude: Double

        /// description: AOI的中心点该点经度
        let longitude: Double

        /// description: AOI的id，即其唯一标识
        let aioId: String

        /// description: AOI的名称
        let aoiName: String

        init(adCode: String, aoiArea: Double, latitude: Double, longitude: Double, aioId: String, aoiName: String) {
            self.adCode = adCode
            self.aoiArea = aoiArea
            self.latitude = latitude
            self.longitude = longitude
            self.aioId = aioId
            self.aoiName = aoiName
            super.init()
        }

        override func toJSONDict() -> [AnyHashable : Any] {
            var result: [AnyHashable : Any] = [:]
            result["adCode"] = adCode
            result["aoiArea"] = aoiArea
            result["latitude"] = latitude
            result["longitude"] = longitude
            result["aioId"] = aioId
            result["aoiName"] = aoiName
            return result
        }
    }

    // MARK: PoisItem
    final class PoisItem: OpenAPIBaseResult {

        /// description: POI 的id，即其唯一标识
        let poiId: String

        /// description: POI的名称
        let title: String

        /// description: POI 的类型编码
        let typeCode: String

        /// description: POI 的类型描述
        let typeDes: String

        /// description: 该点纬度
        let latitude: Double

        /// description: 该点经度
        let longitude: Double

        /// description: POI的地址
        let snippet: String

        /// description: POI的电话号码
        let tel: String

        /// description: POI 距离中心点的距离
        let distance: Double

        /// description: POI的停车场类型
        let parkingType: String

        /// description: POI的所在商圈
        let businessArea: String

        init(poiId: String, title: String, typeCode: String, typeDes: String, latitude: Double, longitude: Double, snippet: String, tel: String, distance: Double, parkingType: String, businessArea: String) {
            self.poiId = poiId
            self.title = title
            self.typeCode = typeCode
            self.typeDes = typeDes
            self.latitude = latitude
            self.longitude = longitude
            self.snippet = snippet
            self.tel = tel
            self.distance = distance
            self.parkingType = parkingType
            self.businessArea = businessArea
            super.init()
        }

        override func toJSONDict() -> [AnyHashable : Any] {
            var result: [AnyHashable : Any] = [:]
            result["poiId"] = poiId
            result["title"] = title
            result["typeCode"] = typeCode
            result["typeDes"] = typeDes
            result["latitude"] = latitude
            result["longitude"] = longitude
            result["snippet"] = snippet
            result["tel"] = tel
            result["distance"] = distance
            result["parkingType"] = parkingType
            result["businessArea"] = businessArea
            return result
        }
    }

    // MARK: StreetNumberInfoObject
    final class StreetNumberInfoObject: OpenAPIBaseResult {

        /// description: 门牌信息中的方向 ，指结果点相对地理坐标点的方向
        let direction: String

        /// description: 门牌信息中地理坐标点与结果点的垂直距离
        let distance: Double

        /// description: 门牌信息点纬度
        let latitude: Double

        /// description: 门牌信息点经度
        let longitude: Double

        /// description: 门牌信息中的门牌号码
        let number: String

        /// description: 门牌信息中的街道名称
        let street: String

        init(direction: String, distance: Double, latitude: Double, longitude: Double, number: String, street: String) {
            self.direction = direction
            self.distance = distance
            self.latitude = latitude
            self.longitude = longitude
            self.number = number
            self.street = street
            super.init()
        }

        override func toJSONDict() -> [AnyHashable : Any] {
            var result: [AnyHashable : Any] = [:]
            result["direction"] = direction
            result["distance"] = distance
            result["latitude"] = latitude
            result["longitude"] = longitude
            result["number"] = number
            result["street"] = street
            return result
        }
    }
}
