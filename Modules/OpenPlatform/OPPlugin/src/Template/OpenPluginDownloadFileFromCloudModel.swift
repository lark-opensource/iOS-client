//
//  OpenPluginDownloadFileFromCloudModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 26285
//

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginDownloadFileFromCloudRequest
final class OpenPluginDownloadFileFromCloudRequest: OpenAPIBaseParams {

    /// description: 需要下载的文件Token
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "fileToken")
    public var fileToken: String

    /// description: 文件上传后所在的挂载空间
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "mountPoint",
            validChecker: OpenAPIValidChecker.length(0.nextUp...))
    public var mountPoint: String

    /// description: 文件上传后所在的文件夹Token
    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "mountNodePoint")
    public var mountNodePoint: String

    /// description: 下载文件路径。格式为 ttfile://temp/feishu.png，其中 ttfile://temp/为固定格式，feishu.png 为文件名。ttfile://temp/ 为临时文件目录，每次小程序冷启动会清空。默认下载目录为 ttfile://temp/
    @OpenAPIOptionalParam(
            jsonKey: "filePath")
    public var filePath: String?

    /// description: 额外字段，允许开发者传入用作额外的业务后端校验
    @OpenAPIOptionalParam(
            jsonKey: "extra")
    public var extra: [AnyHashable: Any]?

    @OpenAPIRequiredParam(
            userRequiredWithJsonKey: "taskID")
    public var taskID: String

    public override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_fileToken, _mountPoint, _mountNodePoint, _filePath, _extra, _taskID]
    }
}

// MARK: - OpenPluginDownloadFileFromCloudResponse
final class OpenPluginDownloadFileFromCloudResponse: OpenAPIBaseResult {

    /// description: - 文件路径 (本地路径)。
    ///   - 没传入 filePath 指定文件存储路径时会返回，下载后的文件会存储到一个临时文件，ttfile://temp/
    ///   - 若传入filePath，则返回相同值
    public let tempFilePath: String

    public init(tempFilePath: String) {
        self.tempFilePath = tempFilePath
        super.init()
    }

    public override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["tempFilePath"] = tempFilePath
        return result
    }
}
