//
//  OpenPluginChooseImageModel.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 30847
//
//  类型声明默认为internal, 如需被外部Module引用, 请在上行添加
//  /** anycode-lint-ignore */
//  public
//  /** anycode-lint-ignore */

import Foundation
import LarkOpenAPIModel


// MARK: - OpenPluginChooseImageRequest
final class OpenPluginChooseImageRequest: OpenAPIBaseParams {
    
    /// description: 使用相机拍摄的默认摄像头，仅iOS和Android支持且在sourceType为camera时生效
    /// 注意事项：front: 前置摄像头，back: 后置摄像头
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "cameraDevice",
            defaultValue: "back")
    var cameraDevice: String
    
    /// description: 最多可以选择的文件数量，可支持选择多个图片。使用相机拍照时该字段失效
    /// 注意事项：参数设置如果小于 1，则会使用 9，参数设置如果大于 20，则会使用 20
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "count",
            defaultValue: 9)
    var count: Int
    
    /// description: 表示是选择原图，还是选择压缩图片，PC默认为原图，除非传递['compressed']开启强制压缩
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "sizeType",
            defaultValue: ["original","compressed"])
    var sizeType: [String]
    
    /// description: 指定图片来源为相册或/和相机，PC端不支持该字段
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "sourceType",
            defaultValue: ["album","camera"])
    var sourceType: [String]
    
    /// description: 拍照时是否将照片存入相册，0表示不保存，1表示自动保存
    /// 注意事项：pc不支持此字段
    /// isSaveToAlbum = 0 不保存
    /// isSaveToAlbum = 1 保存
    @OpenAPIRequiredParam(
            userOptionWithJsonKey: "isSaveToAlbum",
            defaultValue: .zero)
    var isSaveToAlbum: IsSaveToAlbumEnum
    
    /// description: 相册完成按钮自定义文案
    @OpenAPIOptionalParam(
            jsonKey: "confirmBtnText")
    var confirmBtnText: String?
    
    override var autoCheckProperties: [OpenAPIParamPropertyProtocol] {
        return [_cameraDevice, _count, _sizeType, _sourceType, _isSaveToAlbum, _confirmBtnText]
    }

    // MARK: IsSaveToAlbumEnum
    enum IsSaveToAlbumEnum: String, OpenAPIEnum {

        /// description: 不保存
        case zero = "0"

        /// description: 保存
        case one = "1"

    }
}

// MARK: - OpenPluginChooseImageResponse
final class OpenPluginChooseImageResponse: OpenAPIBaseResult {
    
    /// description: 图片路径数组
    let tempFilePaths: [String]
    
    /// description: 图片对象数组
    let tempFiles: [TempFilesItem]
    
    init(tempFilePaths: [String], tempFiles: [TempFilesItem]) {
        self.tempFilePaths = tempFilePaths
        self.tempFiles = tempFiles
        super.init()
    }
    
    override func toJSONDict() -> [AnyHashable : Any] {
        var result: [AnyHashable : Any] = [:]
        result["tempFilePaths"] = tempFilePaths
        result["tempFiles"] = tempFiles.map({ $0.toJSONDict() })
        return result
    }

    // MARK: TempFilesItem
    final class TempFilesItem: OpenAPIBaseResult {

        /// description: 图片路径
        let path: String

        /// description: 图片大小，单位byte
        let size: Int

        init(path: String, size: Int) {
            self.path = path
            self.size = size
            super.init()
        }

        override func toJSONDict() -> [AnyHashable : Any] {
            var result: [AnyHashable : Any] = [:]
            result["path"] = path
            result["size"] = size
            return result
        }
    }
}
