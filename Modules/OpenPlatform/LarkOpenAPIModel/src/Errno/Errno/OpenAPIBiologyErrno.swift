//
//  OpenAPIBiologyErrno.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 27644
//  

/// 开放接口-生物认证Errno
public enum OpenAPIBiologyErrno: OpenAPIErrnoProtocol {
    // 获取session失败
    case failedToGetSession
    // 请求身份信息服务端返回数据格式不正确
    case failedIdentity
    // 请求ticket服务端返回数据格式不正确
    case failedUserTicket
    // 服务端错误
    case serverError(errorString: String, errorCode: String)
    // 网络请求失败
    case networkError(errorInfo: String)
    // 实名SDK返回结果为空
    case sdkResponseNull
    // 实名SDK错误
    case certSdkError(errorString: String, errorCode: String)
    // 实名SDK未安装
    case certSdkNotInstalled
    // 认证图片读取失败
    case failedReadImage
    // 资源文件下载超时
    case downloadTimeout
    // 保存图片失败
    case failedSaveImage
    // 实名SDK业务错误
    case certSdkBusinessError(code: String, msg: String)
    // 实名SDK逻辑错误
    case certSdkInternalError(code: String, msg: String)

    public var bizDomain: Int { 10 }
    public var funcDomain: Int { 4 }

    public var rawValue: Int {
        switch self {
        case .failedToGetSession:
            return 1
        case .failedIdentity:
            return 2
        case .failedUserTicket:
            return 3
        case .serverError:
            return 4
        case .networkError:
            return 5
        case .sdkResponseNull:
            return 6
        case .certSdkError:
            return 7
        case .certSdkNotInstalled:
            return 8
        case .failedReadImage:
            return 9
        case .downloadTimeout:
            return 10
        case .failedSaveImage:
            return 11
        case .certSdkBusinessError:
            return 12
        case .certSdkInternalError:
            return 13
        }
    }
    
    public var errString: String {
        switch self {
        case .failedToGetSession:
            return "Failed to get session"
        case .failedIdentity:
            return "Invalid response. Failed to request identity."
        case .failedUserTicket:
            return "Invalid response. Failed to request user_ticket."
        case .serverError(let errorString, let errorCode):
            return "Server error: \(errorString) (error code: \(errorCode))"
        case .networkError(let errorInfo):
            return "Network error: \(errorInfo)"
        case .sdkResponseNull:
            return "Byted_cert SDK returned null"
        case .certSdkError(let errorString, let errorCode):
            return "Byted_cert SDK error: \(errorString) (error code: \(errorCode))"
        case .certSdkNotInstalled:
            return "Byted_cert SDK not installed"
        case .failedReadImage:
            return "Failed to read images for authentication"
        case .downloadTimeout:
            return "Resource download timeout"
        case .failedSaveImage:
            return "Failed to save image"
        case .certSdkBusinessError(let code, let msg):
            return "SDK business error: \(code) (error msg: \(msg))"
        case .certSdkInternalError(let code, let msg):
            return "SDK internal error: \(code) (error msg: \(msg))"
        }
    }
}
