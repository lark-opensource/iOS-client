//
//  OpenAPIInnerAudioErrno.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE. DO NOT MODIFY!!!
//  TICKETID: 26301
//

/// 媒体 - 普通音频Errno
public enum OpenAPIInnerAudioErrno: OpenAPIErrnoProtocol {
    // src 非法错误
    case innerAudioSrcInvalid
    // 播放地址请求失败
    case innerAudioRequestFailed
    // DNS 解析失败
    case innerAudioDnsLookupFailed
    // 播放器内部错误
    case innerAudioAudioEngineError
    // 网络错误
    case innerAudioNetworkError
    // 普通音频抢占播放失败(有优先级更高的业务方在播放)
    case innerAudioHigherPriorityFailed(errorString: String)

    public var bizDomain: Int { 13 }
    public var funcDomain: Int { 3 }

    public var rawValue: Int {
        switch self {
        case .innerAudioSrcInvalid:
            return 101
        case .innerAudioRequestFailed:
            return 102
        case .innerAudioDnsLookupFailed:
            return 103
        case .innerAudioAudioEngineError:
            return 104
        case .innerAudioNetworkError:
            return 105
        case .innerAudioHigherPriorityFailed:
            return 1
        }
    }
    
    public var errString: String {
        switch self {
        case .innerAudioSrcInvalid:
            return "Unable to play. Audio src is invalid"
        case .innerAudioRequestFailed:
            return "Unable to play. Audio src request failed"
        case .innerAudioDnsLookupFailed:
            return "Unable to play. DNS lookup failed"
        case .innerAudioAudioEngineError:
            return "Unable to play. Audio engine error"
        case .innerAudioNetworkError:
            return "Unable to play. Network error"
        case .innerAudioHigherPriorityFailed(let errorString):
            return "Unable to play. A higher priority media event is being processed, \(errorString)"
        }
    }
}
