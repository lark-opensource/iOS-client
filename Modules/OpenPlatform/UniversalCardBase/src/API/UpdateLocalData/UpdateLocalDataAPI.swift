//
//  UniversalCardUpdateLocalDataAPI.swift
//  LarkOpenApis
//
//  GENERATED BY ANYCODE on 2023/5/15 03:31:23
//

import Foundation
import UniversalCardInterface
import LarkOpenAPIModel
import LarkOpenPluginManager
import LarkContainer

// MARK: - UniversalCardUpdateLocalDataAPI
final class UniversalCardUpdateLocalDataAPI: UniversalCardAPIPlugin {
    
    enum APIName: String {
        case UniversalCardUpdateLocalData
    }
    
    static func updateLocalData(
        params: UniversalCardUpdateLocalDataRequest,
        context: UniversalCardAPIContext,
        callback: @escaping (OpenAPIBaseResponse<UniversalCardUpdateLocalDataResponse>) -> Void) {
            guard let actionService = context.cardContext.dependency?.actionService,
                  let bizID = context.cardContext.sourceData?.bizID else {
                let error = OpenAPIError(errno: OpenAPICommonErrno.internalError)
                    .setMonitorMessage("UpdateLocalData fail: action service or bizID is nil")
                callback(.failure(error: error))
                context.apiTrace.error("updateLocalData fail: action service or bizID is nil")
                return
            }
            let actionContext = UniversalCardActionContext(
                trace: context.cardContext.renderingTrace?.subTrace() ?? context.cardContext.trace.subTrace(),
                bizContext: context.cardContext.bizContext
            )
            actionService.updateLocalData(
                context: actionContext,
                bizID: bizID,
                cardID: params.cardID,
                version: params.cardVersion,
                data: params.data
            ) { error, version, data in
                if let version = version, let data = data {
                    let response = UniversalCardUpdateLocalDataResponse(cardVersion: version, data: data)
                    callback(.success(data: response))
                } else if let error = error{
                    let error = OpenAPIError(
                        errno: OpenAPICommonErrno.internalError
                    ).setMonitorMessage("UpdateLocalData fail error: \(error.localizedDescription)")
                    callback(.failure(error: error))
                } else {
                    let error = OpenAPIError(
                        errno: OpenAPICommonErrno.internalError
                    ).setMonitorMessage("UpdateLocalData fail version or data is nil")
                    callback(.failure(error: error))
                }
            }
    }
    
    required public init(resolver: UserResolver) {
        super.init(resolver: resolver)
        registerCardAsyncHandler(
            for: APIName.UniversalCardUpdateLocalData.rawValue,
            pluginType: Self.self,
            paramsType: UniversalCardUpdateLocalDataRequest.self,
            resultType: UniversalCardUpdateLocalDataResponse.self) { ( _, params, context, callback) in
                context.apiTrace.info("updateLocalData API call start")
                Self.updateLocalData(params: params, context: context, callback: callback)
                context.apiTrace.info("updateLocalData API call end")
        }
    }
}
