//
//  DomainKeys.swift
//  AppContainer
//
//  Created by kongkaikai on 2020/4/21.
//

// swiftlint:disable missing_docs
// For easy initialization configuration
import Foundation
public struct DomainKey: RawRepresentable, ExpressibleByStringLiteral, Hashable, Codable {
    public init(stringLiteral value: String) { rawValue = value }

    public init?(rawValue: String) { self.rawValue = rawValue }

    public let rawValue: String
}

public extension DomainKey {
    static let api = Self("api")
    static let file = Self("file")
    static let oapi = Self("oapi")
    static let drive = Self("drive")
    static let docs = Self("docs")
    static let mina = Self("mina")
    static let `open` = Self("open")
    static let docsApi = Self("docs_api")
    static let passport = Self("passport")
    static let internalApi = Self("internal_api")
    static let groupQrCode = Self("group_qr_code")
    static let helpdesk = Self("helpdesk")
    static let contact = Self("contact")
    static let privacy = Self("privacy")
    static let helpDocument = Self("help_document")
    static let docsLong = Self("docs_long")
    static let docsFrontier = Self("docs_frontier")
    static let cjHongbao = Self("cj_hongbao")
    static let device = Self("device")
    static let cdn = Self("cdn")
    static let sentry = Self("sentry")
    static let ttpush = Self("ttpush")
    static let log = Self("log")
    static let docsDrive = Self("docs_drive")
    static let long = Self("long")
    static let people = Self("people")
    static let vod = Self("vod")
    static let shortRtc = Self("short_rtc")
    static let longRtc = Self("long_rtc")
    static let mpApplink = Self("mp_applink")
    static let mpRefer = Self("mp_refer")
    static let mpConfig = Self("mp_config")
    static let mpTt = Self("mp_tt")
    static let mpWebViewComponent = Self("mp_web_view_component")
    static let openAppFeed = Self("open_app_feed")
    static let openMsgCard = Self("open_msg_card")
    static let openAppcenter1 = Self("open_appcenter1")
    static let openAppcenter2 = Self("open_appcenter2")
    static let openMoment = Self("open_moment")
    static let openApiLogin = Self("open_api_login")
    static let suiteImageCdn = Self("suite_image_cdn")
    static let ttCdn = Self("tt_cdn")
    static let suiteReport = Self("suite_report")
    static let tnsReport = Self("tns_report")
    static let openAppcenterCardjump = Self("open_appcenter_cardjump")
    static let docsHome = Self("docs_home")
    static let ttMusical = Self("tt_musical")
    static let docsAccountDeleteNotice = Self("docs_account_delete_notice")
    static let suiteMainDomain = Self("suite_main_domain")
    static let passportCaptcha = Self("passport_captcha")
    static let openAppcenter3 = Self("open_appcenter3")
    static let openJssdkConfig = Self("open_jssdk_config")
    static let suiteSafetynet = Self("suite_safetynet")
    static let openAppInterface = Self("open_app_interface")
    static let suiteSecurityLink = Self("suite_security_link")
    static let docsMainDomain = Self("docs_main_domain")
    static let docsFeResourceUrl = Self("docs_fe_resource_url")
    static let suiteSecsdk = Self("suite_secsdk")
    static let helpCenter = Self("help_center")
    static let ttEt = Self("tt_et")
    static let suiteTklog = Self("suite_tklog")
    static let email = Self("email")
    static let docsPeer = Self("docs_peer")
    static let applinkPeer = Self("applink_peer")
    static let docsFeed = Self("docs_feed")
    static let ttGraylog = Self("tt_graylog")
    static let suitePanCdn = Self("suite_pan_cdn")
    static let ugActivity = Self("ug_activity")
    static let ttApplog = Self("tt_applog")
    static let ttNpth = Self("tt_npth")
    static let ttSlardarSetting = Self("tt_slardar_setting")
    static let ttSlardarReport = Self("tt_slardar_report")
    static let ttSlardarException = Self("tt_slardar_exception")
    static let ttAbtest = Self("tt_abtest")
    static let vcPrivacy = Self("vc_privacy")
    static let suiteAppconfig = Self("suite_appconfig")
    static let ttSlardarCrashHostIos = Self("tt_slardar_crash_host_ios")
    static let ttSlardarExceptionHostIos = Self("tt_slardar_exception_host_ios")
    static let openAppstore = Self("open_appstore")
    static let ttSlardar = Self("tt_slardar")
    static let openApplinkSchemaEnableHost = Self("open_applink_schema_enable_host")
    static let vcMm = Self("vc_mm")
    static let pano = Self("pano")
    static let suiteAdmin = Self("suite_admin")
    static let basicMode = Self("basic_mode")
    static let emm = Self("emm")
    static let vpn = Self("vpn")
    static let ttnetTNC = Self("ttnet_tnc")
    static let ttnetHttpDNS = Self("ttnet_httpdns")
    static let ttnetNetLog = Self("ttnet_netlog")
    static let passportAccounts = Self("passport_accounts")
    static let passportTuring = Self("passport_turing")
    static let passportCookie = Self("passport_cookie")
    static let appbeta = Self("appbeta")
    static let rtcFrontier = Self("rtc_frontier")
    static let rtcDecision = Self("rtc_decision")
    static let rtcDefaultips = Self("rtc_defaultips")
    static let emsOA = Self("ems_oa")
    static let emailCoverCdnPath = Self("mail_cover_cdn_path")
    static let emailBff = Self("email_bff")
    static let securityCompliance = Self("security_and_compliance")
    static let securityWeb = Self("security_web")
    static let tnsLarkReport = Self("tns_report_lark")
    static let securityLoginRestriction = Self("security_login_restriction")
    static let securityData = Self("scs_data")
    static let openPkm = Self("open_pkm")
    static let openMG = Self("open_mg")
}
