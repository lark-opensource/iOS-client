// DO NOT EDIT.
//
// Generated by the Swift generator for OPMonitorCode.
// Source: https://bytedance.feishu.cn/sheets/shtcnCCboz4CUWBUtZkdmZV0PLb?sheet=cQD0L4&table=tblzhLDfRbLMwN3M
// Date:   2021/02/24 15:23
//
// For information on using the generated types, please see the documentation:
//  https://bytedance.feishu.cn/sheets/shtcnCCboz4CUWBUtZkdmZV0PLb

import Foundation
import ECOProbe

// swiftlint:disable number_separator

@objcMembers
public final class PassportMonitorCodeLogin: OPMonitorCode {

    ///
    public static let passport_login_type_start = PassportMonitorCodeLogin(code: 10000, level: OPMonitorLevelNormal, message: "passport_login_type_start")

    /// biz_code 后端透出的业务错误码
    public static let passport_login_type_success = PassportMonitorCodeLogin(code: 10001, level: OPMonitorLevelNormal, message: "passport_login_type_success")

    ///
    public static let passport_login_type_fail = PassportMonitorCodeLogin(code: 10002, level: OPMonitorLevelError, message: "passport_login_type_fail")

    ///
    public static let passport_register_type_start = PassportMonitorCodeLogin(code: 10003, level: OPMonitorLevelNormal, message: "passport_register_type_start")

    ///
    public static let passport_register_type_success = PassportMonitorCodeLogin(code: 10004, level: OPMonitorLevelNormal, message: "passport_register_type_success")

    ///
    public static let passport_register_type_fail = PassportMonitorCodeLogin(code: 10005, level: OPMonitorLevelError, message: "passport_register_type_fail")

    ///
    public static let passport_bind_contact_start = PassportMonitorCodeLogin(code: 10006, level: OPMonitorLevelNormal, message: "passport_bind_contact_start")

    ///
    public static let passport_bind_contact_success = PassportMonitorCodeLogin(code: 10007, level: OPMonitorLevelNormal, message: "passport_bind_contact_success")

    ///
    public static let passport_bind_contact_fail = PassportMonitorCodeLogin(code: 10008, level: OPMonitorLevelError, message: "passport_bind_contact_fail")

    ///
    public static let passport_otp_apply_code_start = PassportMonitorCodeLogin(code: 10009, level: OPMonitorLevelNormal, message: "passport_otp_apply_code_start")

    ///
    public static let passport_otp_apply_code_success = PassportMonitorCodeLogin(code: 10010, level: OPMonitorLevelNormal, message: "passport_otp_apply_code_success")

    ///
    public static let passport_otp_apply_code_fail = PassportMonitorCodeLogin(code: 10011, level: OPMonitorLevelError, message: "passport_otp_apply_code_fail")

    ///
    public static let passport_otp_verify_code_start = PassportMonitorCodeLogin(code: 10012, level: OPMonitorLevelNormal, message: "passport_otp_verify_code_start")

    ///
    public static let passport_otp_verify_code_success = PassportMonitorCodeLogin(code: 10013, level: OPMonitorLevelNormal, message: "passport_otp_verify_code_success")

    ///
    public static let passport_otp_verify_code_fail = PassportMonitorCodeLogin(code: 10014, level: OPMonitorLevelError, message: "passport_otp_verify_code_fail")

    ///
    public static let passport_verify_pwd_start = PassportMonitorCodeLogin(code: 10015, level: OPMonitorLevelNormal, message: "passport_verify_pwd_start")

    ///
    public static let passport_verify_pwd_success = PassportMonitorCodeLogin(code: 10016, level: OPMonitorLevelNormal, message: "passport_verify_pwd_success")

    ///
    public static let passport_verify_pwd_fail = PassportMonitorCodeLogin(code: 10017, level: OPMonitorLevelError, message: "passport_verify_pwd_fail")

    ///
    public static let passport_app_start = PassportMonitorCodeLogin(code: 10018, level: OPMonitorLevelNormal, message: "passport_app_start")

    ///
    public static let passport_app_success = PassportMonitorCodeLogin(code: 10019, level: OPMonitorLevelNormal, message: "passport_app_success")

    ///
    public static let passport_app_fail = PassportMonitorCodeLogin(code: 10020, level: OPMonitorLevelError, message: "passport_app_fail")

    ///
    public static let passport_create_start = PassportMonitorCodeLogin(code: 10021, level: OPMonitorLevelNormal, message: "passport_create_start")

    ///
    public static let passport_create_success = PassportMonitorCodeLogin(code: 10022, level: OPMonitorLevelNormal, message: "passport_create_success")

    ///
    public static let passport_create_fail = PassportMonitorCodeLogin(code: 10023, level: OPMonitorLevelError, message: "passport_create_fail")

    ///
    public static let passport_auth_url_start = PassportMonitorCodeLogin(code: 10024, level: OPMonitorLevelNormal, message: "passport_auth_url_start")

    ///
    public static let passport_auth_url_success = PassportMonitorCodeLogin(code: 10025, level: OPMonitorLevelNormal, message: "passport_auth_url_success")

    ///
    public static let passport_auth_url_fail = PassportMonitorCodeLogin(code: 10026, level: OPMonitorLevelError, message: "passport_auth_url_fail")

    ///
    public static let passport_sso_url_start = PassportMonitorCodeLogin(code: 10027, level: OPMonitorLevelNormal, message: "passport_sso_url_start")

    ///
    public static let passport_sso_url_success = PassportMonitorCodeLogin(code: 10028, level: OPMonitorLevelNormal, message: "passport_sso_url_success")

    ///
    public static let passport_sso_url_fail = PassportMonitorCodeLogin(code: 10029, level: OPMonitorLevelError, message: "passport_sso_url_fail")

    ///
    public static let passport_set_pwd_start = PassportMonitorCodeLogin(code: 10030, level: OPMonitorLevelNormal, message: "passport_set_pwd_start")

    ///
    public static let passport_set_pwd_success = PassportMonitorCodeLogin(code: 10031, level: OPMonitorLevelNormal, message: "passport_set_pwd_success")

    ///
    public static let passport_set_pwd_fail = PassportMonitorCodeLogin(code: 10032, level: OPMonitorLevelError, message: "passport_set_pwd_fail")

    ///
    public static let passport_set_name_start = PassportMonitorCodeLogin(code: 10033, level: OPMonitorLevelNormal, message: "passport_set_name_start")

    ///
    public static let passport_set_name_success = PassportMonitorCodeLogin(code: 10034, level: OPMonitorLevelNormal, message: "passport_set_name_success")

    ///
    public static let passport_set_name_fail = PassportMonitorCodeLogin(code: 10035, level: OPMonitorLevelError, message: "passport_set_name_fail")

    ///
    public static let passport_official_email_join_start = PassportMonitorCodeLogin(code: 10036, level: OPMonitorLevelNormal, message: "passport_official_email_join_start")

    ///
    public static let passport_official_email_join_success = PassportMonitorCodeLogin(code: 10037, level: OPMonitorLevelNormal, message: "passport_official_email_join_success")

    ///
    public static let passport_official_email_join_fail = PassportMonitorCodeLogin(code: 10038, level: OPMonitorLevelError, message: "passport_official_email_join_fail")

    ///
    public static let passport_team_code_confirm_start = PassportMonitorCodeLogin(code: 10039, level: OPMonitorLevelNormal, message: "passport_team_code_confirm_start")

    ///
    public static let passport_team_code_confirm_success = PassportMonitorCodeLogin(code: 10040, level: OPMonitorLevelNormal, message: "passport_team_code_confirm_success")

    ///
    public static let passport_team_code_confirm_fail = PassportMonitorCodeLogin(code: 10041, level: OPMonitorLevelError, message: "passport_team_code_confirm_fail")

    ///
    public static let passport_team_code_join_start = PassportMonitorCodeLogin(code: 10042, level: OPMonitorLevelNormal, message: "passport_team_code_join_start")

    ///
    public static let passport_team_code_join_success = PassportMonitorCodeLogin(code: 10043, level: OPMonitorLevelNormal, message: "passport_team_code_join_success")

    ///
    public static let passport_team_code_join_fail = PassportMonitorCodeLogin(code: 10044, level: OPMonitorLevelError, message: "passport_team_code_join_fail")

    ///
    public static let passport_verify_token_start = PassportMonitorCodeLogin(code: 10045, level: OPMonitorLevelNormal, message: "passport_verify_token_start")

    ///
    public static let passport_verify_token_success = PassportMonitorCodeLogin(code: 10046, level: OPMonitorLevelNormal, message: "passport_verify_token_success")

    ///
    public static let passport_verify_token_fail = PassportMonitorCodeLogin(code: 10047, level: OPMonitorLevelError, message: "passport_verify_token_fail")

    ///
    public static let passport_login_m_auth_start = PassportMonitorCodeLogin(code: 10048, level: OPMonitorLevelNormal, message: "passport_login_m_auth_start")

    ///
    public static let passport_login_m_auth_success = PassportMonitorCodeLogin(code: 10049, level: OPMonitorLevelNormal, message: "passport_login_m_auth_success")

    ///
    public static let passport_login_m_auth_fail = PassportMonitorCodeLogin(code: 10050, level: OPMonitorLevelError, message: "passport_login_m_auth_fail")

    ///
    public static let passport_register_m_auth_start = PassportMonitorCodeLogin(code: 10051, level: OPMonitorLevelNormal, message: "passport_register_m_auth_start")

    ///
    public static let passport_register_m_auth_success = PassportMonitorCodeLogin(code: 10052, level: OPMonitorLevelNormal, message: "passport_register_m_auth_success")

    ///
    public static let passport_register_m_auth_fail = PassportMonitorCodeLogin(code: 10053, level: OPMonitorLevelError, message: "passport_register_m_auth_fail")

    ///
    public static let passport_recover_operator_start = PassportMonitorCodeLogin(code: 10054, level: OPMonitorLevelNormal, message: "passport_recover_operator_start")

    ///
    public static let passport_recover_operator_success = PassportMonitorCodeLogin(code: 10055, level: OPMonitorLevelNormal, message: "passport_recover_operator_success")

    ///
    public static let passport_recover_operator_fail = PassportMonitorCodeLogin(code: 10056, level: OPMonitorLevelError, message: "passport_recover_operator_fail")

    ///
    public static let passport_recover_bankcard_start = PassportMonitorCodeLogin(code: 10057, level: OPMonitorLevelNormal, message: "passport_recover_bankcard_start")

    ///
    public static let passport_recover_bankcard_success = PassportMonitorCodeLogin(code: 10058, level: OPMonitorLevelNormal, message: "passport_recover_bankcard_success")

    ///
    public static let passport_recover_bankcard_fail = PassportMonitorCodeLogin(code: 10059, level: OPMonitorLevelError, message: "passport_recover_bankcard_fail")

    ///
    public static let passport_recover_newmobile_start = PassportMonitorCodeLogin(code: 10060, level: OPMonitorLevelNormal, message: "passport_recover_newmobile_start")

    ///
    public static let passport_recover_newmobile_success = PassportMonitorCodeLogin(code: 10061, level: OPMonitorLevelNormal, message: "passport_recover_newmobile_success")

    ///
    public static let passport_recover_newmobile_fail = PassportMonitorCodeLogin(code: 10062, level: OPMonitorLevelError, message: "passport_recover_newmobile_fail")

    ///
    public static let passport_recover_face_start = PassportMonitorCodeLogin(code: 10063, level: OPMonitorLevelNormal, message: "passport_recover_face_start")

    ///
    public static let passport_recover_face_success = PassportMonitorCodeLogin(code: 10064, level: OPMonitorLevelNormal, message: "passport_recover_face_success")

    ///
    public static let passport_recover_face_fail = PassportMonitorCodeLogin(code: 10065, level: OPMonitorLevelError, message: "passport_recover_face_fail")

    ///
    public static let passport_recover_change_start = PassportMonitorCodeLogin(code: 10066, level: OPMonitorLevelNormal, message: "passport_recover_change_start")

    ///
    public static let passport_recover_change_success = PassportMonitorCodeLogin(code: 10067, level: OPMonitorLevelNormal, message: "passport_recover_change_success")

    ///
    public static let passport_recover_change_fail = PassportMonitorCodeLogin(code: 10068, level: OPMonitorLevelError, message: "passport_recover_change_fail")

    ///
    public static let passport_guest_login_start = PassportMonitorCodeLogin(code: 10069, level: OPMonitorLevelNormal, message: "passport_guest_login_start")

    ///
    public static let passport_guest_login_success = PassportMonitorCodeLogin(code: 10070, level: OPMonitorLevelNormal, message: "passport_guest_login_success")

    ///
    public static let passport_guest_login_fail = PassportMonitorCodeLogin(code: 10071, level: OPMonitorLevelError, message: "passport_guest_login_fail")

    ///
    public static let passport_verify_polling_start = PassportMonitorCodeLogin(code: 10072, level: OPMonitorLevelNormal, message: "passport_verify_polling_start")

    ///
    public static let passport_verify_polling_success = PassportMonitorCodeLogin(code: 10073, level: OPMonitorLevelNormal, message: "passport_verify_polling_success")

    ///
    public static let passport_verify_polling_fail = PassportMonitorCodeLogin(code: 10074, level: OPMonitorLevelError, message: "passport_verify_polling_fail")

    ///
    public static let passport_join_type_start = PassportMonitorCodeLogin(code: 10075, level: OPMonitorLevelNormal, message: "passport_join_type_start")

    ///
    public static let passport_join_type_success = PassportMonitorCodeLogin(code: 10076, level: OPMonitorLevelNormal, message: "passport_join_type_success")

    ///
    public static let passport_join_type_fail = PassportMonitorCodeLogin(code: 10077, level: OPMonitorLevelError, message: "passport_join_type_fail")

    ///
    public static let passport_otp_verify_otp_start = PassportMonitorCodeLogin(code: 10078, level: OPMonitorLevelNormal, message: "passport_otp_verify_otp_start")

    ///
    public static let passport_otp_verify_otp_success = PassportMonitorCodeLogin(code: 10079, level: OPMonitorLevelNormal, message: "passport_otp_verify_otp_success")

    ///
    public static let passport_otp_verify_otp_fail = PassportMonitorCodeLogin(code: 10080, level: OPMonitorLevelError, message: "passport_otp_verify_otp_fail")

    private init(code: Int, level: OPMonitorLevel, message: String) {
        super.init(domain: PassportMonitorCodeLogin.domain, code: code, level: level, message: message)
    }

    public static let domain = "client.passport.login"
}
// swiftlint:enable number_separator
