// DO NOT EDIT.
//
// Generated by the iOS generator for OPMonitorCode.
// Source:   

import Foundation

@objcMembers
public final class EPMClientPassportMonitorAuthorizationCode: OPMonitorCodeBase {

    /** 扫码授权请求开始 */
    public static let qr_login_scan_request_start = EPMClientPassportMonitorAuthorizationCode(code: 10001, level: OPMonitorLevelNormal, message: "qr_login_scan_request_start")

    /** 扫码授权请求成功 */
    public static let qr_login_scan_request_succ = EPMClientPassportMonitorAuthorizationCode(code: 10002, level: OPMonitorLevelNormal, message: "qr_login_scan_request_succ")

    /** 扫码授权请求失败 */
    public static let qr_login_scan_request_fail = EPMClientPassportMonitorAuthorizationCode(code: 10003, level: OPMonitorLevelError, message: "qr_login_scan_request_fail")

    /** 进入一方授权页 */
    public static let page_suite_enter = EPMClientPassportMonitorAuthorizationCode(code: 10004, level: OPMonitorLevelNormal, message: "page_suite_enter")

    /** 进入三方授权页 */
    public static let page_authz_enter = EPMClientPassportMonitorAuthorizationCode(code: 10005, level: OPMonitorLevelNormal, message: "page_authz_enter")

    /** 确认扫码授权请求开始 */
    public static let qr_login_confirm_request_start = EPMClientPassportMonitorAuthorizationCode(code: 10006, level: OPMonitorLevelNormal, message: "qr_login_confirm_request_start")

    /** 确认扫码授权请求成功 */
    public static let qr_login_confirm_request_succ = EPMClientPassportMonitorAuthorizationCode(code: 10007, level: OPMonitorLevelNormal, message: "qr_login_confirm_request_succ")

    /** 确认扫码授权请求失败 */
    public static let qr_login_confirm_request_fail = EPMClientPassportMonitorAuthorizationCode(code: 10008, level: OPMonitorLevelError, message: "qr_login_confirm_request_fail")

    /** 取消扫码授权请求开始 */
    public static let qr_login_cancle_request_start = EPMClientPassportMonitorAuthorizationCode(code: 10009, level: OPMonitorLevelNormal, message: "qr_login_cancle_request_start")

    /** 取消扫码授权请求成功 */
    public static let qr_login_cancle_request_succ = EPMClientPassportMonitorAuthorizationCode(code: 10010, level: OPMonitorLevelNormal, message: "qr_login_cancle_request_succ")

    /** 取消扫码授权请求失败 */
    public static let qr_login_cancle_request_fail = EPMClientPassportMonitorAuthorizationCode(code: 10011, level: OPMonitorLevelError, message: "qr_login_cancle_request_fail")

    /** sso_sdk进入路由启动sso认证 */
    public static let sso_sdk_auth_router_enter = EPMClientPassportMonitorAuthorizationCode(code: 10012, level: OPMonitorLevelNormal, message: "sso_sdk_auth_router_enter")

    /** 进入sso_sdk授权承接页（检查参数） */
    public static let page_sso_sdk_auth_loading_enter = EPMClientPassportMonitorAuthorizationCode(code: 10013, level: OPMonitorLevelNormal, message: "page_sso_sdk_auth_loading_enter")

    /** sso_sdk授权数据请求开始 */
    public static let sso_sdk_login_auth_request_start = EPMClientPassportMonitorAuthorizationCode(code: 10014, level: OPMonitorLevelNormal, message: "sso_sdk_login_auth_request_start")

    /** sso_sdk授权数据请求成功跳转授权确认页 */
    public static let sso_sdk_login_auth_request_succ = EPMClientPassportMonitorAuthorizationCode(code: 10015, level: OPMonitorLevelNormal, message: "sso_sdk_login_auth_request_succ")

    /** sso_sdk授权数据请求失败 */
    public static let sso_sdk_login_auth_request_fail = EPMClientPassportMonitorAuthorizationCode(code: 10016, level: OPMonitorLevelError, message: "sso_sdk_login_auth_request_fail")

    /** 确认授权请求成功 */
    public static let sso_sdk_login_auth_confirm_request_succ = EPMClientPassportMonitorAuthorizationCode(code: 10017, level: OPMonitorLevelNormal, message: "sso_sdk_login_auth_confirm_request_succ")

    /** 确认授权请求失败 */
    public static let sso_sdk_login_auth_confirm_request_fail = EPMClientPassportMonitorAuthorizationCode(code: 10018, level: OPMonitorLevelError, message: "sso_sdk_login_auth_confirm_request_fail")

    /** 取消sso_sdk授权 */
    public static let sso_sdk_login_auth_cancle = EPMClientPassportMonitorAuthorizationCode(code: 10019, level: OPMonitorLevelNormal, message: "sso_sdk_login_auth_cancle")


    private init(code: Int, level:  OPMonitorLevel, message: String) {
        super.init(domain: EPMClientPassportMonitorAuthorizationCode.domain, code: code, level: level, message: message)
    }

    static public let domain = "client.passport.monitor.authorization"
}