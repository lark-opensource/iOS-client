// DO NOT EDIT.
//
// Generated by the iOS generator for OPMonitorCode.
// Source:   

import Foundation

@objcMembers
public final class EPMClientOpenPlatformCardCode: OPMonitorCodeBase {

    /** element id 为空 */
    public static let element_id_is_empty = EPMClientOpenPlatformCardCode(code: 10011, level: OPMonitorLevelWarn, message: "element_id_is_empty")

    /** 加载图片属性失败 */
    public static let messagecard_image_load_property_error = EPMClientOpenPlatformCardCode(code: 10012, level: OPMonitorLevelError, message: "messagecard_image_load_property_error")

    /** 加载图片原始信息失败 */
    public static let messagecard_image_load_origin_error = EPMClientOpenPlatformCardCode(code: 10013, level: OPMonitorLevelError, message: "messagecard_image_load_origin_error")

    /** 打开url不支持 */
    public static let messagecard_url_open_unsupport = EPMClientOpenPlatformCardCode(code: 10014, level: OPMonitorLevelError, message: "messagecard_url_open_unsupport")

    /** 打开url时没有triggerCode方法 */
    public static let messagecard_url_open_without_triggercode_func = EPMClientOpenPlatformCardCode(code: 10015, level: OPMonitorLevelError, message: "messagecard_url_open_without_triggercode_func")

    /** 打开url时没有triggerCode */
    public static let messagecard_url_open_without_triggercode = EPMClientOpenPlatformCardCode(code: 10016, level: OPMonitorLevelError, message: "messagecard_url_open_without_triggercode")

    /** 打开url时url不合法 */
    public static let messagecard_url_open_url_invalid = EPMClientOpenPlatformCardCode(code: 10017, level: OPMonitorLevelError, message: "messagecard_url_open_url_invalid")

    /** 打开url时url间隔太短 */
    public static let messagecard_url_open_url_limt_interval = EPMClientOpenPlatformCardCode(code: 10018, level: OPMonitorLevelError, message: "messagecard_url_open_url_limt_interval")

    /** 消息卡片不允许响应 */
    public static let messagecard_request_not_allow = EPMClientOpenPlatformCardCode(code: 10019, level: OPMonitorLevelError, message: "messagecard_request_not_allow")

    /** 消息卡片打开上一次响应还没有结束 */
    public static let messagecard_request_in_last_process = EPMClientOpenPlatformCardCode(code: 10020, level: OPMonitorLevelError, message: "messagecard_request_in_last_process")

    /** 消息卡片响应失败 */
    public static let messagecard_request_response_fail = EPMClientOpenPlatformCardCode(code: 10021, level: OPMonitorLevelError, message: "messagecard_request_response_fail")

    /** 消息卡片响应成功 */
    public static let messagecard_request_response_success = EPMClientOpenPlatformCardCode(code: 10022, level: OPMonitorLevelNormal, message: "messagecard_request_response_success")

    /** 消息卡片使用本地样式 */
    public static let messagecard_style_use_bundle = EPMClientOpenPlatformCardCode(code: 10023, level: OPMonitorLevelNormal, message: "messagecard_style_use_bundle")

    /** 消息卡片使用缓存样式 */
    public static let messagecard_style_use_cache = EPMClientOpenPlatformCardCode(code: 10024, level: OPMonitorLevelNormal, message: "messagecard_style_use_cache")

    /** 消息卡片解析样式 */
    public static let messagecard_style_parse = EPMClientOpenPlatformCardCode(code: 10025, level: OPMonitorLevelNormal, message: "messagecard_style_parse")

    /** 消息卡片样式更新 */
    public static let messagecard_style_update = EPMClientOpenPlatformCardCode(code: 10026, level: OPMonitorLevelNormal, message: "messagecard_style_update")

    /** 消息卡片样式管理 */
    public static let messagecard_style_manage = EPMClientOpenPlatformCardCode(code: 10027, level: OPMonitorLevelNormal, message: "messagecard_style_manage")

    /** 当 Action 为 null 时，上报该埋点 */
    public static let messagecard_action_data_error = EPMClientOpenPlatformCardCode(code: 10028, level: OPMonitorLevelNormal, message: "messagecard_action_data_error")

    /** Action 中的 url 为 null 上报改埋点 */
    public static let messagecard_action_url_error = EPMClientOpenPlatformCardCode(code: 10029, level: OPMonitorLevelNormal, message: "messagecard_action_url_error")
    
    /** fromVC 为 nil*/
    public static let messagecard_from_vc_error = EPMClientOpenPlatformCardCode(code: 10030, level: OPMonitorLevelError, message: "messagecard_from_vc_error")

    /** 消息卡片整体流程成功 */
    public static let messagecard_loading_success = EPMClientOpenPlatformCardCode(code: 10040, level: OPMonitorLevelNormal, message: "messagecard_loading_success")

    /** 消息卡片 Action 结果 */
    public static let messagecard_action_result = EPMClientOpenPlatformCardCode(code: 10050, level: OPMonitorLevelNormal, message: "messagecard_action_result")

    /** 消息卡片 Action 监听器失败 */
    public static let messagecard_action_service_fail = EPMClientOpenPlatformCardCode(code: 10051, level: OPMonitorLevelNormal, message: "messagecard_action_service_fail")

    /** lynx消息卡片开始处理埋点 */
    public static let messagecard_initdata_prepare = EPMClientOpenPlatformCardCode(code: 10070, level: OPMonitorLevelNormal, message: "messagecard_initdata_prepare")

    /** 消息卡片 page start load埋点 */
    public static let messagecard_template_load_start = EPMClientOpenPlatformCardCode(code: 10071, level: OPMonitorLevelNormal, message: "messagecard_template_load_start")

    /** 消息卡片load success 加载成功埋点 */
    public static let messagecard_template_load_finish = EPMClientOpenPlatformCardCode(code: 10072, level: OPMonitorLevelNormal, message: "messagecard_template_load_finish")

    /** 渲染完成上报该埋点 */
    public static let messagecard_page_render_finish = EPMClientOpenPlatformCardCode(code: 10073, level: OPMonitorLevelNormal, message: "messagecard_page_render_finish")

    /** 渲染组件构建完成上报该埋点 */
    public static let messagecard_create_view_finish = EPMClientOpenPlatformCardCode(code: 10074, level: OPMonitorLevelNormal, message: "messagecard_create_view_finish")

    /** 当 Template.js 执行结束且没有出现数据异常和组件异常 */
    public static let messagecard_js_execute_success = EPMClientOpenPlatformCardCode(code: 10075, level: OPMonitorLevelNormal, message: "messagecard_js_execute_success")

    /** 当 Template.js(pc 对应消息卡片渲染 SDK) 执行过程中出现数据异常和组件异常 */
    public static let messagecard_js_execute_error = EPMClientOpenPlatformCardCode(code: 10076, level: OPMonitorLevelNormal, message: "messagecard_js_execute_error")

    /** 当 Lynx callback error */
    public static let messagecard_lynx_error = EPMClientOpenPlatformCardCode(code: 10077, level: OPMonitorLevelNormal, message: "messagecard_lynx_error")

    /** 当 Lynx callback error */
    public static let messagecard_render_start = EPMClientOpenPlatformCardCode(code: 10078, level: OPMonitorLevelNormal, message: "messagecard_render_start")

    /** Action 类型为 request 类型 &#38;&#38; Action 发送网络请求到 rust  callback onSuccess 时上报 */
    public static let messagecard_request_success = EPMClientOpenPlatformCardCode(code: 10060, level: OPMonitorLevelNormal, message: "messagecard_request_success")

    /** Action 类型为 request 类型 &#38;&#38;出现异常 */
    public static let messagecard_request_data_error = EPMClientOpenPlatformCardCode(code: 10061, level: OPMonitorLevelNormal, message: "messagecard_request_data_error")

    /** Action 类型为 request 类型 &#38;&#38; 当前异常类型为网络异常 */
    public static let messagecard_request_network_error = EPMClientOpenPlatformCardCode(code: 10062, level: OPMonitorLevelNormal, message: "messagecard_request_network_error")

    /** Action 类型为 open url 类型 &#38;&#38;调用主端 open url API 成功，上报该埋点 */
    public static let messagecard_open_url_success = EPMClientOpenPlatformCardCode(code: 10063, level: OPMonitorLevelNormal, message: "messagecard_open_url_success")

    /** 当点击的 Action 是open url 时，当 url startWith &#34;lark://msgcard/unsupported_action&#34;则进行上报 */
    public static let lynx_messagecard_url_open_unsupport = EPMClientOpenPlatformCardCode(code: 10064, level: OPMonitorLevelNormal, message: "lynx_messagecard_url_open_unsupport")

    /** 消息卡片 Action 监听器失败 */
    public static let lynx_messagecard_url_open_without_triggercode = EPMClientOpenPlatformCardCode(code: 10065, level: OPMonitorLevelNormal, message: "lynx_messagecard_url_open_without_triggercode")

    /** 当点击 Action 是打开 url 时，当添加 tiggerCode 到 url 时，如果 tiggerCode = null  &#38;&#38; url 为小程序 url 时，则上报该埋点 */
    public static let messagecard_request_time_out = EPMClientOpenPlatformCardCode(code: 10066, level: OPMonitorLevelNormal, message: "messagecard_request_time_out")

    /** 调用RustSDK的JSON_CARD_TO_PB的callback onSuccess 时上报 */
    public static let messagecard_card_json2pb_success = EPMClientOpenPlatformCardCode(code: 10067, level: OPMonitorLevelNormal, message: "messagecard_card_json2pb_success")

    /** 调用RustSDK的JSON_CARD_TO_PB的callback onError 时上报 */
    public static let messagecard_card_json2pb_error = EPMClientOpenPlatformCardCode(code: 10068, level: OPMonitorLevelNormal, message: "messagecard_card_json2pb_error")

    /** 调用RustSDK的SEND_PREVIEW_CARD的callback onSuccess 时上报 */
    public static let messagecard_send_preview_card_success = EPMClientOpenPlatformCardCode(code: 10069, level: OPMonitorLevelNormal, message: "messagecard_send_preview_card_success")

    /** 调用RustSDK的SEND_PREVIEW_CARD的callback onError 时上报 */
    public static let messagecard_send_preview_card_error = EPMClientOpenPlatformCardCode(code: 10079, level: OPMonitorLevelNormal, message: "messagecard_send_preview_card_error")

    /** 卡片整体渲染完成，上报卡片中业务数据埋点 */
    public static let card_component_render = EPMClientOpenPlatformCardCode(code: 10080, level: OPMonitorLevelNormal, message: "card_component_render")
    /** 端通信成功投递到调用业务方 */
    public static let card_client_message_success = EPMClientOpenPlatformCardCode(code: 10081, level: OPMonitorLevelNormal, message: "card_client_message_success")
    /** 端通信成功投递到调用业务方 */
    public static let card_client_message_error = EPMClientOpenPlatformCardCode(code: 10082, level: OPMonitorLevelNormal, message: "card_client_message_error")
    /** 端通信未知错误 */
    public static let card_client_message_unknown_error = EPMClientOpenPlatformCardCode(code: 10083, level: OPMonitorLevelNormal, message: "card_client_message_unknown_error")

    private init(code: Int, level: OPMonitorLevel, message: String) {
        super.init(domain: EPMClientOpenPlatformCardCode.domain, code: code, level: level, message: message)
    }

    static public let domain = "client.open_platform.card"
}
